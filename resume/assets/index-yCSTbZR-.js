function G2(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
* @vue/shared v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function ou(i,e){const t=new Set(i.split(","));return n=>t.has(n)}const Ke={},zr=[],Qt=()=>{},Q0=()=>!1,Ha=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&(i.charCodeAt(2)>122||i.charCodeAt(2)<97),au=i=>i.startsWith("onUpdate:"),Pt=Object.assign,lu=(i,e)=>{const t=i.indexOf(e);t>-1&&i.splice(t,1)},ey=Object.prototype.hasOwnProperty,Ge=(i,e)=>ey.call(i,e),Ie=Array.isArray,Ps=i=>Ga(i)==="[object Map]",ty=i=>Ga(i)==="[object Set]",Fe=i=>typeof i=="function",_t=i=>typeof i=="string",cs=i=>typeof i=="symbol",ut=i=>i!==null&&typeof i=="object",Od=i=>(ut(i)||Fe(i))&&Fe(i.then)&&Fe(i.catch),ny=Object.prototype.toString,Ga=i=>ny.call(i),iy=i=>Ga(i).slice(8,-1),ry=i=>Ga(i)==="[object Object]",cu=i=>_t(i)&&i!=="NaN"&&i[0]!=="-"&&""+parseInt(i,10)===i,Is=ou(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ka=i=>{const e=Object.create(null);return t=>e[t]||(e[t]=i(t))},sy=/-(\w)/g,$i=ka(i=>i.replace(sy,(e,t)=>t?t.toUpperCase():"")),oy=/\B([A-Z])/g,rr=ka(i=>i.replace(oy,"-$1").toLowerCase()),Ud=ka(i=>i.charAt(0).toUpperCase()+i.slice(1)),Tl=ka(i=>i?"on".concat(Ud(i)):""),oi=(i,e)=>!Object.is(i,e),Al=(i,...e)=>{for(let t=0;t<i.length;t++)i[t](...e)},Hd=(i,e,t,n=!1)=>{Object.defineProperty(i,e,{configurable:!0,enumerable:!1,writable:n,value:t})},ay=i=>{const e=parseFloat(i);return isNaN(e)?i:e};let Ih;const Gd=()=>Ih||(Ih=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function uu(i){if(Ie(i)){const e={};for(let t=0;t<i.length;t++){const n=i[t],r=_t(n)?hy(n):uu(n);if(r)for(const s in r)e[s]=r[s]}return e}else if(_t(i)||ut(i))return i}const ly=/;(?![^(]*\))/g,cy=/:([^]+)/,uy=/\/\*[^]*?\*\//g;function hy(i){const e={};return i.replace(uy,"").split(ly).forEach(t=>{if(t){const n=t.split(cy);n.length>1&&(e[n[0].trim()]=n[1].trim())}}),e}function Va(i){let e="";if(_t(i))e=i;else if(Ie(i))for(let t=0;t<i.length;t++){const n=Va(i[t]);n&&(e+=n+" ")}else if(ut(i))for(const t in i)i[t]&&(e+=t+" ");return e.trim()}const fy="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",dy=ou(fy);function kd(i){return!!i||i===""}/**
* @vue/reactivity v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let an;class py{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=an,!e&&an&&(this.index=(an.scopes||(an.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=an;try{return an=this,e()}finally{an=t}}}on(){an=this}off(){an=this.parent}stop(e){if(this._active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this._active=!1}}}function my(i,e=an){e&&e.active&&e.effects.push(i)}function gy(){return an}let Gi;class hu{constructor(e,t,n,r){this.fn=e,this.trigger=t,this.scheduler=n,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,my(this,r)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,fi();for(let e=0;e<this._depsLength;e++){const t=this.deps[e];if(t.computed&&(yy(t.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),di()}return this._dirtyLevel>=4}set dirty(e){this._dirtyLevel=e?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let e=ti,t=Gi;try{return ti=!0,Gi=this,this._runnings++,Dh(this),this.fn()}finally{Fh(this),this._runnings--,Gi=t,ti=e}}stop(){this.active&&(Dh(this),Fh(this),this.onStop&&this.onStop(),this.active=!1)}}function yy(i){return i.value}function Dh(i){i._trackId++,i._depsLength=0}function Fh(i){if(i.deps.length>i._depsLength){for(let e=i._depsLength;e<i.deps.length;e++)Vd(i.deps[e],i);i.deps.length=i._depsLength}}function Vd(i,e){const t=i.get(e);t!==void 0&&e._trackId!==t&&(i.delete(e),i.size===0&&i.cleanup())}let ti=!0,wc=0;const Wd=[];function fi(){Wd.push(ti),ti=!1}function di(){const i=Wd.pop();ti=i===void 0?!0:i}function fu(){wc++}function du(){for(wc--;!wc&&bc.length;)bc.shift()()}function qd(i,e,t){if(e.get(i)!==i._trackId){e.set(i,i._trackId);const n=i.deps[i._depsLength];n!==e?(n&&Vd(n,i),i.deps[i._depsLength++]=e):i._depsLength++}}const bc=[];function Xd(i,e,t){fu();for(const n of i.keys()){let r;n._dirtyLevel<e&&(r!=null?r:r=i.get(n)===n._trackId)&&(n._shouldSchedule||(n._shouldSchedule=n._dirtyLevel===0),n._dirtyLevel=e),n._shouldSchedule&&(r!=null?r:r=i.get(n)===n._trackId)&&(n.trigger(),(!n._runnings||n.allowRecurse)&&n._dirtyLevel!==2&&(n._shouldSchedule=!1,n.scheduler&&bc.push(n.scheduler)))}du()}const Yd=(i,e)=>{const t=new Map;return t.cleanup=i,t.computed=e,t},Mc=new WeakMap,ki=Symbol(""),Sc=Symbol("");function Ht(i,e,t){if(ti&&Gi){let n=Mc.get(i);n||Mc.set(i,n=new Map);let r=n.get(t);r||n.set(t,r=Yd(()=>n.delete(t))),qd(Gi,r)}}function Dn(i,e,t,n,r,s){const o=Mc.get(i);if(!o)return;let a=[];if(e==="clear")a=[...o.values()];else if(t==="length"&&Ie(i)){const l=Number(n);o.forEach((c,u)=>{(u==="length"||!cs(u)&&u>=l)&&a.push(c)})}else switch(t!==void 0&&a.push(o.get(t)),e){case"add":Ie(i)?cu(t)&&a.push(o.get("length")):(a.push(o.get(ki)),Ps(i)&&a.push(o.get(Sc)));break;case"delete":Ie(i)||(a.push(o.get(ki)),Ps(i)&&a.push(o.get(Sc)));break;case"set":Ps(i)&&a.push(o.get(ki));break}fu();for(const l of a)l&&Xd(l,4);du()}const xy=ou("__proto__,__v_isRef,__isVue"),$d=new Set(Object.getOwnPropertyNames(Symbol).filter(i=>i!=="arguments"&&i!=="caller").map(i=>Symbol[i]).filter(cs)),Nh=vy();function vy(){const i={};return["includes","indexOf","lastIndexOf"].forEach(e=>{i[e]=function(...t){const n=qe(this);for(let s=0,o=this.length;s<o;s++)Ht(n,"get",s+"");const r=n[e](...t);return r===-1||r===!1?n[e](...t.map(qe)):r}}),["push","pop","shift","unshift","splice"].forEach(e=>{i[e]=function(...t){fi(),fu();const n=qe(this)[e].apply(this,t);return du(),di(),n}}),i}function _y(i){cs(i)||(i=String(i));const e=qe(this);return Ht(e,"has",i),e.hasOwnProperty(i)}class Jd{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,n){const r=this._isReadonly,s=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return s;if(t==="__v_raw")return n===(r?s?Dy:Qd:s?Kd:Zd).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(n)?e:void 0;const o=Ie(e);if(!r){if(o&&Ge(Nh,t))return Reflect.get(Nh,t,n);if(t==="hasOwnProperty")return _y}const a=Reflect.get(e,t,n);return(cs(t)?$d.has(t):xy(t))||(r||Ht(e,"get",t),s)?a:Gt(a)?o&&cu(t)?a:a.value:ut(a)?r?ep(a):gu(a):a}}class jd extends Jd{constructor(e=!1){super(!1,e)}set(e,t,n,r){let s=e[t];if(!this._isShallow){const l=Ji(s);if(!Vr(n)&&!Ji(n)&&(s=qe(s),n=qe(n)),!Ie(e)&&Gt(s)&&!Gt(n))return l?!1:(s.value=n,!0)}const o=Ie(e)&&cu(t)?Number(t)<e.length:Ge(e,t),a=Reflect.set(e,t,n,r);return e===qe(r)&&(o?oi(n,s)&&Dn(e,"set",t,n):Dn(e,"add",t,n)),a}deleteProperty(e,t){const n=Ge(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&n&&Dn(e,"delete",t,void 0),r}has(e,t){const n=Reflect.has(e,t);return(!cs(t)||!$d.has(t))&&Ht(e,"has",t),n}ownKeys(e){return Ht(e,"iterate",Ie(e)?"length":ki),Reflect.ownKeys(e)}}class wy extends Jd{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const by=new jd,My=new wy,Sy=new jd(!0);const pu=i=>i,Wa=i=>Reflect.getPrototypeOf(i);function To(i,e,t=!1,n=!1){i=i.__v_raw;const r=qe(i),s=qe(e);t||(oi(e,s)&&Ht(r,"get",e),Ht(r,"get",s));const{has:o}=Wa(r),a=n?pu:t?xu:ks;if(o.call(r,e))return a(i.get(e));if(o.call(r,s))return a(i.get(s));i!==r&&i.get(e)}function Ao(i,e=!1){const t=this.__v_raw,n=qe(t),r=qe(i);return e||(oi(i,r)&&Ht(n,"has",i),Ht(n,"has",r)),i===r?t.has(i):t.has(i)||t.has(r)}function Co(i,e=!1){return i=i.__v_raw,!e&&Ht(qe(i),"iterate",ki),Reflect.get(i,"size",i)}function Bh(i,e=!1){!e&&!Vr(i)&&!Ji(i)&&(i=qe(i));const t=qe(this);return Wa(t).has.call(t,i)||(t.add(i),Dn(t,"add",i,i)),this}function zh(i,e,t=!1){!t&&!Vr(e)&&!Ji(e)&&(e=qe(e));const n=qe(this),{has:r,get:s}=Wa(n);let o=r.call(n,i);o||(i=qe(i),o=r.call(n,i));const a=s.call(n,i);return n.set(i,e),o?oi(e,a)&&Dn(n,"set",i,e):Dn(n,"add",i,e),this}function Oh(i){const e=qe(this),{has:t,get:n}=Wa(e);let r=t.call(e,i);r||(i=qe(i),r=t.call(e,i)),n&&n.call(e,i);const s=e.delete(i);return r&&Dn(e,"delete",i,void 0),s}function Uh(){const i=qe(this),e=i.size!==0,t=i.clear();return e&&Dn(i,"clear",void 0,void 0),t}function Lo(i,e){return function(n,r){const s=this,o=s.__v_raw,a=qe(o),l=e?pu:i?xu:ks;return!i&&Ht(a,"iterate",ki),o.forEach((c,u)=>n.call(r,l(c),l(u),s))}}function Ro(i,e,t){return function(...n){const r=this.__v_raw,s=qe(r),o=Ps(s),a=i==="entries"||i===Symbol.iterator&&o,l=i==="keys"&&o,c=r[i](...n),u=t?pu:e?xu:ks;return!e&&Ht(s,"iterate",l?Sc:ki),{next(){const{value:h,done:f}=c.next();return f?{value:h,done:f}:{value:a?[u(h[0]),u(h[1])]:u(h),done:f}},[Symbol.iterator](){return this}}}}function Vn(i){return function(...e){return i==="delete"?!1:i==="clear"?void 0:this}}function Ey(){const i={get(s){return To(this,s)},get size(){return Co(this)},has:Ao,add:Bh,set:zh,delete:Oh,clear:Uh,forEach:Lo(!1,!1)},e={get(s){return To(this,s,!1,!0)},get size(){return Co(this)},has:Ao,add(s){return Bh.call(this,s,!0)},set(s,o){return zh.call(this,s,o,!0)},delete:Oh,clear:Uh,forEach:Lo(!1,!0)},t={get(s){return To(this,s,!0)},get size(){return Co(this,!0)},has(s){return Ao.call(this,s,!0)},add:Vn("add"),set:Vn("set"),delete:Vn("delete"),clear:Vn("clear"),forEach:Lo(!0,!1)},n={get(s){return To(this,s,!0,!0)},get size(){return Co(this,!0)},has(s){return Ao.call(this,s,!0)},add:Vn("add"),set:Vn("set"),delete:Vn("delete"),clear:Vn("clear"),forEach:Lo(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(s=>{i[s]=Ro(s,!1,!1),t[s]=Ro(s,!0,!1),e[s]=Ro(s,!1,!0),n[s]=Ro(s,!0,!0)}),[i,t,e,n]}const[Ty,Ay,Cy,Ly]=Ey();function mu(i,e){const t=e?i?Ly:Cy:i?Ay:Ty;return(n,r,s)=>r==="__v_isReactive"?!i:r==="__v_isReadonly"?i:r==="__v_raw"?n:Reflect.get(Ge(t,r)&&r in n?t:n,r,s)}const Ry={get:mu(!1,!1)},Py={get:mu(!1,!0)},Iy={get:mu(!0,!1)};const Zd=new WeakMap,Kd=new WeakMap,Qd=new WeakMap,Dy=new WeakMap;function Fy(i){switch(i){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ny(i){return i.__v_skip||!Object.isExtensible(i)?0:Fy(iy(i))}function gu(i){return Ji(i)?i:yu(i,!1,by,Ry,Zd)}function By(i){return yu(i,!1,Sy,Py,Kd)}function ep(i){return yu(i,!0,My,Iy,Qd)}function yu(i,e,t,n,r){if(!ut(i)||i.__v_raw&&!(e&&i.__v_isReactive))return i;const s=r.get(i);if(s)return s;const o=Ny(i);if(o===0)return i;const a=new Proxy(i,o===2?n:t);return r.set(i,a),a}function Ds(i){return Ji(i)?Ds(i.__v_raw):!!(i&&i.__v_isReactive)}function Ji(i){return!!(i&&i.__v_isReadonly)}function Vr(i){return!!(i&&i.__v_isShallow)}function tp(i){return i?!!i.__v_raw:!1}function qe(i){const e=i&&i.__v_raw;return e?qe(e):i}function zy(i){return Object.isExtensible(i)&&Hd(i,"__v_skip",!0),i}const ks=i=>ut(i)?gu(i):i,xu=i=>ut(i)?ep(i):i;class np{constructor(e,t,n,r){this.getter=e,this._setter=t,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new hu(()=>e(this._value),()=>wa(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!r,this.__v_isReadonly=n}get value(){const e=qe(this);return(!e._cacheable||e.effect.dirty)&&oi(e._value,e._value=e.effect.run())&&wa(e,4),ip(e),e.effect._dirtyLevel>=2&&wa(e,2),e._value}set value(e){this._setter(e)}get _dirty(){return this.effect.dirty}set _dirty(e){this.effect.dirty=e}}function Oy(i,e,t=!1){let n,r;const s=Fe(i);return s?(n=i,r=Qt):(n=i.get,r=i.set),new np(n,r,s||!r,t)}function ip(i){var e;ti&&Gi&&(i=qe(i),qd(Gi,(e=i.dep)!=null?e:i.dep=Yd(()=>i.dep=void 0,i instanceof np?i:void 0)))}function wa(i,e=4,t,n){i=qe(i);const r=i.dep;r&&Xd(r,e)}function Gt(i){return!!(i&&i.__v_isRef===!0)}function Ec(i){return Uy(i,!1)}function Uy(i,e){return Gt(i)?i:new Hy(i,e)}class Hy{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:qe(e),this._value=t?e:ks(e)}get value(){return ip(this),this._value}set value(e){const t=this.__v_isShallow||Vr(e)||Ji(e);e=t?e:qe(e),oi(e,this._rawValue)&&(this._rawValue,this._rawValue=e,this._value=t?e:ks(e),wa(this,4))}}function qt(i){return Gt(i)?i.value:i}const Gy={get:(i,e,t)=>qt(Reflect.get(i,e,t)),set:(i,e,t,n)=>{const r=i[e];return Gt(r)&&!Gt(t)?(r.value=t,!0):Reflect.set(i,e,t,n)}};function rp(i){return Ds(i)?i:new Proxy(i,Gy)}/**
* @vue/runtime-core v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function ni(i,e,t,n){try{return n?i(...n):i()}catch(r){qa(r,e,t)}}function cn(i,e,t,n){if(Fe(i)){const r=ni(i,e,t,n);return r&&Od(r)&&r.catch(s=>{qa(s,e,t)}),r}if(Ie(i)){const r=[];for(let s=0;s<i.length;s++)r.push(cn(i[s],e,t,n));return r}}function qa(i,e,t,n=!0){const r=e?e.vnode:null;if(e){let s=e.parent;const o=e.proxy,a="https://vuejs.org/error-reference/#runtime-".concat(t);for(;s;){const c=s.ec;if(c){for(let u=0;u<c.length;u++)if(c[u](i,o,a)===!1)return}s=s.parent}const l=e.appContext.config.errorHandler;if(l){fi(),ni(l,null,10,[i,o,a]),di();return}}ky(i,t,r,n)}function ky(i,e,t,n=!0){console.error(i)}let Vs=!1,Tc=!1;const Rt=[];let yn=0;const Or=[];let Kn=null,Ni=0;const sp=Promise.resolve();let vu=null;function Vy(i){const e=vu||sp;return i?e.then(this?i.bind(this):i):e}function Wy(i){let e=yn+1,t=Rt.length;for(;e<t;){const n=e+t>>>1,r=Rt[n],s=Ws(r);s<i||s===i&&r.pre?e=n+1:t=n}return e}function _u(i){(!Rt.length||!Rt.includes(i,Vs&&i.allowRecurse?yn+1:yn))&&(i.id==null?Rt.push(i):Rt.splice(Wy(i.id),0,i),op())}function op(){!Vs&&!Tc&&(Tc=!0,vu=sp.then(lp))}function qy(i){const e=Rt.indexOf(i);e>yn&&Rt.splice(e,1)}function Xy(i){Ie(i)?Or.push(...i):(!Kn||!Kn.includes(i,i.allowRecurse?Ni+1:Ni))&&Or.push(i),op()}function Hh(i,e,t=Vs?yn+1:0){for(;t<Rt.length;t++){const n=Rt[t];if(n&&n.pre){if(i&&n.id!==i.uid)continue;Rt.splice(t,1),t--,n()}}}function ap(i){if(Or.length){const e=[...new Set(Or)].sort((t,n)=>Ws(t)-Ws(n));if(Or.length=0,Kn){Kn.push(...e);return}for(Kn=e,Ni=0;Ni<Kn.length;Ni++){const t=Kn[Ni];t.active!==!1&&t()}Kn=null,Ni=0}}const Ws=i=>i.id==null?1/0:i.id,Yy=(i,e)=>{const t=Ws(i)-Ws(e);if(t===0){if(i.pre&&!e.pre)return-1;if(e.pre&&!i.pre)return 1}return t};function lp(i){Tc=!1,Vs=!0,Rt.sort(Yy);try{for(yn=0;yn<Rt.length;yn++){const e=Rt[yn];e&&e.active!==!1&&ni(e,e.i,e.i?15:14)}}finally{yn=0,Rt.length=0,ap(),Vs=!1,vu=null,(Rt.length||Or.length)&&lp()}}let Ut=null,cp=null;function La(i){const e=Ut;return Ut=i,cp=i&&i.type.__scopeId||null,e}function st(i,e=Ut,t){if(!e||i._n)return i;const n=(...r)=>{n._d&&$h(-1);const s=La(e);let o;try{o=i(...r)}finally{La(s),n._d&&$h(1)}return o};return n._n=!0,n._c=!0,n._d=!0,n}function Si(i,e,t,n){const r=i.dirs,s=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];s&&(a.oldValue=s[o].value);let l=a.dir[n];l&&(fi(),cn(l,t,8,[i.el,a,i,e]),di())}}function up(i,e){i.shapeFlag&6&&i.component?up(i.component.subTree,e):i.shapeFlag&128?(i.ssContent.transition=e.clone(i.ssContent),i.ssFallback.transition=e.clone(i.ssFallback)):i.transition=e}/*! #__NO_SIDE_EFFECTS__ */function $y(i,e){return Fe(i)?Pt({name:i.name},e,{setup:i}):i}const Fs=i=>!!i.type.__asyncLoader,hp=i=>i.type.__isKeepAlive;function Jy(i,e){fp(i,"a",e)}function jy(i,e){fp(i,"da",e)}function fp(i,e,t=Ft){const n=i.__wdc||(i.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return i()});if(Xa(e,n,t),t){let r=t.parent;for(;r&&r.parent;)hp(r.parent.vnode)&&Zy(n,e,t,r),r=r.parent}}function Zy(i,e,t,n){const r=Xa(e,i,n,!0);mp(()=>{lu(n[e],r)},t)}function Xa(i,e,t=Ft,n=!1){if(t){const r=t[i]||(t[i]=[]),s=e.__weh||(e.__weh=(...o)=>{fi();const a=uo(t),l=cn(e,t,i,o);return a(),di(),l});return n?r.unshift(s):r.push(s),s}}const Hn=i=>(e,t=Ft)=>{(!Ja||i==="sp")&&Xa(i,(...n)=>e(...n),t)},Ky=Hn("bm"),dp=Hn("m"),Qy=Hn("bu"),ex=Hn("u"),pp=Hn("bum"),mp=Hn("um"),tx=Hn("sp"),nx=Hn("rtg"),ix=Hn("rtc");function rx(i,e=Ft){Xa("ec",i,e)}const sx=Symbol.for("v-ndc");function ox(i,e,t,n){let r;const s=t;if(Ie(i)||_t(i)){r=new Array(i.length);for(let o=0,a=i.length;o<a;o++)r[o]=e(i[o],o,void 0,s)}else{r=new Array(i);for(let o=0;o<i;o++)r[o]=e(o+1,o,void 0,s)}return r}function Cl(i,e,t={},n,r){if(Ut.isCE||Ut.parent&&Fs(Ut.parent)&&Ut.parent.isCE)return e!=="default"&&(t.name=e),Se("slot",t,n);let s=i[e];s&&s._c&&(s._d=!1),en();const o=s&&gp(s(t)),a=Fp(Xt,{key:(t.key||o&&o.key||"_".concat(e))+(!o&&n?"_fb":"")},o||[],o&&i._===1?64:-2);return a.scopeId&&(a.slotScopeIds=[a.scopeId+"-s"]),s&&s._c&&(s._d=!0),a}function gp(i){return i.some(e=>Pa(e)?!(e.type===ai||e.type===Xt&&!gp(e.children)):!0)?i:null}const Ac=i=>i?Bp(i)?Su(i):Ac(i.parent):null,Ns=Pt(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Ac(i.parent),$root:i=>Ac(i.root),$emit:i=>i.emit,$options:i=>wu(i),$forceUpdate:i=>i.f||(i.f=()=>{i.effect.dirty=!0,_u(i.update)}),$nextTick:i=>i.n||(i.n=Vy.bind(i.proxy)),$watch:i=>Rx.bind(i)}),Ll=(i,e)=>i!==Ke&&!i.__isScriptSetup&&Ge(i,e),ax={get({_:i},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:n,data:r,props:s,accessCache:o,type:a,appContext:l}=i;let c;if(e[0]!=="$"){const d=o[e];if(d!==void 0)switch(d){case 1:return n[e];case 2:return r[e];case 4:return t[e];case 3:return s[e]}else{if(Ll(n,e))return o[e]=1,n[e];if(r!==Ke&&Ge(r,e))return o[e]=2,r[e];if((c=i.propsOptions[0])&&Ge(c,e))return o[e]=3,s[e];if(t!==Ke&&Ge(t,e))return o[e]=4,t[e];Cc&&(o[e]=0)}}const u=Ns[e];let h,f;if(u)return e==="$attrs"&&Ht(i.attrs,"get",""),u(i);if((h=a.__cssModules)&&(h=h[e]))return h;if(t!==Ke&&Ge(t,e))return o[e]=4,t[e];if(f=l.config.globalProperties,Ge(f,e))return f[e]},set({_:i},e,t){const{data:n,setupState:r,ctx:s}=i;return Ll(r,e)?(r[e]=t,!0):n!==Ke&&Ge(n,e)?(n[e]=t,!0):Ge(i.props,e)||e[0]==="$"&&e.slice(1)in i?!1:(s[e]=t,!0)},has({_:{data:i,setupState:e,accessCache:t,ctx:n,appContext:r,propsOptions:s}},o){let a;return!!t[o]||i!==Ke&&Ge(i,o)||Ll(e,o)||(a=s[0])&&Ge(a,o)||Ge(n,o)||Ge(Ns,o)||Ge(r.config.globalProperties,o)},defineProperty(i,e,t){return t.get!=null?i._.accessCache[e]=0:Ge(t,"value")&&this.set(i,e,t.value,null),Reflect.defineProperty(i,e,t)}};function Gh(i){return Ie(i)?i.reduce((e,t)=>(e[t]=null,e),{}):i}let Cc=!0;function lx(i){const e=wu(i),t=i.proxy,n=i.ctx;Cc=!1,e.beforeCreate&&kh(e.beforeCreate,i,"bc");const{data:r,computed:s,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:h,mounted:f,beforeUpdate:d,updated:p,activated:y,deactivated:x,beforeDestroy:m,beforeUnmount:g,destroyed:_,unmounted:v,render:S,renderTracked:T,renderTriggered:b,errorCaptured:R,serverPrefetch:H,expose:F,inheritAttrs:P,components:ee,directives:k,filters:W}=e;if(c&&cx(c,n,null),o)for(const q in o){const ie=o[q];Fe(ie)&&(n[q]=ie.bind(t))}if(r){const q=r.call(t,t);ut(q)&&(i.data=gu(q))}if(Cc=!0,s)for(const q in s){const ie=s[q],me=Fe(ie)?ie.bind(t,t):Fe(ie.get)?ie.get.bind(t,t):Qt,we=!Fe(ie)&&Fe(ie.set)?ie.set.bind(t):Qt,ue=Qx({get:me,set:we});Object.defineProperty(n,q,{enumerable:!0,configurable:!0,get:()=>ue.value,set:Me=>ue.value=Me})}if(a)for(const q in a)yp(a[q],n,t,q);if(l){const q=Fe(l)?l.call(t):l;Reflect.ownKeys(q).forEach(ie=>{mx(ie,q[ie])})}u&&kh(u,i,"c");function V(q,ie){Ie(ie)?ie.forEach(me=>q(me.bind(t))):ie&&q(ie.bind(t))}if(V(Ky,h),V(dp,f),V(Qy,d),V(ex,p),V(Jy,y),V(jy,x),V(rx,R),V(ix,T),V(nx,b),V(pp,g),V(mp,v),V(tx,H),Ie(F))if(F.length){const q=i.exposed||(i.exposed={});F.forEach(ie=>{Object.defineProperty(q,ie,{get:()=>t[ie],set:me=>t[ie]=me})})}else i.exposed||(i.exposed={});S&&i.render===Qt&&(i.render=S),P!=null&&(i.inheritAttrs=P),ee&&(i.components=ee),k&&(i.directives=k)}function cx(i,e,t=Qt){Ie(i)&&(i=Lc(i));for(const n in i){const r=i[n];let s;ut(r)?"default"in r?s=ba(r.from||n,r.default,!0):s=ba(r.from||n):s=ba(r),Gt(s)?Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:()=>s.value,set:o=>s.value=o}):e[n]=s}}function kh(i,e,t){cn(Ie(i)?i.map(n=>n.bind(e.proxy)):i.bind(e.proxy),e,t)}function yp(i,e,t,n){const r=n.includes(".")?Pp(t,n):()=>t[n];if(_t(i)){const s=e[i];Fe(s)&&Ma(r,s)}else if(Fe(i))Ma(r,i.bind(t));else if(ut(i))if(Ie(i))i.forEach(s=>yp(s,e,t,n));else{const s=Fe(i.handler)?i.handler.bind(t):e[i.handler];Fe(s)&&Ma(r,s,i)}}function wu(i){const e=i.type,{mixins:t,extends:n}=e,{mixins:r,optionsCache:s,config:{optionMergeStrategies:o}}=i.appContext,a=s.get(e);let l;return a?l=a:!r.length&&!t&&!n?l=e:(l={},r.length&&r.forEach(c=>Ra(l,c,o,!0)),Ra(l,e,o)),ut(e)&&s.set(e,l),l}function Ra(i,e,t,n=!1){const{mixins:r,extends:s}=e;s&&Ra(i,s,t,!0),r&&r.forEach(o=>Ra(i,o,t,!0));for(const o in e)if(!(n&&o==="expose")){const a=ux[o]||t&&t[o];i[o]=a?a(i[o],e[o]):e[o]}return i}const ux={data:Vh,props:Wh,emits:Wh,methods:Ls,computed:Ls,beforeCreate:Dt,created:Dt,beforeMount:Dt,mounted:Dt,beforeUpdate:Dt,updated:Dt,beforeDestroy:Dt,beforeUnmount:Dt,destroyed:Dt,unmounted:Dt,activated:Dt,deactivated:Dt,errorCaptured:Dt,serverPrefetch:Dt,components:Ls,directives:Ls,watch:fx,provide:Vh,inject:hx};function Vh(i,e){return e?i?function(){return Pt(Fe(i)?i.call(this,this):i,Fe(e)?e.call(this,this):e)}:e:i}function hx(i,e){return Ls(Lc(i),Lc(e))}function Lc(i){if(Ie(i)){const e={};for(let t=0;t<i.length;t++)e[i[t]]=i[t];return e}return i}function Dt(i,e){return i?[...new Set([].concat(i,e))]:e}function Ls(i,e){return i?Pt(Object.create(null),i,e):e}function Wh(i,e){return i?Ie(i)&&Ie(e)?[...new Set([...i,...e])]:Pt(Object.create(null),Gh(i),Gh(e!=null?e:{})):e}function fx(i,e){if(!i)return e;if(!e)return i;const t=Pt(Object.create(null),i);for(const n in e)t[n]=Dt(i[n],e[n]);return t}function xp(){return{app:null,config:{isNativeTag:Q0,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let dx=0;function px(i,e){return function(n,r=null){Fe(n)||(n=Pt({},n)),r!=null&&!ut(r)&&(r=null);const s=xp(),o=new WeakSet;let a=!1;const l=s.app={_uid:dx++,_component:n,_props:r,_container:null,_context:s,_instance:null,version:tv,get config(){return s.config},set config(c){},use(c,...u){return o.has(c)||(c&&Fe(c.install)?(o.add(c),c.install(l,...u)):Fe(c)&&(o.add(c),c(l,...u))),l},mixin(c){return s.mixins.includes(c)||s.mixins.push(c),l},component(c,u){return u?(s.components[c]=u,l):s.components[c]},directive(c,u){return u?(s.directives[c]=u,l):s.directives[c]},mount(c,u,h){if(!a){const f=Se(n,r);return f.appContext=s,h===!0?h="svg":h===!1&&(h=void 0),u&&e?e(f,c):i(f,c,h),a=!0,l._container=c,c.__vue_app__=l,Su(f.component)}},unmount(){a&&(i(null,l._container),delete l._container.__vue_app__)},provide(c,u){return s.provides[c]=u,l},runWithContext(c){const u=Ur;Ur=l;try{return c()}finally{Ur=u}}};return l}}let Ur=null;function mx(i,e){if(Ft){let t=Ft.provides;const n=Ft.parent&&Ft.parent.provides;n===t&&(t=Ft.provides=Object.create(n)),t[i]=e}}function ba(i,e,t=!1){const n=Ft||Ut;if(n||Ur){const r=Ur?Ur._context.provides:n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(r&&i in r)return r[i];if(arguments.length>1)return t&&Fe(e)?e.call(n&&n.proxy):e}}const vp={},_p=()=>Object.create(vp),wp=i=>Object.getPrototypeOf(i)===vp;function gx(i,e,t,n=!1){const r={},s=_p();i.propsDefaults=Object.create(null),bp(i,e,r,s);for(const o in i.propsOptions[0])o in r||(r[o]=void 0);t?i.props=n?r:By(r):i.type.props?i.props=r:i.props=s,i.attrs=s}function yx(i,e,t,n){const{props:r,attrs:s,vnode:{patchFlag:o}}=i,a=qe(r),[l]=i.propsOptions;let c=!1;if((n||o>0)&&!(o&16)){if(o&8){const u=i.vnode.dynamicProps;for(let h=0;h<u.length;h++){let f=u[h];if(Ya(i.emitsOptions,f))continue;const d=e[f];if(l)if(Ge(s,f))d!==s[f]&&(s[f]=d,c=!0);else{const p=$i(f);r[p]=Rc(l,a,p,d,i,!1)}else d!==s[f]&&(s[f]=d,c=!0)}}}else{bp(i,e,r,s)&&(c=!0);let u;for(const h in a)(!e||!Ge(e,h)&&((u=rr(h))===h||!Ge(e,u)))&&(l?t&&(t[h]!==void 0||t[u]!==void 0)&&(r[h]=Rc(l,a,h,void 0,i,!0)):delete r[h]);if(s!==a)for(const h in s)(!e||!Ge(e,h))&&(delete s[h],c=!0)}c&&Dn(i.attrs,"set","")}function bp(i,e,t,n){const[r,s]=i.propsOptions;let o=!1,a;if(e)for(let l in e){if(Is(l))continue;const c=e[l];let u;r&&Ge(r,u=$i(l))?!s||!s.includes(u)?t[u]=c:(a||(a={}))[u]=c:Ya(i.emitsOptions,l)||(!(l in n)||c!==n[l])&&(n[l]=c,o=!0)}if(s){const l=qe(t),c=a||Ke;for(let u=0;u<s.length;u++){const h=s[u];t[h]=Rc(r,l,h,c[h],i,!Ge(c,h))}}return o}function Rc(i,e,t,n,r,s){const o=i[t];if(o!=null){const a=Ge(o,"default");if(a&&n===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&Fe(l)){const{propsDefaults:c}=r;if(t in c)n=c[t];else{const u=uo(r);n=c[t]=l.call(null,e),u()}}else n=l}o[0]&&(s&&!a?n=!1:o[1]&&(n===""||n===rr(t))&&(n=!0))}return n}const xx=new WeakMap;function Mp(i,e,t=!1){const n=t?xx:e.propsCache,r=n.get(i);if(r)return r;const s=i.props,o={},a=[];let l=!1;if(!Fe(i)){const u=h=>{l=!0;const[f,d]=Mp(h,e,!0);Pt(o,f),d&&a.push(...d)};!t&&e.mixins.length&&e.mixins.forEach(u),i.extends&&u(i.extends),i.mixins&&i.mixins.forEach(u)}if(!s&&!l)return ut(i)&&n.set(i,zr),zr;if(Ie(s))for(let u=0;u<s.length;u++){const h=$i(s[u]);qh(h)&&(o[h]=Ke)}else if(s)for(const u in s){const h=$i(u);if(qh(h)){const f=s[u],d=o[h]=Ie(f)||Fe(f)?{type:f}:Pt({},f),p=d.type;let y=!1,x=!0;if(Ie(p))for(let m=0;m<p.length;++m){const g=p[m],_=Fe(g)&&g.name;if(_==="Boolean"){y=!0;break}else _==="String"&&(x=!1)}else y=Fe(p)&&p.name==="Boolean";d[0]=y,d[1]=x,(y||Ge(d,"default"))&&a.push(h)}}const c=[o,a];return ut(i)&&n.set(i,c),c}function qh(i){return i[0]!=="$"&&!Is(i)}const Sp=i=>i[0]==="_"||i==="$stable",bu=i=>Ie(i)?i.map(mn):[mn(i)],vx=(i,e,t)=>{if(e._n)return e;const n=st((...r)=>bu(e(...r)),t);return n._c=!1,n},Ep=(i,e,t)=>{const n=i._ctx;for(const r in i){if(Sp(r))continue;const s=i[r];if(Fe(s))e[r]=vx(r,s,n);else if(s!=null){const o=bu(s);e[r]=()=>o}}},Tp=(i,e)=>{const t=bu(e);i.slots.default=()=>t},Ap=(i,e,t)=>{for(const n in e)(t||n!=="_")&&(i[n]=e[n])},_x=(i,e,t)=>{const n=i.slots=_p();if(i.vnode.shapeFlag&32){const r=e._;r?(Ap(n,e,t),t&&Hd(n,"_",r,!0)):Ep(e,n)}else e&&Tp(i,e)},wx=(i,e,t)=>{const{vnode:n,slots:r}=i;let s=!0,o=Ke;if(n.shapeFlag&32){const a=e._;a?t&&a===1?s=!1:Ap(r,e,t):(s=!e.$stable,Ep(e,r)),o=e}else e&&(Tp(i,e),o={default:1});if(s)for(const a in r)!Sp(a)&&o[a]==null&&delete r[a]};function Pc(i,e,t,n,r=!1){if(Ie(i)){i.forEach((f,d)=>Pc(f,e&&(Ie(e)?e[d]:e),t,n,r));return}if(Fs(n)&&!r)return;const s=n.shapeFlag&4?Su(n.component):n.el,o=r?null:s,{i:a,r:l}=i,c=e&&e.r,u=a.refs===Ke?a.refs={}:a.refs,h=a.setupState;if(c!=null&&c!==l&&(_t(c)?(u[c]=null,Ge(h,c)&&(h[c]=null)):Gt(c)&&(c.value=null)),Fe(l))ni(l,a,12,[o,u]);else{const f=_t(l),d=Gt(l);if(f||d){const p=()=>{if(i.f){const y=f?Ge(h,l)?h[l]:u[l]:l.value;r?Ie(y)&&lu(y,s):Ie(y)?y.includes(s)||y.push(s):f?(u[l]=[s],Ge(h,l)&&(h[l]=u[l])):(l.value=[s],i.k&&(u[i.k]=l.value))}else f?(u[l]=o,Ge(h,l)&&(h[l]=o)):d&&(l.value=o,i.k&&(u[i.k]=o))};o?(p.id=-1,Ot(p,t)):p()}}}const bx=Symbol("_vte"),Mx=i=>i.__isTeleport,Ot=Ox;function Sx(i){return Ex(i)}function Ex(i,e){const t=Gd();t.__VUE__=!0;const{insert:n,remove:r,patchProp:s,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:h,nextSibling:f,setScopeId:d=Qt,insertStaticContent:p}=i,y=(E,C,N,z=null,M=null,w=null,D=void 0,O=null,U=!!C.dynamicChildren)=>{if(E===C)return;E&&!xs(E,C)&&(z=be(E),Me(E,M,w,!0),E=null),C.patchFlag===-2&&(U=!1,C.dynamicChildren=null);const{type:G,ref:Q,shapeFlag:te}=C;switch(G){case $a:x(E,C,N,z);break;case ai:m(E,C,N,z);break;case Sa:E==null&&g(C,N,z,D);break;case Xt:ee(E,C,N,z,M,w,D,O,U);break;default:te&1?S(E,C,N,z,M,w,D,O,U):te&6?k(E,C,N,z,M,w,D,O,U):(te&64||te&128)&&G.process(E,C,N,z,M,w,D,O,U,ye)}Q!=null&&M&&Pc(Q,E&&E.ref,w,C||E,!C)},x=(E,C,N,z)=>{if(E==null)n(C.el=a(C.children),N,z);else{const M=C.el=E.el;C.children!==E.children&&c(M,C.children)}},m=(E,C,N,z)=>{E==null?n(C.el=l(C.children||""),N,z):C.el=E.el},g=(E,C,N,z)=>{[E.el,E.anchor]=p(E.children,C,N,z,E.el,E.anchor)},_=({el:E,anchor:C},N,z)=>{let M;for(;E&&E!==C;)M=f(E),n(E,N,z),E=M;n(C,N,z)},v=({el:E,anchor:C})=>{let N;for(;E&&E!==C;)N=f(E),r(E),E=N;r(C)},S=(E,C,N,z,M,w,D,O,U)=>{C.type==="svg"?D="svg":C.type==="math"&&(D="mathml"),E==null?T(C,N,z,M,w,D,O,U):H(E,C,M,w,D,O,U)},T=(E,C,N,z,M,w,D,O)=>{let U,G;const{props:Q,shapeFlag:te,transition:se,dirs:oe}=E;if(U=E.el=o(E.type,w,Q&&Q.is,Q),te&8?u(U,E.children):te&16&&R(E.children,U,null,z,M,Rl(E,w),D,O),oe&&Si(E,null,z,"created"),b(U,E,E.scopeId,D,z),Q){for(const le in Q)le!=="value"&&!Is(le)&&s(U,le,null,Q[le],w,z);"value"in Q&&s(U,"value",null,Q.value,w),(G=Q.onVnodeBeforeMount)&&dn(G,z,E)}oe&&Si(E,null,z,"beforeMount");const I=Tx(M,se);I&&se.beforeEnter(U),n(U,C,N),((G=Q&&Q.onVnodeMounted)||I||oe)&&Ot(()=>{G&&dn(G,z,E),I&&se.enter(U),oe&&Si(E,null,z,"mounted")},M)},b=(E,C,N,z,M)=>{if(N&&d(E,N),z)for(let w=0;w<z.length;w++)d(E,z[w]);if(M){let w=M.subTree;if(C===w){const D=M.vnode;b(E,D,D.scopeId,D.slotScopeIds,M.parent)}}},R=(E,C,N,z,M,w,D,O,U=0)=>{for(let G=U;G<E.length;G++){const Q=E[G]=O?Qn(E[G]):mn(E[G]);y(null,Q,C,N,z,M,w,D,O)}},H=(E,C,N,z,M,w,D)=>{const O=C.el=E.el;let{patchFlag:U,dynamicChildren:G,dirs:Q}=C;U|=E.patchFlag&16;const te=E.props||Ke,se=C.props||Ke;let oe;if(N&&Ei(N,!1),(oe=se.onVnodeBeforeUpdate)&&dn(oe,N,C,E),Q&&Si(C,E,N,"beforeUpdate"),N&&Ei(N,!0),(te.innerHTML&&se.innerHTML==null||te.textContent&&se.textContent==null)&&u(O,""),G?F(E.dynamicChildren,G,O,N,z,Rl(C,M),w):D||ie(E,C,O,null,N,z,Rl(C,M),w,!1),U>0){if(U&16)P(O,te,se,N,M);else if(U&2&&te.class!==se.class&&s(O,"class",null,se.class,M),U&4&&s(O,"style",te.style,se.style,M),U&8){const I=C.dynamicProps;for(let le=0;le<I.length;le++){const Y=I[le],fe=te[Y],pe=se[Y];(pe!==fe||Y==="value")&&s(O,Y,fe,pe,M,N)}}U&1&&E.children!==C.children&&u(O,C.children)}else!D&&G==null&&P(O,te,se,N,M);((oe=se.onVnodeUpdated)||Q)&&Ot(()=>{oe&&dn(oe,N,C,E),Q&&Si(C,E,N,"updated")},z)},F=(E,C,N,z,M,w,D)=>{for(let O=0;O<C.length;O++){const U=E[O],G=C[O],Q=U.el&&(U.type===Xt||!xs(U,G)||U.shapeFlag&70)?h(U.el):N;y(U,G,Q,null,z,M,w,D,!0)}},P=(E,C,N,z,M)=>{if(C!==N){if(C!==Ke)for(const w in C)!Is(w)&&!(w in N)&&s(E,w,C[w],null,M,z);for(const w in N){if(Is(w))continue;const D=N[w],O=C[w];D!==O&&w!=="value"&&s(E,w,O,D,M,z)}"value"in N&&s(E,"value",C.value,N.value,M)}},ee=(E,C,N,z,M,w,D,O,U)=>{const G=C.el=E?E.el:a(""),Q=C.anchor=E?E.anchor:a("");let{patchFlag:te,dynamicChildren:se,slotScopeIds:oe}=C;oe&&(O=O?O.concat(oe):oe),E==null?(n(G,N,z),n(Q,N,z),R(C.children||[],N,Q,M,w,D,O,U)):te>0&&te&64&&se&&E.dynamicChildren?(F(E.dynamicChildren,se,N,M,w,D,O),(C.key!=null||M&&C===M.subTree)&&Cp(E,C,!0)):ie(E,C,N,Q,M,w,D,O,U)},k=(E,C,N,z,M,w,D,O,U)=>{C.slotScopeIds=O,E==null?C.shapeFlag&512?M.ctx.activate(C,N,z,D,U):W(C,N,z,M,w,D,U):J(E,C,U)},W=(E,C,N,z,M,w,D)=>{const O=E.component=Yx(E,z,M);if(hp(E)&&(O.ctx.renderer=ye),$x(O,!1,D),O.asyncDep){if(M&&M.registerDep(O,V,D),!E.el){const U=O.subTree=Se(ai);m(null,U,C,N)}}else V(O,E,C,N,M,w,D)},J=(E,C,N)=>{const z=C.component=E.component;if(Nx(E,C,N))if(z.asyncDep&&!z.asyncResolved){q(z,C,N);return}else z.next=C,qy(z.update),z.effect.dirty=!0,z.update();else C.el=E.el,z.vnode=C},V=(E,C,N,z,M,w,D)=>{const O=()=>{if(E.isMounted){let{next:Q,bu:te,u:se,parent:oe,vnode:I}=E;{const De=Lp(E);if(De){Q&&(Q.el=I.el,q(E,Q,D)),De.asyncDep.then(()=>{E.isUnmounted||O()});return}}let le=Q,Y;Ei(E,!1),Q?(Q.el=I.el,q(E,Q,D)):Q=I,te&&Al(te),(Y=Q.props&&Q.props.onVnodeBeforeUpdate)&&dn(Y,oe,Q,I),Ei(E,!0);const fe=Pl(E),pe=E.subTree;E.subTree=fe,y(pe,fe,h(pe.el),be(pe),E,M,w),Q.el=fe.el,le===null&&Bx(E,fe.el),se&&Ot(se,M),(Y=Q.props&&Q.props.onVnodeUpdated)&&Ot(()=>dn(Y,oe,Q,I),M)}else{let Q;const{el:te,props:se}=C,{bm:oe,m:I,parent:le}=E,Y=Fs(C);if(Ei(E,!1),oe&&Al(oe),!Y&&(Q=se&&se.onVnodeBeforeMount)&&dn(Q,le,C),Ei(E,!0),te&&K){const fe=()=>{E.subTree=Pl(E),K(te,E.subTree,E,M,null)};Y?C.type.__asyncLoader().then(()=>!E.isUnmounted&&fe()):fe()}else{const fe=E.subTree=Pl(E);y(null,fe,N,z,E,M,w),C.el=fe.el}if(I&&Ot(I,M),!Y&&(Q=se&&se.onVnodeMounted)){const fe=C;Ot(()=>dn(Q,le,fe),M)}(C.shapeFlag&256||le&&Fs(le.vnode)&&le.vnode.shapeFlag&256)&&E.a&&Ot(E.a,M),E.isMounted=!0,C=N=z=null}},U=E.effect=new hu(O,Qt,()=>_u(G),E.scope),G=E.update=()=>{U.dirty&&U.run()};G.i=E,G.id=E.uid,Ei(E,!0),G()},q=(E,C,N)=>{C.component=E;const z=E.vnode.props;E.vnode=C,E.next=null,yx(E,C.props,z,N),wx(E,C.children,N),fi(),Hh(E),di()},ie=(E,C,N,z,M,w,D,O,U=!1)=>{const G=E&&E.children,Q=E?E.shapeFlag:0,te=C.children,{patchFlag:se,shapeFlag:oe}=C;if(se>0){if(se&128){we(G,te,N,z,M,w,D,O,U);return}else if(se&256){me(G,te,N,z,M,w,D,O,U);return}}oe&8?(Q&16&&Z(G,M,w),te!==G&&u(N,te)):Q&16?oe&16?we(G,te,N,z,M,w,D,O,U):Z(G,M,w,!0):(Q&8&&u(N,""),oe&16&&R(te,N,z,M,w,D,O,U))},me=(E,C,N,z,M,w,D,O,U)=>{E=E||zr,C=C||zr;const G=E.length,Q=C.length,te=Math.min(G,Q);let se;for(se=0;se<te;se++){const oe=C[se]=U?Qn(C[se]):mn(C[se]);y(E[se],oe,N,null,M,w,D,O,U)}G>Q?Z(E,M,w,!0,!1,te):R(C,N,z,M,w,D,O,U,te)},we=(E,C,N,z,M,w,D,O,U)=>{let G=0;const Q=C.length;let te=E.length-1,se=Q-1;for(;G<=te&&G<=se;){const oe=E[G],I=C[G]=U?Qn(C[G]):mn(C[G]);if(xs(oe,I))y(oe,I,N,null,M,w,D,O,U);else break;G++}for(;G<=te&&G<=se;){const oe=E[te],I=C[se]=U?Qn(C[se]):mn(C[se]);if(xs(oe,I))y(oe,I,N,null,M,w,D,O,U);else break;te--,se--}if(G>te){if(G<=se){const oe=se+1,I=oe<Q?C[oe].el:z;for(;G<=se;)y(null,C[G]=U?Qn(C[G]):mn(C[G]),N,I,M,w,D,O,U),G++}}else if(G>se)for(;G<=te;)Me(E[G],M,w,!0),G++;else{const oe=G,I=G,le=new Map;for(G=I;G<=se;G++){const Oe=C[G]=U?Qn(C[G]):mn(C[G]);Oe.key!=null&&le.set(Oe.key,G)}let Y,fe=0;const pe=se-I+1;let De=!1,pt=0;const et=new Array(pe);for(G=0;G<pe;G++)et[G]=0;for(G=oe;G<=te;G++){const Oe=E[G];if(fe>=pe){Me(Oe,M,w,!0);continue}let ht;if(Oe.key!=null)ht=le.get(Oe.key);else for(Y=I;Y<=se;Y++)if(et[Y-I]===0&&xs(Oe,C[Y])){ht=Y;break}ht===void 0?Me(Oe,M,w,!0):(et[ht-I]=G+1,ht>=pt?pt=ht:De=!0,y(Oe,C[ht],N,null,M,w,D,O,U),fe++)}const tn=De?Ax(et):zr;for(Y=tn.length-1,G=pe-1;G>=0;G--){const Oe=I+G,ht=C[Oe],zt=Oe+1<Q?C[Oe+1].el:z;et[G]===0?y(null,ht,N,zt,M,w,D,O,U):De&&(Y<0||G!==tn[Y]?ue(ht,N,zt,2):Y--)}}},ue=(E,C,N,z,M=null)=>{const{el:w,type:D,transition:O,children:U,shapeFlag:G}=E;if(G&6){ue(E.component.subTree,C,N,z);return}if(G&128){E.suspense.move(C,N,z);return}if(G&64){D.move(E,C,N,ye);return}if(D===Xt){n(w,C,N);for(let te=0;te<U.length;te++)ue(U[te],C,N,z);n(E.anchor,C,N);return}if(D===Sa){_(E,C,N);return}if(z!==2&&G&1&&O)if(z===0)O.beforeEnter(w),n(w,C,N),Ot(()=>O.enter(w),M);else{const{leave:te,delayLeave:se,afterLeave:oe}=O,I=()=>n(w,C,N),le=()=>{te(w,()=>{I(),oe&&oe()})};se?se(w,I,le):le()}else n(w,C,N)},Me=(E,C,N,z=!1,M=!1)=>{const{type:w,props:D,ref:O,children:U,dynamicChildren:G,shapeFlag:Q,patchFlag:te,dirs:se,cacheIndex:oe}=E;if(te===-2&&(M=!1),O!=null&&Pc(O,null,N,E,!0),oe!=null&&(C.renderCache[oe]=void 0),Q&256){C.ctx.deactivate(E);return}const I=Q&1&&se,le=!Fs(E);let Y;if(le&&(Y=D&&D.onVnodeBeforeUnmount)&&dn(Y,C,E),Q&6)ve(E.component,N,z);else{if(Q&128){E.suspense.unmount(N,z);return}I&&Si(E,null,C,"beforeUnmount"),Q&64?E.type.remove(E,C,N,ye,z):G&&!G.hasOnce&&(w!==Xt||te>0&&te&64)?Z(G,C,N,!1,!0):(w===Xt&&te&384||!M&&Q&16)&&Z(U,C,N),z&&ae(E)}(le&&(Y=D&&D.onVnodeUnmounted)||I)&&Ot(()=>{Y&&dn(Y,C,E),I&&Si(E,null,C,"unmounted")},N)},ae=E=>{const{type:C,el:N,anchor:z,transition:M}=E;if(C===Xt){ce(N,z);return}if(C===Sa){v(E);return}const w=()=>{r(N),M&&!M.persisted&&M.afterLeave&&M.afterLeave()};if(E.shapeFlag&1&&M&&!M.persisted){const{leave:D,delayLeave:O}=M,U=()=>D(N,w);O?O(E.el,w,U):U()}else w()},ce=(E,C)=>{let N;for(;E!==C;)N=f(E),r(E),E=N;r(C)},ve=(E,C,N)=>{const{bum:z,scope:M,update:w,subTree:D,um:O,m:U,a:G}=E;Xh(U),Xh(G),z&&Al(z),M.stop(),w&&(w.active=!1,Me(D,E,C,N)),O&&Ot(O,C),Ot(()=>{E.isUnmounted=!0},C),C&&C.pendingBranch&&!C.isUnmounted&&E.asyncDep&&!E.asyncResolved&&E.suspenseId===C.pendingId&&(C.deps--,C.deps===0&&C.resolve())},Z=(E,C,N,z=!1,M=!1,w=0)=>{for(let D=w;D<E.length;D++)Me(E[D],C,N,z,M)},be=E=>{if(E.shapeFlag&6)return be(E.component.subTree);if(E.shapeFlag&128)return E.suspense.next();const C=f(E.anchor||E.el),N=C&&C[bx];return N?f(N):C};let Ee=!1;const ge=(E,C,N)=>{E==null?C._vnode&&Me(C._vnode,null,null,!0):y(C._vnode||null,E,C,null,null,null,N),C._vnode=E,Ee||(Ee=!0,Hh(),ap(),Ee=!1)},ye={p:y,um:Me,m:ue,r:ae,mt:W,mc:R,pc:ie,pbc:F,n:be,o:i};let Le,K;return{render:ge,hydrate:Le,createApp:px(ge,Le)}}function Rl({type:i,props:e},t){return t==="svg"&&i==="foreignObject"||t==="mathml"&&i==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function Ei({effect:i,update:e},t){i.allowRecurse=e.allowRecurse=t}function Tx(i,e){return(!i||i&&!i.pendingBranch)&&e&&!e.persisted}function Cp(i,e,t=!1){const n=i.children,r=e.children;if(Ie(n)&&Ie(r))for(let s=0;s<n.length;s++){const o=n[s];let a=r[s];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[s]=Qn(r[s]),a.el=o.el),!t&&a.patchFlag!==-2&&Cp(o,a)),a.type===$a&&(a.el=o.el)}}function Ax(i){const e=i.slice(),t=[0];let n,r,s,o,a;const l=i.length;for(n=0;n<l;n++){const c=i[n];if(c!==0){if(r=t[t.length-1],i[r]<c){e[n]=r,t.push(n);continue}for(s=0,o=t.length-1;s<o;)a=s+o>>1,i[t[a]]<c?s=a+1:o=a;c<i[t[s]]&&(s>0&&(e[n]=t[s-1]),t[s]=n)}}for(s=t.length,o=t[s-1];s-- >0;)t[s]=o,o=e[o];return t}function Lp(i){const e=i.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:Lp(e)}function Xh(i){if(i)for(let e=0;e<i.length;e++)i[e].active=!1}const Cx=Symbol.for("v-scx"),Lx=()=>ba(Cx),Po={};function Ma(i,e,t){return Rp(i,e,t)}function Rp(i,e,{immediate:t,deep:n,flush:r,once:s,onTrack:o,onTrigger:a}=Ke){if(e&&s){const T=e;e=(...b)=>{T(...b),S()}}const l=Ft,c=T=>n===!0?T:Bi(T,n===!1?1:void 0);let u,h=!1,f=!1;if(Gt(i)?(u=()=>i.value,h=Vr(i)):Ds(i)?(u=()=>c(i),h=!0):Ie(i)?(f=!0,h=i.some(T=>Ds(T)||Vr(T)),u=()=>i.map(T=>{if(Gt(T))return T.value;if(Ds(T))return c(T);if(Fe(T))return ni(T,l,2)})):Fe(i)?e?u=()=>ni(i,l,2):u=()=>(d&&d(),cn(i,l,3,[p])):u=Qt,e&&n){const T=u;u=()=>Bi(T())}let d,p=T=>{d=_.onStop=()=>{ni(T,l,4),d=_.onStop=void 0}},y;if(Ja)if(p=Qt,e?t&&cn(e,l,3,[u(),f?[]:void 0,p]):u(),r==="sync"){const T=Lx();y=T.__watcherHandles||(T.__watcherHandles=[])}else return Qt;let x=f?new Array(i.length).fill(Po):Po;const m=()=>{if(!(!_.active||!_.dirty))if(e){const T=_.run();(n||h||(f?T.some((b,R)=>oi(b,x[R])):oi(T,x)))&&(d&&d(),cn(e,l,3,[T,x===Po?void 0:f&&x[0]===Po?[]:x,p]),x=T)}else _.run()};m.allowRecurse=!!e;let g;r==="sync"?g=m:r==="post"?g=()=>Ot(m,l&&l.suspense):(m.pre=!0,l&&(m.id=l.uid),g=()=>_u(m));const _=new hu(u,Qt,g),v=gy(),S=()=>{_.stop(),v&&lu(v.effects,_)};return e?t?m():x=_.run():r==="post"?Ot(_.run.bind(_),l&&l.suspense):_.run(),y&&y.push(S),S}function Rx(i,e,t){const n=this.proxy,r=_t(i)?i.includes(".")?Pp(n,i):()=>n[i]:i.bind(n,n);let s;Fe(e)?s=e:(s=e.handler,t=e);const o=uo(this),a=Rp(r,s.bind(n),t);return o(),a}function Pp(i,e){const t=e.split(".");return()=>{let n=i;for(let r=0;r<t.length&&n;r++)n=n[t[r]];return n}}function Bi(i,e=1/0,t){if(e<=0||!ut(i)||i.__v_skip||(t=t||new Set,t.has(i)))return i;if(t.add(i),e--,Gt(i))Bi(i.value,e,t);else if(Ie(i))for(let n=0;n<i.length;n++)Bi(i[n],e,t);else if(ty(i)||Ps(i))i.forEach(n=>{Bi(n,e,t)});else if(ry(i)){for(const n in i)Bi(i[n],e,t);for(const n of Object.getOwnPropertySymbols(i))Object.prototype.propertyIsEnumerable.call(i,n)&&Bi(i[n],e,t)}return i}const Px=(i,e)=>e==="modelValue"||e==="model-value"?i.modelModifiers:i["".concat(e,"Modifiers")]||i["".concat($i(e),"Modifiers")]||i["".concat(rr(e),"Modifiers")];function Ix(i,e,...t){if(i.isUnmounted)return;const n=i.vnode.props||Ke;let r=t;const s=e.startsWith("update:"),o=s&&Px(n,e.slice(7));o&&(o.trim&&(r=t.map(u=>_t(u)?u.trim():u)),o.number&&(r=t.map(ay)));let a,l=n[a=Tl(e)]||n[a=Tl($i(e))];!l&&s&&(l=n[a=Tl(rr(e))]),l&&cn(l,i,6,r);const c=n[a+"Once"];if(c){if(!i.emitted)i.emitted={};else if(i.emitted[a])return;i.emitted[a]=!0,cn(c,i,6,r)}}function Ip(i,e,t=!1){const n=e.emitsCache,r=n.get(i);if(r!==void 0)return r;const s=i.emits;let o={},a=!1;if(!Fe(i)){const l=c=>{const u=Ip(c,e,!0);u&&(a=!0,Pt(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),i.extends&&l(i.extends),i.mixins&&i.mixins.forEach(l)}return!s&&!a?(ut(i)&&n.set(i,null),null):(Ie(s)?s.forEach(l=>o[l]=null):Pt(o,s),ut(i)&&n.set(i,o),o)}function Ya(i,e){return!i||!Ha(e)?!1:(e=e.slice(2).replace(/Once$/,""),Ge(i,e[0].toLowerCase()+e.slice(1))||Ge(i,rr(e))||Ge(i,e))}function Pl(i){const{type:e,vnode:t,proxy:n,withProxy:r,propsOptions:[s],slots:o,attrs:a,emit:l,render:c,renderCache:u,props:h,data:f,setupState:d,ctx:p,inheritAttrs:y}=i,x=La(i);let m,g;try{if(t.shapeFlag&4){const v=r||n,S=v;m=mn(c.call(S,v,u,h,d,f,p)),g=a}else{const v=e;m=mn(v.length>1?v(h,{attrs:a,slots:o,emit:l}):v(h,null)),g=e.props?a:Dx(a)}}catch(v){Bs.length=0,qa(v,i,1),m=Se(ai)}let _=m;if(g&&y!==!1){const v=Object.keys(g),{shapeFlag:S}=_;v.length&&S&7&&(s&&v.some(au)&&(g=Fx(g,s)),_=Wr(_,g,!1,!0))}return t.dirs&&(_=Wr(_,null,!1,!0),_.dirs=_.dirs?_.dirs.concat(t.dirs):t.dirs),t.transition&&(_.transition=t.transition),m=_,La(x),m}const Dx=i=>{let e;for(const t in i)(t==="class"||t==="style"||Ha(t))&&((e||(e={}))[t]=i[t]);return e},Fx=(i,e)=>{const t={};for(const n in i)(!au(n)||!(n.slice(9)in e))&&(t[n]=i[n]);return t};function Nx(i,e,t){const{props:n,children:r,component:s}=i,{props:o,children:a,patchFlag:l}=e,c=s.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return n?Yh(n,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let h=0;h<u.length;h++){const f=u[h];if(o[f]!==n[f]&&!Ya(c,f))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:n===o?!1:n?o?Yh(n,o,c):!0:!!o;return!1}function Yh(i,e,t){const n=Object.keys(e);if(n.length!==Object.keys(i).length)return!0;for(let r=0;r<n.length;r++){const s=n[r];if(e[s]!==i[s]&&!Ya(t,s))return!0}return!1}function Bx({vnode:i,parent:e},t){for(;e;){const n=e.subTree;if(n.suspense&&n.suspense.activeBranch===i&&(n.el=i.el),n===i)(i=e.vnode).el=t,e=e.parent;else break}}const zx=i=>i.__isSuspense;function Ox(i,e){e&&e.pendingBranch?Ie(i)?e.effects.push(...i):e.effects.push(i):Xy(i)}const Xt=Symbol.for("v-fgt"),$a=Symbol.for("v-txt"),ai=Symbol.for("v-cmt"),Sa=Symbol.for("v-stc"),Bs=[];let Yt=null;function en(i=!1){Bs.push(Yt=i?null:[])}function Ux(){Bs.pop(),Yt=Bs[Bs.length-1]||null}let qs=1;function $h(i){qs+=i,i<0&&Yt&&(Yt.hasOnce=!0)}function Dp(i){return i.dynamicChildren=qs>0?Yt||zr:null,Ux(),qs>0&&Yt&&Yt.push(i),i}function wn(i,e,t,n,r,s){return Dp(B(i,e,t,n,r,s,!0))}function Fp(i,e,t,n,r){return Dp(Se(i,e,t,n,r,!0))}function Pa(i){return i?i.__v_isVNode===!0:!1}function xs(i,e){return i.type===e.type&&i.key===e.key}const Np=({key:i})=>i!=null?i:null,Ea=({ref:i,ref_key:e,ref_for:t})=>(typeof i=="number"&&(i=""+i),i!=null?_t(i)||Gt(i)||Fe(i)?{i:Ut,r:i,k:e,f:!!t}:i:null);function B(i,e=null,t=null,n=0,r=null,s=i===Xt?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:i,props:e,key:e&&Np(e),ref:e&&Ea(e),scopeId:cp,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:s,patchFlag:n,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:Ut};return a?(Mu(l,t),s&128&&i.normalize(l)):t&&(l.shapeFlag|=_t(t)?8:16),qs>0&&!o&&Yt&&(l.patchFlag>0||s&6)&&l.patchFlag!==32&&Yt.push(l),l}const Se=Hx;function Hx(i,e=null,t=null,n=0,r=null,s=!1){if((!i||i===sx)&&(i=ai),Pa(i)){const a=Wr(i,e,!0);return t&&Mu(a,t),qs>0&&!s&&Yt&&(a.shapeFlag&6?Yt[Yt.indexOf(i)]=a:Yt.push(a)),a.patchFlag=-2,a}if(Kx(i)&&(i=i.__vccOpts),e){e=Gx(e);let{class:a,style:l}=e;a&&!_t(a)&&(e.class=Va(a)),ut(l)&&(tp(l)&&!Ie(l)&&(l=Pt({},l)),e.style=uu(l))}const o=_t(i)?1:zx(i)?128:Mx(i)?64:ut(i)?4:Fe(i)?2:0;return B(i,e,t,n,r,o,s,!0)}function Gx(i){return i?tp(i)||wp(i)?Pt({},i):i:null}function Wr(i,e,t=!1,n=!1){const{props:r,ref:s,patchFlag:o,children:a,transition:l}=i,c=e?Wx(r||{},e):r,u={__v_isVNode:!0,__v_skip:!0,type:i.type,props:c,key:c&&Np(c),ref:e&&e.ref?t&&s?Ie(s)?s.concat(Ea(e)):[s,Ea(e)]:Ea(e):s,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:a,target:i.target,targetStart:i.targetStart,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:e&&i.type!==Xt?o===-1?16:o|16:o,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:l,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&Wr(i.ssContent),ssFallback:i.ssFallback&&Wr(i.ssFallback),el:i.el,anchor:i.anchor,ctx:i.ctx,ce:i.ce};return l&&n&&up(u,l.clone(u)),u}function Re(i=" ",e=0){return Se($a,null,i,e)}function kx(i,e){const t=Se(Sa,null,i);return t.staticCount=e,t}function Vx(i="",e=!1){return e?(en(),Fp(ai,null,i)):Se(ai,null,i)}function mn(i){return i==null||typeof i=="boolean"?Se(ai):Ie(i)?Se(Xt,null,i.slice()):typeof i=="object"?Qn(i):Se($a,null,String(i))}function Qn(i){return i.el===null&&i.patchFlag!==-1||i.memo?i:Wr(i)}function Mu(i,e){let t=0;const{shapeFlag:n}=i;if(e==null)e=null;else if(Ie(e))t=16;else if(typeof e=="object")if(n&65){const r=e.default;r&&(r._c&&(r._d=!1),Mu(i,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!wp(e)?e._ctx=Ut:r===3&&Ut&&(Ut.slots._===1?e._=1:(e._=2,i.patchFlag|=1024))}else Fe(e)?(e={default:e,_ctx:Ut},t=32):(e=String(e),n&64?(t=16,e=[Re(e)]):t=8);i.children=e,i.shapeFlag|=t}function Wx(...i){const e={};for(let t=0;t<i.length;t++){const n=i[t];for(const r in n)if(r==="class")e.class!==n.class&&(e.class=Va([e.class,n.class]));else if(r==="style")e.style=uu([e.style,n.style]);else if(Ha(r)){const s=e[r],o=n[r];o&&s!==o&&!(Ie(s)&&s.includes(o))&&(e[r]=s?[].concat(s,o):o)}else r!==""&&(e[r]=n[r])}return e}function dn(i,e,t,n=null){cn(i,e,7,[t,n])}const qx=xp();let Xx=0;function Yx(i,e,t){const n=i.type,r=(e?e.appContext:i.appContext)||qx,s={uid:Xx++,vnode:i,type:n,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,scope:new py(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Mp(n,r),emitsOptions:Ip(n,r),emit:null,emitted:null,propsDefaults:Ke,inheritAttrs:n.inheritAttrs,ctx:Ke,data:Ke,props:Ke,attrs:Ke,slots:Ke,refs:Ke,setupState:Ke,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return s.ctx={_:s},s.root=e?e.root:s,s.emit=Ix.bind(null,s),i.ce&&i.ce(s),s}let Ft=null,Ia,Ic;{const i=Gd(),e=(t,n)=>{let r;return(r=i[t])||(r=i[t]=[]),r.push(n),s=>{r.length>1?r.forEach(o=>o(s)):r[0](s)}};Ia=e("__VUE_INSTANCE_SETTERS__",t=>Ft=t),Ic=e("__VUE_SSR_SETTERS__",t=>Ja=t)}const uo=i=>{const e=Ft;return Ia(i),i.scope.on(),()=>{i.scope.off(),Ia(e)}},Jh=()=>{Ft&&Ft.scope.off(),Ia(null)};function Bp(i){return i.vnode.shapeFlag&4}let Ja=!1;function $x(i,e=!1,t=!1){e&&Ic(e);const{props:n,children:r}=i.vnode,s=Bp(i);gx(i,n,s,e),_x(i,r,t);const o=s?Jx(i,e):void 0;return e&&Ic(!1),o}function Jx(i,e){const t=i.type;i.accessCache=Object.create(null),i.proxy=new Proxy(i.ctx,ax);const{setup:n}=t;if(n){const r=i.setupContext=n.length>1?Zx(i):null,s=uo(i);fi();const o=ni(n,i,0,[i.props,r]);if(di(),s(),Od(o)){if(o.then(Jh,Jh),e)return o.then(a=>{jh(i,a,e)}).catch(a=>{qa(a,i,0)});i.asyncDep=o}else jh(i,o,e)}else zp(i,e)}function jh(i,e,t){Fe(e)?i.type.__ssrInlineRender?i.ssrRender=e:i.render=e:ut(e)&&(i.setupState=rp(e)),zp(i,t)}let Zh;function zp(i,e,t){const n=i.type;if(!i.render){if(!e&&Zh&&!n.render){const r=n.template||wu(i).template;if(r){const{isCustomElement:s,compilerOptions:o}=i.appContext.config,{delimiters:a,compilerOptions:l}=n,c=Pt(Pt({isCustomElement:s,delimiters:a},o),l);n.render=Zh(r,c)}}i.render=n.render||Qt}{const r=uo(i);fi();try{lx(i)}finally{di(),r()}}}const jx={get(i,e){return Ht(i,"get",""),i[e]}};function Zx(i){const e=t=>{i.exposed=t||{}};return{attrs:new Proxy(i.attrs,jx),slots:i.slots,emit:i.emit,expose:e}}function Su(i){return i.exposed?i.exposeProxy||(i.exposeProxy=new Proxy(rp(zy(i.exposed)),{get(e,t){if(t in e)return e[t];if(t in Ns)return Ns[t](i)},has(e,t){return t in e||t in Ns}})):i.proxy}function Kx(i){return Fe(i)&&"__vccOpts"in i}const Qx=(i,e)=>Oy(i,e,Ja);function ev(i,e,t){const n=arguments.length;return n===2?ut(e)&&!Ie(e)?Pa(e)?Se(i,null,[e]):Se(i,e):Se(i,null,e):(n>3?t=Array.prototype.slice.call(arguments,2):n===3&&Pa(t)&&(t=[t]),Se(i,e,t))}const tv="3.4.38";/**
* @vue/runtime-dom v3.4.38
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const nv="http://www.w3.org/2000/svg",iv="http://www.w3.org/1998/Math/MathML",In=typeof document<"u"?document:null,Kh=In&&In.createElement("template"),rv={insert:(i,e,t)=>{e.insertBefore(i,t||null)},remove:i=>{const e=i.parentNode;e&&e.removeChild(i)},createElement:(i,e,t,n)=>{const r=e==="svg"?In.createElementNS(nv,i):e==="mathml"?In.createElementNS(iv,i):t?In.createElement(i,{is:t}):In.createElement(i);return i==="select"&&n&&n.multiple!=null&&r.setAttribute("multiple",n.multiple),r},createText:i=>In.createTextNode(i),createComment:i=>In.createComment(i),setText:(i,e)=>{i.nodeValue=e},setElementText:(i,e)=>{i.textContent=e},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,querySelector:i=>In.querySelector(i),setScopeId(i,e){i.setAttribute(e,"")},insertStaticContent(i,e,t,n,r,s){const o=t?t.previousSibling:e.lastChild;if(r&&(r===s||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===s||!(r=r.nextSibling)););else{Kh.innerHTML=n==="svg"?"<svg>".concat(i,"</svg>"):n==="mathml"?"<math>".concat(i,"</math>"):i;const a=Kh.content;if(n==="svg"||n==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},sv=Symbol("_vtc");function ov(i,e,t){const n=i[sv];n&&(e=(e?[e,...n]:[...n]).join(" ")),e==null?i.removeAttribute("class"):t?i.setAttribute("class",e):i.className=e}const Qh=Symbol("_vod"),av=Symbol("_vsh"),lv=Symbol(""),cv=/(^|;)\s*display\s*:/;function uv(i,e,t){const n=i.style,r=_t(t);let s=!1;if(t&&!r){if(e)if(_t(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();t[a]==null&&Ta(n,a,"")}else for(const o in e)t[o]==null&&Ta(n,o,"");for(const o in t)o==="display"&&(s=!0),Ta(n,o,t[o])}else if(r){if(e!==t){const o=n[lv];o&&(t+=";"+o),n.cssText=t,s=cv.test(t)}}else e&&i.removeAttribute("style");Qh in i&&(i[Qh]=s?n.display:"",i[av]&&(n.display="none"))}const ef=/\s*!important$/;function Ta(i,e,t){if(Ie(t))t.forEach(n=>Ta(i,e,n));else if(t==null&&(t=""),e.startsWith("--"))i.setProperty(e,t);else{const n=hv(i,e);ef.test(t)?i.setProperty(rr(n),t.replace(ef,""),"important"):i[n]=t}}const tf=["Webkit","Moz","ms"],Il={};function hv(i,e){const t=Il[e];if(t)return t;let n=$i(e);if(n!=="filter"&&n in i)return Il[e]=n;n=Ud(n);for(let r=0;r<tf.length;r++){const s=tf[r]+n;if(s in i)return Il[e]=s}return e}const nf="http://www.w3.org/1999/xlink";function rf(i,e,t,n,r,s=dy(e)){n&&e.startsWith("xlink:")?t==null?i.removeAttributeNS(nf,e.slice(6,e.length)):i.setAttributeNS(nf,e,t):t==null||s&&!kd(t)?i.removeAttribute(e):i.setAttribute(e,s?"":cs(t)?String(t):t)}function fv(i,e,t,n){if(e==="innerHTML"||e==="textContent"){if(t==null)return;i[e]=t;return}const r=i.tagName;if(e==="value"&&r!=="PROGRESS"&&!r.includes("-")){const o=r==="OPTION"?i.getAttribute("value")||"":i.value,a=t==null?"":String(t);(o!==a||!("_value"in i))&&(i.value=a),t==null&&i.removeAttribute(e),i._value=t;return}let s=!1;if(t===""||t==null){const o=typeof i[e];o==="boolean"?t=kd(t):t==null&&o==="string"?(t="",s=!0):o==="number"&&(t=0,s=!0)}try{i[e]=t}catch(o){}s&&i.removeAttribute(e)}function dv(i,e,t,n){i.addEventListener(e,t,n)}function pv(i,e,t,n){i.removeEventListener(e,t,n)}const sf=Symbol("_vei");function mv(i,e,t,n,r=null){const s=i[sf]||(i[sf]={}),o=s[e];if(n&&o)o.value=n;else{const[a,l]=gv(e);if(n){const c=s[e]=vv(n,r);dv(i,a,c,l)}else o&&(pv(i,a,o,l),s[e]=void 0)}}const of=/(?:Once|Passive|Capture)$/;function gv(i){let e;if(of.test(i)){e={};let n;for(;n=i.match(of);)i=i.slice(0,i.length-n[0].length),e[n[0].toLowerCase()]=!0}return[i[2]===":"?i.slice(3):rr(i.slice(2)),e]}let Dl=0;const yv=Promise.resolve(),xv=()=>Dl||(yv.then(()=>Dl=0),Dl=Date.now());function vv(i,e){const t=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=t.attached)return;cn(_v(n,t.value),e,5,[n])};return t.value=i,t.attached=xv(),t}function _v(i,e){if(Ie(e)){const t=i.stopImmediatePropagation;return i.stopImmediatePropagation=()=>{t.call(i),i._stopped=!0},e.map(n=>r=>!r._stopped&&n&&n(r))}else return e}const af=i=>i.charCodeAt(0)===111&&i.charCodeAt(1)===110&&i.charCodeAt(2)>96&&i.charCodeAt(2)<123,wv=(i,e,t,n,r,s)=>{const o=r==="svg";e==="class"?ov(i,n,o):e==="style"?uv(i,t,n):Ha(e)?au(e)||mv(i,e,t,n,s):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):bv(i,e,n,o))?(fv(i,e,n),!i.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&rf(i,e,n,o,s,e!=="value")):(e==="true-value"?i._trueValue=n:e==="false-value"&&(i._falseValue=n),rf(i,e,n,o))};function bv(i,e,t,n){if(n)return!!(e==="innerHTML"||e==="textContent"||e in i&&af(e)&&Fe(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&i.tagName==="INPUT"||e==="type"&&i.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=i.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return af(e)&&_t(t)?!1:e in i}const Mv=Pt({patchProp:wv},rv);let lf;function Sv(){return lf||(lf=Sx(Mv))}const Ev=(...i)=>{const e=Sv().createApp(...i),{mount:t}=e;return e.mount=n=>{const r=Av(n);if(!r)return;const s=e._component;!Fe(s)&&!s.render&&!s.template&&(s.template=r.innerHTML),r.innerHTML="";const o=t(r,!1,Tv(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e};function Tv(i){if(i instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&i instanceof MathMLElement)return"mathml"}function Av(i){return _t(i)?document.querySelector(i):i}const Cv={xmlns:"http://www.w3.org/2000/svg",fill:"currentColor","aria-hidden":"true",viewBox:"0 0 22 20"},Lv=B("path",{d:"M20.924 7.625a1.52 1.52 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.52 1.52 0 0 0 .387-1.575"},null,-1),Rv=[Lv];function Pv(i,e){return en(),wn("svg",Cv,[...Rv])}const Op={render:Pv},Iv={class:"inline-flex items-center"},it={__name:"Rating",props:["rating"],setup(i){const e=i,t=n=>n<=e.rating?["text-yellow-300","stroke-yellow-600"]:["text-gray-300","dark:text-gray-500","print:text-gray-100"];return(n,r)=>(en(),wn("div",Iv,[(en(),wn(Xt,null,ox(5,s=>Se(qt(Op),{class:Va([t(s),"w-4 h-4 ms-1"])},null,8,["class"])),64))]))}},Dv=(i,e)=>{const t=i.__vccOpts||i;for(const[n,r]of e)t[n]=r;return t},Fv={},Nv={class:"break-inside-avoid p-0.5"},Bv={class:"relative bg-white p-6 mt-8 rounded-xl text-slate-600"},zv={key:0,class:"flex items-center gap-4 max-w-9/12 bg-purple-200 text-slate-800/80 p-2 -m-4 mb-2 text-xl font-bold rounded-xl"},Ov={class:"flex-none title-icon"},Uv={class:"flex-1"};function Hv(i,e){return en(),wn("div",Nv,[B("section",Bv,[i.$slots.title?(en(),wn("div",zv,[B("div",Ov,[Cl(i.$slots,"icon")]),B("div",Uv,[Cl(i.$slots,"title")])])):Vx("",!0),Cl(i.$slots,"default")])])}const Ti=Dv(Fv,[["render",Hv],["__scopeId","data-v-e2e3099e"]]);var Gv=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function kv(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var ho={},Vv=function(){return typeof Promise=="function"&&Promise.prototype&&Promise.prototype.then},Up={},jt={};let Eu;const Wv=[0,26,44,70,100,134,172,196,242,292,346,404,466,532,581,655,733,815,901,991,1085,1156,1258,1364,1474,1588,1706,1828,1921,2051,2185,2323,2465,2611,2761,2876,3034,3196,3362,3532,3706];jt.getSymbolSize=function(e){if(!e)throw new Error('"version" cannot be null or undefined');if(e<1||e>40)throw new Error('"version" should be in range from 1 to 40');return e*4+17};jt.getSymbolTotalCodewords=function(e){return Wv[e]};jt.getBCHDigit=function(i){let e=0;for(;i!==0;)e++,i>>>=1;return e};jt.setToSJISFunction=function(e){if(typeof e!="function")throw new Error('"toSJISFunc" is not a valid function.');Eu=e};jt.isKanjiModeEnabled=function(){return typeof Eu<"u"};jt.toSJIS=function(e){return Eu(e)};var ja={};(function(i){i.L={bit:1},i.M={bit:0},i.Q={bit:3},i.H={bit:2};function e(t){if(typeof t!="string")throw new Error("Param is not a string");switch(t.toLowerCase()){case"l":case"low":return i.L;case"m":case"medium":return i.M;case"q":case"quartile":return i.Q;case"h":case"high":return i.H;default:throw new Error("Unknown EC Level: "+t)}}i.isValid=function(n){return n&&typeof n.bit<"u"&&n.bit>=0&&n.bit<4},i.from=function(n,r){if(i.isValid(n))return n;try{return e(n)}catch(s){return r}}})(ja);function Hp(){this.buffer=[],this.length=0}Hp.prototype={get:function(i){const e=Math.floor(i/8);return(this.buffer[e]>>>7-i%8&1)===1},put:function(i,e){for(let t=0;t<e;t++)this.putBit((i>>>e-t-1&1)===1)},getLengthInBits:function(){return this.length},putBit:function(i){const e=Math.floor(this.length/8);this.buffer.length<=e&&this.buffer.push(0),i&&(this.buffer[e]|=128>>>this.length%8),this.length++}};var qv=Hp;function fo(i){if(!i||i<1)throw new Error("BitMatrix size must be defined and greater than 0");this.size=i,this.data=new Uint8Array(i*i),this.reservedBit=new Uint8Array(i*i)}fo.prototype.set=function(i,e,t,n){const r=i*this.size+e;this.data[r]=t,n&&(this.reservedBit[r]=!0)};fo.prototype.get=function(i,e){return this.data[i*this.size+e]};fo.prototype.xor=function(i,e,t){this.data[i*this.size+e]^=t};fo.prototype.isReserved=function(i,e){return this.reservedBit[i*this.size+e]};var Xv=fo,Gp={};(function(i){const e=jt.getSymbolSize;i.getRowColCoords=function(n){if(n===1)return[];const r=Math.floor(n/7)+2,s=e(n),o=s===145?26:Math.ceil((s-13)/(2*r-2))*2,a=[s-7];for(let l=1;l<r-1;l++)a[l]=a[l-1]-o;return a.push(6),a.reverse()},i.getPositions=function(n){const r=[],s=i.getRowColCoords(n),o=s.length;for(let a=0;a<o;a++)for(let l=0;l<o;l++)a===0&&l===0||a===0&&l===o-1||a===o-1&&l===0||r.push([s[a],s[l]]);return r}})(Gp);var kp={};const Yv=jt.getSymbolSize,cf=7;kp.getPositions=function(e){const t=Yv(e);return[[0,0],[t-cf,0],[0,t-cf]]};var Vp={};(function(i){i.Patterns={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};const e={N1:3,N2:3,N3:40,N4:10};i.isValid=function(r){return r!=null&&r!==""&&!isNaN(r)&&r>=0&&r<=7},i.from=function(r){return i.isValid(r)?parseInt(r,10):void 0},i.getPenaltyN1=function(r){const s=r.size;let o=0,a=0,l=0,c=null,u=null;for(let h=0;h<s;h++){a=l=0,c=u=null;for(let f=0;f<s;f++){let d=r.get(h,f);d===c?a++:(a>=5&&(o+=e.N1+(a-5)),c=d,a=1),d=r.get(f,h),d===u?l++:(l>=5&&(o+=e.N1+(l-5)),u=d,l=1)}a>=5&&(o+=e.N1+(a-5)),l>=5&&(o+=e.N1+(l-5))}return o},i.getPenaltyN2=function(r){const s=r.size;let o=0;for(let a=0;a<s-1;a++)for(let l=0;l<s-1;l++){const c=r.get(a,l)+r.get(a,l+1)+r.get(a+1,l)+r.get(a+1,l+1);(c===4||c===0)&&o++}return o*e.N2},i.getPenaltyN3=function(r){const s=r.size;let o=0,a=0,l=0;for(let c=0;c<s;c++){a=l=0;for(let u=0;u<s;u++)a=a<<1&2047|r.get(c,u),u>=10&&(a===1488||a===93)&&o++,l=l<<1&2047|r.get(u,c),u>=10&&(l===1488||l===93)&&o++}return o*e.N3},i.getPenaltyN4=function(r){let s=0;const o=r.data.length;for(let l=0;l<o;l++)s+=r.data[l];return Math.abs(Math.ceil(s*100/o/5)-10)*e.N4};function t(n,r,s){switch(n){case i.Patterns.PATTERN000:return(r+s)%2===0;case i.Patterns.PATTERN001:return r%2===0;case i.Patterns.PATTERN010:return s%3===0;case i.Patterns.PATTERN011:return(r+s)%3===0;case i.Patterns.PATTERN100:return(Math.floor(r/2)+Math.floor(s/3))%2===0;case i.Patterns.PATTERN101:return r*s%2+r*s%3===0;case i.Patterns.PATTERN110:return(r*s%2+r*s%3)%2===0;case i.Patterns.PATTERN111:return(r*s%3+(r+s)%2)%2===0;default:throw new Error("bad maskPattern:"+n)}}i.applyMask=function(r,s){const o=s.size;for(let a=0;a<o;a++)for(let l=0;l<o;l++)s.isReserved(l,a)||s.xor(l,a,t(r,l,a))},i.getBestMask=function(r,s){const o=Object.keys(i.Patterns).length;let a=0,l=1/0;for(let c=0;c<o;c++){s(c),i.applyMask(c,r);const u=i.getPenaltyN1(r)+i.getPenaltyN2(r)+i.getPenaltyN3(r)+i.getPenaltyN4(r);i.applyMask(c,r),u<l&&(l=u,a=c)}return a}})(Vp);var Za={};const ei=ja,Io=[1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,4,1,2,4,4,2,4,4,4,2,4,6,5,2,4,6,6,2,5,8,8,4,5,8,8,4,5,8,11,4,8,10,11,4,9,12,16,4,9,16,16,6,10,12,18,6,10,17,16,6,11,16,19,6,13,18,21,7,14,21,25,8,16,20,25,8,17,23,25,9,17,23,34,9,18,25,30,10,20,27,32,12,21,29,35,12,23,34,37,12,25,34,40,13,26,35,42,14,28,38,45,15,29,40,48,16,31,43,51,17,33,45,54,18,35,48,57,19,37,51,60,19,38,53,63,20,40,56,66,21,43,59,70,22,45,62,74,24,47,65,77,25,49,68,81],Do=[7,10,13,17,10,16,22,28,15,26,36,44,20,36,52,64,26,48,72,88,36,64,96,112,40,72,108,130,48,88,132,156,60,110,160,192,72,130,192,224,80,150,224,264,96,176,260,308,104,198,288,352,120,216,320,384,132,240,360,432,144,280,408,480,168,308,448,532,180,338,504,588,196,364,546,650,224,416,600,700,224,442,644,750,252,476,690,816,270,504,750,900,300,560,810,960,312,588,870,1050,336,644,952,1110,360,700,1020,1200,390,728,1050,1260,420,784,1140,1350,450,812,1200,1440,480,868,1290,1530,510,924,1350,1620,540,980,1440,1710,570,1036,1530,1800,570,1064,1590,1890,600,1120,1680,1980,630,1204,1770,2100,660,1260,1860,2220,720,1316,1950,2310,750,1372,2040,2430];Za.getBlocksCount=function(e,t){switch(t){case ei.L:return Io[(e-1)*4+0];case ei.M:return Io[(e-1)*4+1];case ei.Q:return Io[(e-1)*4+2];case ei.H:return Io[(e-1)*4+3];default:return}};Za.getTotalCodewordsCount=function(e,t){switch(t){case ei.L:return Do[(e-1)*4+0];case ei.M:return Do[(e-1)*4+1];case ei.Q:return Do[(e-1)*4+2];case ei.H:return Do[(e-1)*4+3];default:return}};var Wp={},Ka={};const zs=new Uint8Array(512),Da=new Uint8Array(256);(function(){let e=1;for(let t=0;t<255;t++)zs[t]=e,Da[e]=t,e<<=1,e&256&&(e^=285);for(let t=255;t<512;t++)zs[t]=zs[t-255]})();Ka.log=function(e){if(e<1)throw new Error("log("+e+")");return Da[e]};Ka.exp=function(e){return zs[e]};Ka.mul=function(e,t){return e===0||t===0?0:zs[Da[e]+Da[t]]};(function(i){const e=Ka;i.mul=function(n,r){const s=new Uint8Array(n.length+r.length-1);for(let o=0;o<n.length;o++)for(let a=0;a<r.length;a++)s[o+a]^=e.mul(n[o],r[a]);return s},i.mod=function(n,r){let s=new Uint8Array(n);for(;s.length-r.length>=0;){const o=s[0];for(let l=0;l<r.length;l++)s[l]^=e.mul(r[l],o);let a=0;for(;a<s.length&&s[a]===0;)a++;s=s.slice(a)}return s},i.generateECPolynomial=function(n){let r=new Uint8Array([1]);for(let s=0;s<n;s++)r=i.mul(r,new Uint8Array([1,e.exp(s)]));return r}})(Wp);const qp=Wp;function Tu(i){this.genPoly=void 0,this.degree=i,this.degree&&this.initialize(this.degree)}Tu.prototype.initialize=function(e){this.degree=e,this.genPoly=qp.generateECPolynomial(this.degree)};Tu.prototype.encode=function(e){if(!this.genPoly)throw new Error("Encoder not initialized");const t=new Uint8Array(e.length+this.degree);t.set(e);const n=qp.mod(t,this.genPoly),r=this.degree-n.length;if(r>0){const s=new Uint8Array(this.degree);return s.set(n,r),s}return n};var $v=Tu,Xp={},pi={},Au={};Au.isValid=function(e){return!isNaN(e)&&e>=1&&e<=40};var En={};const Yp="[0-9]+",Jv="[A-Z $%*+\\-./:]+";let Xs="(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";Xs=Xs.replace(/u/g,"\\u");const jv="(?:(?![A-Z0-9 $%*+\\-./:]|"+Xs+")(?:.|[\r\n]))+";En.KANJI=new RegExp(Xs,"g");En.BYTE_KANJI=new RegExp("[^A-Z0-9 $%*+\\-./:]+","g");En.BYTE=new RegExp(jv,"g");En.NUMERIC=new RegExp(Yp,"g");En.ALPHANUMERIC=new RegExp(Jv,"g");const Zv=new RegExp("^"+Xs+"$"),Kv=new RegExp("^"+Yp+"$"),Qv=new RegExp("^[A-Z0-9 $%*+\\-./:]+$");En.testKanji=function(e){return Zv.test(e)};En.testNumeric=function(e){return Kv.test(e)};En.testAlphanumeric=function(e){return Qv.test(e)};(function(i){const e=Au,t=En;i.NUMERIC={id:"Numeric",bit:1,ccBits:[10,12,14]},i.ALPHANUMERIC={id:"Alphanumeric",bit:2,ccBits:[9,11,13]},i.BYTE={id:"Byte",bit:4,ccBits:[8,16,16]},i.KANJI={id:"Kanji",bit:8,ccBits:[8,10,12]},i.MIXED={bit:-1},i.getCharCountIndicator=function(s,o){if(!s.ccBits)throw new Error("Invalid mode: "+s);if(!e.isValid(o))throw new Error("Invalid version: "+o);return o>=1&&o<10?s.ccBits[0]:o<27?s.ccBits[1]:s.ccBits[2]},i.getBestModeForData=function(s){return t.testNumeric(s)?i.NUMERIC:t.testAlphanumeric(s)?i.ALPHANUMERIC:t.testKanji(s)?i.KANJI:i.BYTE},i.toString=function(s){if(s&&s.id)return s.id;throw new Error("Invalid mode")},i.isValid=function(s){return s&&s.bit&&s.ccBits};function n(r){if(typeof r!="string")throw new Error("Param is not a string");switch(r.toLowerCase()){case"numeric":return i.NUMERIC;case"alphanumeric":return i.ALPHANUMERIC;case"kanji":return i.KANJI;case"byte":return i.BYTE;default:throw new Error("Unknown mode: "+r)}}i.from=function(s,o){if(i.isValid(s))return s;try{return n(s)}catch(a){return o}}})(pi);(function(i){const e=jt,t=Za,n=ja,r=pi,s=Au,o=7973,a=e.getBCHDigit(o);function l(f,d,p){for(let y=1;y<=40;y++)if(d<=i.getCapacity(y,p,f))return y}function c(f,d){return r.getCharCountIndicator(f,d)+4}function u(f,d){let p=0;return f.forEach(function(y){const x=c(y.mode,d);p+=x+y.getBitsLength()}),p}function h(f,d){for(let p=1;p<=40;p++)if(u(f,p)<=i.getCapacity(p,d,r.MIXED))return p}i.from=function(d,p){return s.isValid(d)?parseInt(d,10):p},i.getCapacity=function(d,p,y){if(!s.isValid(d))throw new Error("Invalid QR Code version");typeof y>"u"&&(y=r.BYTE);const x=e.getSymbolTotalCodewords(d),m=t.getTotalCodewordsCount(d,p),g=(x-m)*8;if(y===r.MIXED)return g;const _=g-c(y,d);switch(y){case r.NUMERIC:return Math.floor(_/10*3);case r.ALPHANUMERIC:return Math.floor(_/11*2);case r.KANJI:return Math.floor(_/13);case r.BYTE:default:return Math.floor(_/8)}},i.getBestVersionForData=function(d,p){let y;const x=n.from(p,n.M);if(Array.isArray(d)){if(d.length>1)return h(d,x);if(d.length===0)return 1;y=d[0]}else y=d;return l(y.mode,y.getLength(),x)},i.getEncodedBits=function(d){if(!s.isValid(d)||d<7)throw new Error("Invalid QR Code version");let p=d<<12;for(;e.getBCHDigit(p)-a>=0;)p^=o<<e.getBCHDigit(p)-a;return d<<12|p}})(Xp);var $p={};const Dc=jt,Jp=1335,e_=21522,uf=Dc.getBCHDigit(Jp);$p.getEncodedBits=function(e,t){const n=e.bit<<3|t;let r=n<<10;for(;Dc.getBCHDigit(r)-uf>=0;)r^=Jp<<Dc.getBCHDigit(r)-uf;return(n<<10|r)^e_};var jp={};const t_=pi;function qr(i){this.mode=t_.NUMERIC,this.data=i.toString()}qr.getBitsLength=function(e){return 10*Math.floor(e/3)+(e%3?e%3*3+1:0)};qr.prototype.getLength=function(){return this.data.length};qr.prototype.getBitsLength=function(){return qr.getBitsLength(this.data.length)};qr.prototype.write=function(e){let t,n,r;for(t=0;t+3<=this.data.length;t+=3)n=this.data.substr(t,3),r=parseInt(n,10),e.put(r,10);const s=this.data.length-t;s>0&&(n=this.data.substr(t),r=parseInt(n,10),e.put(r,s*3+1))};var n_=qr;const i_=pi,Fl=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","$","%","*","+","-",".","/",":"];function Xr(i){this.mode=i_.ALPHANUMERIC,this.data=i}Xr.getBitsLength=function(e){return 11*Math.floor(e/2)+6*(e%2)};Xr.prototype.getLength=function(){return this.data.length};Xr.prototype.getBitsLength=function(){return Xr.getBitsLength(this.data.length)};Xr.prototype.write=function(e){let t;for(t=0;t+2<=this.data.length;t+=2){let n=Fl.indexOf(this.data[t])*45;n+=Fl.indexOf(this.data[t+1]),e.put(n,11)}this.data.length%2&&e.put(Fl.indexOf(this.data[t]),6)};var r_=Xr;const s_=pi;function Yr(i){this.mode=s_.BYTE,typeof i=="string"?this.data=new TextEncoder().encode(i):this.data=new Uint8Array(i)}Yr.getBitsLength=function(e){return e*8};Yr.prototype.getLength=function(){return this.data.length};Yr.prototype.getBitsLength=function(){return Yr.getBitsLength(this.data.length)};Yr.prototype.write=function(i){for(let e=0,t=this.data.length;e<t;e++)i.put(this.data[e],8)};var o_=Yr;const a_=pi,l_=jt;function $r(i){this.mode=a_.KANJI,this.data=i}$r.getBitsLength=function(e){return e*13};$r.prototype.getLength=function(){return this.data.length};$r.prototype.getBitsLength=function(){return $r.getBitsLength(this.data.length)};$r.prototype.write=function(i){let e;for(e=0;e<this.data.length;e++){let t=l_.toSJIS(this.data[e]);if(t>=33088&&t<=40956)t-=33088;else if(t>=57408&&t<=60351)t-=49472;else throw new Error("Invalid SJIS character: "+this.data[e]+"\nMake sure your charset is UTF-8");t=(t>>>8&255)*192+(t&255),i.put(t,13)}};var c_=$r,Zp={exports:{}};(function(i){var e={single_source_shortest_paths:function(t,n,r){var s={},o={};o[n]=0;var a=e.PriorityQueue.make();a.push(n,0);for(var l,c,u,h,f,d,p,y,x;!a.empty();){l=a.pop(),c=l.value,h=l.cost,f=t[c]||{};for(u in f)f.hasOwnProperty(u)&&(d=f[u],p=h+d,y=o[u],x=typeof o[u]>"u",(x||y>p)&&(o[u]=p,a.push(u,p),s[u]=c))}if(typeof r<"u"&&typeof o[r]>"u"){var m=["Could not find a path from ",n," to ",r,"."].join("");throw new Error(m)}return s},extract_shortest_path_from_predecessor_list:function(t,n){for(var r=[],s=n;s;)r.push(s),t[s],s=t[s];return r.reverse(),r},find_path:function(t,n,r){var s=e.single_source_shortest_paths(t,n,r);return e.extract_shortest_path_from_predecessor_list(s,r)},PriorityQueue:{make:function(t){var n=e.PriorityQueue,r={},s;t=t||{};for(s in n)n.hasOwnProperty(s)&&(r[s]=n[s]);return r.queue=[],r.sorter=t.sorter||n.default_sorter,r},default_sorter:function(t,n){return t.cost-n.cost},push:function(t,n){var r={value:t,cost:n};this.queue.push(r),this.queue.sort(this.sorter)},pop:function(){return this.queue.shift()},empty:function(){return this.queue.length===0}}};i.exports=e})(Zp);var u_=Zp.exports;(function(i){const e=pi,t=n_,n=r_,r=o_,s=c_,o=En,a=jt,l=u_;function c(m){return unescape(encodeURIComponent(m)).length}function u(m,g,_){const v=[];let S;for(;(S=m.exec(_))!==null;)v.push({data:S[0],index:S.index,mode:g,length:S[0].length});return v}function h(m){const g=u(o.NUMERIC,e.NUMERIC,m),_=u(o.ALPHANUMERIC,e.ALPHANUMERIC,m);let v,S;return a.isKanjiModeEnabled()?(v=u(o.BYTE,e.BYTE,m),S=u(o.KANJI,e.KANJI,m)):(v=u(o.BYTE_KANJI,e.BYTE,m),S=[]),g.concat(_,v,S).sort(function(b,R){return b.index-R.index}).map(function(b){return{data:b.data,mode:b.mode,length:b.length}})}function f(m,g){switch(g){case e.NUMERIC:return t.getBitsLength(m);case e.ALPHANUMERIC:return n.getBitsLength(m);case e.KANJI:return s.getBitsLength(m);case e.BYTE:return r.getBitsLength(m)}}function d(m){return m.reduce(function(g,_){const v=g.length-1>=0?g[g.length-1]:null;return v&&v.mode===_.mode?(g[g.length-1].data+=_.data,g):(g.push(_),g)},[])}function p(m){const g=[];for(let _=0;_<m.length;_++){const v=m[_];switch(v.mode){case e.NUMERIC:g.push([v,{data:v.data,mode:e.ALPHANUMERIC,length:v.length},{data:v.data,mode:e.BYTE,length:v.length}]);break;case e.ALPHANUMERIC:g.push([v,{data:v.data,mode:e.BYTE,length:v.length}]);break;case e.KANJI:g.push([v,{data:v.data,mode:e.BYTE,length:c(v.data)}]);break;case e.BYTE:g.push([{data:v.data,mode:e.BYTE,length:c(v.data)}])}}return g}function y(m,g){const _={},v={start:{}};let S=["start"];for(let T=0;T<m.length;T++){const b=m[T],R=[];for(let H=0;H<b.length;H++){const F=b[H],P=""+T+H;R.push(P),_[P]={node:F,lastCount:0},v[P]={};for(let ee=0;ee<S.length;ee++){const k=S[ee];_[k]&&_[k].node.mode===F.mode?(v[k][P]=f(_[k].lastCount+F.length,F.mode)-f(_[k].lastCount,F.mode),_[k].lastCount+=F.length):(_[k]&&(_[k].lastCount=F.length),v[k][P]=f(F.length,F.mode)+4+e.getCharCountIndicator(F.mode,g))}}S=R}for(let T=0;T<S.length;T++)v[S[T]].end=0;return{map:v,table:_}}function x(m,g){let _;const v=e.getBestModeForData(m);if(_=e.from(g,v),_!==e.BYTE&&_.bit<v.bit)throw new Error('"'+m+'" cannot be encoded with mode '+e.toString(_)+".\n Suggested mode is: "+e.toString(v));switch(_===e.KANJI&&!a.isKanjiModeEnabled()&&(_=e.BYTE),_){case e.NUMERIC:return new t(m);case e.ALPHANUMERIC:return new n(m);case e.KANJI:return new s(m);case e.BYTE:return new r(m)}}i.fromArray=function(g){return g.reduce(function(_,v){return typeof v=="string"?_.push(x(v,null)):v.data&&_.push(x(v.data,v.mode)),_},[])},i.fromString=function(g,_){const v=h(g,a.isKanjiModeEnabled()),S=p(v),T=y(S,_),b=l.find_path(T.map,"start","end"),R=[];for(let H=1;H<b.length-1;H++)R.push(T.table[b[H]].node);return i.fromArray(d(R))},i.rawSplit=function(g){return i.fromArray(h(g,a.isKanjiModeEnabled()))}})(jp);const Qa=jt,Nl=ja,h_=qv,f_=Xv,d_=Gp,p_=kp,Fc=Vp,Nc=Za,m_=$v,Fa=Xp,g_=$p,y_=pi,Bl=jp;function x_(i,e){const t=i.size,n=p_.getPositions(e);for(let r=0;r<n.length;r++){const s=n[r][0],o=n[r][1];for(let a=-1;a<=7;a++)if(!(s+a<=-1||t<=s+a))for(let l=-1;l<=7;l++)o+l<=-1||t<=o+l||(a>=0&&a<=6&&(l===0||l===6)||l>=0&&l<=6&&(a===0||a===6)||a>=2&&a<=4&&l>=2&&l<=4?i.set(s+a,o+l,!0,!0):i.set(s+a,o+l,!1,!0))}}function v_(i){const e=i.size;for(let t=8;t<e-8;t++){const n=t%2===0;i.set(t,6,n,!0),i.set(6,t,n,!0)}}function __(i,e){const t=d_.getPositions(e);for(let n=0;n<t.length;n++){const r=t[n][0],s=t[n][1];for(let o=-2;o<=2;o++)for(let a=-2;a<=2;a++)o===-2||o===2||a===-2||a===2||o===0&&a===0?i.set(r+o,s+a,!0,!0):i.set(r+o,s+a,!1,!0)}}function w_(i,e){const t=i.size,n=Fa.getEncodedBits(e);let r,s,o;for(let a=0;a<18;a++)r=Math.floor(a/3),s=a%3+t-8-3,o=(n>>a&1)===1,i.set(r,s,o,!0),i.set(s,r,o,!0)}function zl(i,e,t){const n=i.size,r=g_.getEncodedBits(e,t);let s,o;for(s=0;s<15;s++)o=(r>>s&1)===1,s<6?i.set(s,8,o,!0):s<8?i.set(s+1,8,o,!0):i.set(n-15+s,8,o,!0),s<8?i.set(8,n-s-1,o,!0):s<9?i.set(8,15-s-1+1,o,!0):i.set(8,15-s-1,o,!0);i.set(n-8,8,1,!0)}function b_(i,e){const t=i.size;let n=-1,r=t-1,s=7,o=0;for(let a=t-1;a>0;a-=2)for(a===6&&a--;;){for(let l=0;l<2;l++)if(!i.isReserved(r,a-l)){let c=!1;o<e.length&&(c=(e[o]>>>s&1)===1),i.set(r,a-l,c),s--,s===-1&&(o++,s=7)}if(r+=n,r<0||t<=r){r-=n,n=-n;break}}}function M_(i,e,t){const n=new h_;t.forEach(function(l){n.put(l.mode.bit,4),n.put(l.getLength(),y_.getCharCountIndicator(l.mode,i)),l.write(n)});const r=Qa.getSymbolTotalCodewords(i),s=Nc.getTotalCodewordsCount(i,e),o=(r-s)*8;for(n.getLengthInBits()+4<=o&&n.put(0,4);n.getLengthInBits()%8!==0;)n.putBit(0);const a=(o-n.getLengthInBits())/8;for(let l=0;l<a;l++)n.put(l%2?17:236,8);return S_(n,i,e)}function S_(i,e,t){const n=Qa.getSymbolTotalCodewords(e),r=Nc.getTotalCodewordsCount(e,t),s=n-r,o=Nc.getBlocksCount(e,t),a=n%o,l=o-a,c=Math.floor(n/o),u=Math.floor(s/o),h=u+1,f=c-u,d=new m_(f);let p=0;const y=new Array(o),x=new Array(o);let m=0;const g=new Uint8Array(i.buffer);for(let b=0;b<o;b++){const R=b<l?u:h;y[b]=g.slice(p,p+R),x[b]=d.encode(y[b]),p+=R,m=Math.max(m,R)}const _=new Uint8Array(n);let v=0,S,T;for(S=0;S<m;S++)for(T=0;T<o;T++)S<y[T].length&&(_[v++]=y[T][S]);for(S=0;S<f;S++)for(T=0;T<o;T++)_[v++]=x[T][S];return _}function E_(i,e,t,n){let r;if(Array.isArray(i))r=Bl.fromArray(i);else if(typeof i=="string"){let c=e;if(!c){const u=Bl.rawSplit(i);c=Fa.getBestVersionForData(u,t)}r=Bl.fromString(i,c||40)}else throw new Error("Invalid data");const s=Fa.getBestVersionForData(r,t);if(!s)throw new Error("The amount of data is too big to be stored in a QR Code");if(!e)e=s;else if(e<s)throw new Error("\nThe chosen QR Code version cannot contain this amount of data.\nMinimum version required to store current data is: "+s+".\n");const o=M_(e,t,r),a=Qa.getSymbolSize(e),l=new f_(a);return x_(l,e),v_(l),__(l,e),zl(l,t,0),e>=7&&w_(l,e),b_(l,o),isNaN(n)&&(n=Fc.getBestMask(l,zl.bind(null,l,t))),Fc.applyMask(n,l),zl(l,t,n),{modules:l,version:e,errorCorrectionLevel:t,maskPattern:n,segments:r}}Up.create=function(e,t){if(typeof e>"u"||e==="")throw new Error("No input text");let n=Nl.M,r,s;return typeof t<"u"&&(n=Nl.from(t.errorCorrectionLevel,Nl.M),r=Fa.from(t.version),s=Fc.from(t.maskPattern),t.toSJISFunc&&Qa.setToSJISFunction(t.toSJISFunc)),E_(e,r,n,s)};var Kp={},Cu={};(function(i){function e(t){if(typeof t=="number"&&(t=t.toString()),typeof t!="string")throw new Error("Color should be defined as hex string");let n=t.slice().replace("#","").split("");if(n.length<3||n.length===5||n.length>8)throw new Error("Invalid hex color: "+t);(n.length===3||n.length===4)&&(n=Array.prototype.concat.apply([],n.map(function(s){return[s,s]}))),n.length===6&&n.push("F","F");const r=parseInt(n.join(""),16);return{r:r>>24&255,g:r>>16&255,b:r>>8&255,a:r&255,hex:"#"+n.slice(0,6).join("")}}i.getOptions=function(n){n||(n={}),n.color||(n.color={});const r=typeof n.margin>"u"||n.margin===null||n.margin<0?4:n.margin,s=n.width&&n.width>=21?n.width:void 0,o=n.scale||4;return{width:s,scale:s?4:o,margin:r,color:{dark:e(n.color.dark||"#000000ff"),light:e(n.color.light||"#ffffffff")},type:n.type,rendererOpts:n.rendererOpts||{}}},i.getScale=function(n,r){return r.width&&r.width>=n+r.margin*2?r.width/(n+r.margin*2):r.scale},i.getImageWidth=function(n,r){const s=i.getScale(n,r);return Math.floor((n+r.margin*2)*s)},i.qrToImageData=function(n,r,s){const o=r.modules.size,a=r.modules.data,l=i.getScale(o,s),c=Math.floor((o+s.margin*2)*l),u=s.margin*l,h=[s.color.light,s.color.dark];for(let f=0;f<c;f++)for(let d=0;d<c;d++){let p=(f*c+d)*4,y=s.color.light;if(f>=u&&d>=u&&f<c-u&&d<c-u){const x=Math.floor((f-u)/l),m=Math.floor((d-u)/l);y=h[a[x*o+m]?1:0]}n[p++]=y.r,n[p++]=y.g,n[p++]=y.b,n[p]=y.a}}})(Cu);(function(i){const e=Cu;function t(r,s,o){r.clearRect(0,0,s.width,s.height),s.style||(s.style={}),s.height=o,s.width=o,s.style.height=o+"px",s.style.width=o+"px"}function n(){try{return document.createElement("canvas")}catch(r){throw new Error("You need to specify a canvas element")}}i.render=function(s,o,a){let l=a,c=o;typeof l>"u"&&(!o||!o.getContext)&&(l=o,o=void 0),o||(c=n()),l=e.getOptions(l);const u=e.getImageWidth(s.modules.size,l),h=c.getContext("2d"),f=h.createImageData(u,u);return e.qrToImageData(f.data,s,l),t(h,c,u),h.putImageData(f,0,0),c},i.renderToDataURL=function(s,o,a){let l=a;typeof l>"u"&&(!o||!o.getContext)&&(l=o,o=void 0),l||(l={});const c=i.render(s,o,l),u=l.type||"image/png",h=l.rendererOpts||{};return c.toDataURL(u,h.quality)}})(Kp);var Qp={};const T_=Cu;function hf(i,e){const t=i.a/255,n=e+'="'+i.hex+'"';return t<1?n+" "+e+'-opacity="'+t.toFixed(2).slice(1)+'"':n}function Ol(i,e,t){let n=i+e;return typeof t<"u"&&(n+=" "+t),n}function A_(i,e,t){let n="",r=0,s=!1,o=0;for(let a=0;a<i.length;a++){const l=Math.floor(a%e),c=Math.floor(a/e);!l&&!s&&(s=!0),i[a]?(o++,a>0&&l>0&&i[a-1]||(n+=s?Ol("M",l+t,.5+c+t):Ol("m",r,0),r=0,s=!1),l+1<e&&i[a+1]||(n+=Ol("h",o),o=0)):r++}return n}Qp.render=function(e,t,n){const r=T_.getOptions(t),s=e.modules.size,o=e.modules.data,a=s+r.margin*2,l=r.color.light.a?"<path "+hf(r.color.light,"fill")+' d="M0 0h'+a+"v"+a+'H0z"/>':"",c="<path "+hf(r.color.dark,"stroke")+' d="'+A_(o,s,r.margin)+'"/>',u='viewBox="0 0 '+a+" "+a+'"',f='<svg xmlns="http://www.w3.org/2000/svg" '+(r.width?'width="'+r.width+'" height="'+r.width+'" ':"")+u+' shape-rendering="crispEdges">'+l+c+"</svg>\n";return typeof n=="function"&&n(null,f),f};const C_=Vv,Bc=Up,em=Kp,L_=Qp;function Lu(i,e,t,n,r){const s=[].slice.call(arguments,1),o=s.length,a=typeof s[o-1]=="function";if(!a&&!C_())throw new Error("Callback required as last argument");if(a){if(o<2)throw new Error("Too few arguments provided");o===2?(r=t,t=e,e=n=void 0):o===3&&(e.getContext&&typeof r>"u"?(r=n,n=void 0):(r=n,n=t,t=e,e=void 0))}else{if(o<1)throw new Error("Too few arguments provided");return o===1?(t=e,e=n=void 0):o===2&&!e.getContext&&(n=t,t=e,e=void 0),new Promise(function(l,c){try{const u=Bc.create(t,n);l(i(u,e,n))}catch(u){c(u)}})}try{const l=Bc.create(t,n);r(null,i(l,e,n))}catch(l){r(l)}}ho.create=Bc.create;ho.toCanvas=Lu.bind(null,em.render);ho.toDataURL=Lu.bind(null,em.renderToDataURL);ho.toString=Lu.bind(null,function(i,e,t){return L_.render(i,t)});var R_=Object.defineProperty,P_=Object.defineProperties,I_=Object.getOwnPropertyDescriptors,Na=Object.getOwnPropertySymbols,tm=Object.prototype.hasOwnProperty,nm=Object.prototype.propertyIsEnumerable,ff=(i,e,t)=>e in i?R_(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,D_=(i,e)=>{for(var t in e||(e={}))tm.call(e,t)&&ff(i,t,e[t]);if(Na)for(var t of Na(e))nm.call(e,t)&&ff(i,t,e[t]);return i},F_=(i,e)=>P_(i,I_(e)),N_=(i,e)=>{var t={};for(var n in i)tm.call(i,n)&&e.indexOf(n)<0&&(t[n]=i[n]);if(i!=null&&Na)for(var n of Na(i))e.indexOf(n)<0&&nm.call(i,n)&&(t[n]=i[n]);return t};const B_=["low","medium","quartile","high","L","M","Q","H"],z_=[0,1,2,3,4,5,6,7],O_=["alphanumeric","numeric","kanji","byte"],U_=["image/png","image/jpeg","image/webp"],H_=40;var G_=$y({props:{version:{type:Number,validator:i=>i===Number.parseInt(String(i),10)&&i>=1&&i<=H_},errorCorrectionLevel:{type:String,validator:i=>B_.includes(i)},maskPattern:{type:Number,validator:i=>z_.includes(i)},toSJISFunc:Function,margin:Number,scale:Number,width:Number,color:{type:Object,validator:i=>["dark","light"].every(e=>["string","undefined"].includes(typeof i[e])),required:!0},type:{type:String,validator:i=>U_.includes(i),required:!0},quality:{type:Number,validator:i=>i===Number.parseFloat(String(i))&&i>=0&&i<=1,required:!1},value:{type:[String,Array],required:!0,validator(i){return typeof i=="string"?!0:i.every(e=>typeof e.data=="string"&&"mode"in e&&e.mode&&O_.includes(e.mode))}}},setup(i,{attrs:e,emit:t}){const n=Ec();return Ma(i,()=>{const s=i,{quality:o,value:a}=s,l=N_(s,["quality","value"]);ho.toDataURL(a,Object.assign(l,o==null||{renderOptions:{quality:o}})).then(c=>{n.value=c,t("change",c)}).catch(c=>t("error",c))},{immediate:!0}),()=>ev("img",F_(D_({},e),{src:n.value}))}});/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ru="134",k_={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},V_={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},im=0,zc=1,rm=2,W_=3,q_=0,Pu=1,sm=2,Fr=3,ji=0,lt=1,Zi=2,Iu=1,X_=2,Fn=0,Hr=1,Oc=2,Uc=3,Hc=4,om=5,zi=100,am=101,lm=102,Gc=103,kc=104,cm=200,um=201,hm=202,fm=203,Du=204,Fu=205,dm=206,pm=207,mm=208,gm=209,ym=210,xm=0,vm=1,_m=2,Ba=3,wm=4,bm=5,Mm=6,Sm=7,po=0,Em=1,Tm=2,ii=0,Am=1,Cm=2,Lm=3,Rm=4,Pm=5,el=300,sr=301,or=302,Ys=303,$s=304,us=306,mo=307,Js=1e3,Et=1001,js=1002,ft=1003,za=1004,Y_=1004,Oa=1005,$_=1005,mt=1006,Nu=1007,J_=1007,ar=1008,j_=1008,Nn=1009,Im=1010,Dm=1011,Zs=1012,Fm=1013,Os=1014,xn=1015,Vi=1016,Nm=1017,Bm=1018,zm=1019,Gr=1020,Om=1021,Wi=1022,Tt=1023,Um=1024,Hm=1025,Gm=Tt,qi=1026,Jr=1027,km=1028,Vm=1029,Wm=1030,qm=1031,Xm=1032,Ym=1033,Vc=33776,Wc=33777,qc=33778,Xc=33779,Yc=35840,$c=35841,Jc=35842,jc=35843,$m=36196,Zc=37492,Kc=37496,Jm=37808,jm=37809,Zm=37810,Km=37811,Qm=37812,eg=37813,tg=37814,ng=37815,ig=37816,rg=37817,sg=37818,og=37819,ag=37820,lg=37821,cg=36492,ug=37840,hg=37841,fg=37842,dg=37843,pg=37844,mg=37845,gg=37846,yg=37847,xg=37848,vg=37849,_g=37850,wg=37851,bg=37852,Mg=37853,Sg=2200,Eg=2201,Tg=2202,Ks=2300,Qs=2301,Aa=2302,Oi=2400,Ui=2401,eo=2402,tl=2500,Bu=2501,Ag=0,Z_=1,K_=2,Ct=3e3,mi=3001,nl=3007,il=3002,Cg=3003,zu=3004,Ou=3005,Uu=3006,Lg=3200,Rg=3201,lr=0,Pg=1,Q_=0,Ca=7680,ew=7681,tw=7682,nw=7683,iw=34055,rw=34056,sw=5386,ow=512,aw=513,lw=514,cw=515,uw=516,hw=517,fw=518,Ig=519,jr=35044,Zr=35048,dw=35040,pw=35045,mw=35049,gw=35041,yw=35046,xw=35050,vw=35042,_w="100",Qc="300 es";class gi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}let Fo=1234567;const Xi=Math.PI/180,to=180/Math.PI,Mt=[];for(let i=0;i<256;i++)Mt[i]=(i<16?"0":"")+i.toString(16);const ww=typeof crypto<"u"&&"randomUUID"in crypto;function $t(){if(ww)return crypto.randomUUID().toUpperCase();const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Mt[i&255]+Mt[i>>8&255]+Mt[i>>16&255]+Mt[i>>24&255]+"-"+Mt[e&255]+Mt[e>>8&255]+"-"+Mt[e>>16&15|64]+Mt[e>>24&255]+"-"+Mt[t&63|128]+Mt[t>>8&255]+"-"+Mt[t>>16&255]+Mt[t>>24&255]+Mt[n&255]+Mt[n>>8&255]+Mt[n>>16&255]+Mt[n>>24&255]).toUpperCase()}function St(i,e,t){return Math.max(e,Math.min(t,i))}function Hu(i,e){return(i%e+e)%e}function bw(i,e,t,n,r){return n+(i-e)*(r-n)/(t-e)}function Mw(i,e,t){return i!==e?(t-i)/(e-i):0}function Us(i,e,t){return(1-t)*i+t*e}function Sw(i,e,t,n){return Us(i,e,1-Math.exp(-t*n))}function Ew(i,e=1){return e-Math.abs(Hu(i,e*2)-e)}function Tw(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function Aw(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function Cw(i,e){return i+Math.floor(Math.random()*(e-i+1))}function Lw(i,e){return i+Math.random()*(e-i)}function Rw(i){return i*(.5-Math.random())}function Pw(i){return i!==void 0&&(Fo=i%2147483647),Fo=Fo*16807%2147483647,(Fo-1)/2147483646}function Iw(i){return i*Xi}function Dw(i){return i*to}function eu(i){return(i&i-1)===0&&i!==0}function Dg(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function Fg(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Fw(i,e,t,n,r){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),f=o((e-n)/2),d=s((n-e)/2),p=o((n-e)/2);switch(r){case"XYX":i.set(a*u,l*h,l*f,a*c);break;case"YZY":i.set(l*f,a*u,l*h,a*c);break;case"ZXZ":i.set(l*h,l*f,a*u,a*c);break;case"XZX":i.set(a*u,l*p,l*d,a*c);break;case"YXY":i.set(l*d,a*u,l*p,a*c);break;case"ZYZ":i.set(l*p,l*d,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}var df=Object.freeze({__proto__:null,DEG2RAD:Xi,RAD2DEG:to,generateUUID:$t,clamp:St,euclideanModulo:Hu,mapLinear:bw,inverseLerp:Mw,lerp:Us,damp:Sw,pingpong:Ew,smoothstep:Tw,smootherstep:Aw,randInt:Cw,randFloat:Lw,randFloatSpread:Rw,seededRandom:Pw,degToRad:Iw,radToDeg:Dw,isPowerOfTwo:eu,ceilPowerOfTwo:Dg,floorPowerOfTwo:Fg,setQuaternionFromProperEuler:Fw});class ne{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}ne.prototype.isVector2=!0;class gt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],f=n[2],d=n[5],p=n[8],y=r[0],x=r[3],m=r[6],g=r[1],_=r[4],v=r[7],S=r[2],T=r[5],b=r[8];return s[0]=o*y+a*g+l*S,s[3]=o*x+a*_+l*T,s[6]=o*m+a*v+l*b,s[1]=c*y+u*g+h*S,s[4]=c*x+u*_+h*T,s[7]=c*m+u*v+h*b,s[2]=f*y+d*g+p*S,s[5]=f*x+d*_+p*T,s[8]=f*m+d*v+p*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,f=a*l-u*s,d=c*s-o*l,p=t*h+n*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/p;return e[0]=h*y,e[1]=(r*c-u*n)*y,e[2]=(a*n-r*o)*y,e[3]=f*y,e[4]=(u*t-r*l)*y,e[5]=(r*s-a*t)*y,e[6]=d*y,e[7]=(n*l-c*t)*y,e[8]=(o*t-n*s)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*s+n*l,r[3]=t*o+n*c,r[6]=t*a+n*u,r[1]=-n*s+t*l,r[4]=-n*o+t*c,r[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}gt.prototype.isMatrix3=!0;function Ng(i){if(i.length===0)return-1/0;let e=i[0];for(let t=1,n=i.length;t<n;++t)i[t]>e&&(e=i[t]);return e}const Nw={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Nr(i,e){return new Nw[i](e)}function rl(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function pf(i,e=0){let t=3735928559^e,n=1103547991^e;for(let r=0,s;r<i.length;r++)s=i.charCodeAt(r),t=Math.imul(t^s,2654435761),n=Math.imul(n^s,1597334677);return t=Math.imul(t^t>>>16,2246822507)^Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507)^Math.imul(t^t>>>13,3266489909),4294967296*(2097151&n)+(t>>>0)}let mr;class cr{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{mr===void 0&&(mr=rl("canvas")),mr.width=e.width,mr.height=e.height;const n=mr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=mr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let Bw=0;class yt extends gi{constructor(e=yt.DEFAULT_IMAGE,t=yt.DEFAULT_MAPPING,n=Et,r=Et,s=mt,o=ar,a=Tt,l=Nn,c=1,u=Ct){super(),Object.defineProperty(this,"id",{value:Bw++}),this.uuid=$t(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ne(0,0),this.repeat=new ne(1,1),this.center=new ne(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const r=this.image;if(r.uuid===void 0&&(r.uuid=$t()),!t&&e.images[r.uuid]===void 0){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(Ul(r[o].image)):s.push(Ul(r[o]))}else s=Ul(r);e.images[r.uuid]={uuid:r.uuid,url:s}}n.image=r.uuid}return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==el)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Js:e.x=e.x-Math.floor(e.x);break;case Et:e.x=e.x<0?0:1;break;case js:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Js:e.y=e.y-Math.floor(e.y);break;case Et:e.y=e.y<0?0:1;break;case js:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&this.version++}}yt.DEFAULT_IMAGE=void 0;yt.DEFAULT_MAPPING=el;yt.prototype.isTexture=!0;function Ul(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?cr.getDataURL(i):i.data?{data:Array.prototype.slice.call(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class Ye{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],h=l[8],f=l[1],d=l[5],p=l[9],y=l[2],x=l[6],m=l[10];if(Math.abs(u-f)<.01&&Math.abs(h-y)<.01&&Math.abs(p-x)<.01){if(Math.abs(u+f)<.1&&Math.abs(h+y)<.1&&Math.abs(p+x)<.1&&Math.abs(c+d+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const _=(c+1)/2,v=(d+1)/2,S=(m+1)/2,T=(u+f)/4,b=(h+y)/4,R=(p+x)/4;return _>v&&_>S?_<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(_),r=T/n,s=b/n):v>S?v<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(v),n=T/r,s=R/r):S<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(S),n=b/s,r=R/s),this.set(n,r,s,t),this}let g=Math.sqrt((x-p)*(x-p)+(h-y)*(h-y)+(f-u)*(f-u));return Math.abs(g)<.001&&(g=1),this.x=(x-p)/g,this.y=(h-y)/g,this.z=(f-u)/g,this.w=Math.acos((c+d+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}Ye.prototype.isVector4=!0;class un extends gi{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ye(0,0,e,t),this.scissorTest=!1,this.viewport=new Ye(0,0,e,t),this.texture=new yt(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:mt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}un.prototype.isWebGLRenderTarget=!0;class Bg extends un{constructor(e,t,n){super(e,t);const r=this.texture;this.texture=[];for(let s=0;s<n;s++)this.texture[s]=r.clone()}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.texture.length;r<s;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}Bg.prototype.isWebGLMultipleRenderTargets=!0;class Gu extends un{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}Gu.prototype.isWebGLMultisampleRenderTarget=!0;class At{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,s,o,a){let l=n[r+0],c=n[r+1],u=n[r+2],h=n[r+3];const f=s[o+0],d=s[o+1],p=s[o+2],y=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=f,e[t+1]=d,e[t+2]=p,e[t+3]=y;return}if(h!==y||l!==f||c!==d||u!==p){let x=1-a;const m=l*f+c*d+u*p+h*y,g=m>=0?1:-1,_=1-m*m;if(_>Number.EPSILON){const S=Math.sqrt(_),T=Math.atan2(S,m*g);x=Math.sin(x*T)/S,a=Math.sin(a*T)/S}const v=a*g;if(l=l*x+f*v,c=c*x+d*v,u=u*x+p*v,h=h*x+y*v,x===1-a){const S=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=S,c*=S,u*=S,h*=S}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,r,s,o){const a=n[r],l=n[r+1],c=n[r+2],u=n[r+3],h=s[o],f=s[o+1],d=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*d-c*f,e[t+1]=l*p+u*f+c*h-a*d,e[t+2]=c*p+u*d+a*f-l*h,e[t+3]=u*p-a*h-l*f-c*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(r/2),h=a(s/2),f=l(n/2),d=l(r/2),p=l(s/2);switch(o){case"XYZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"YXZ":this._x=f*u*h+c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"ZXY":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h-f*d*p;break;case"ZYX":this._x=f*u*h-c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h+f*d*p;break;case"YZX":this._x=f*u*h+c*d*p,this._y=c*d*h+f*u*p,this._z=c*u*p-f*d*h,this._w=c*u*h-f*d*p;break;case"XZY":this._x=f*u*h-c*d*p,this._y=c*d*h-f*u*p,this._z=c*u*p+f*d*h,this._w=c*u*h+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],f=n+a+h;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(u-l)*d,this._y=(s-c)*d,this._z=(o-r)*d}else if(n>a&&n>h){const d=2*Math.sqrt(1+n-a-h);this._w=(u-l)/d,this._x=.25*d,this._y=(r+o)/d,this._z=(s+c)/d}else if(a>h){const d=2*Math.sqrt(1+a-n-h);this._w=(s-c)/d,this._x=(r+o)/d,this._y=.25*d,this._z=(l+u)/d}else{const d=2*Math.sqrt(1+h-n-a);this._w=(o-r)/d,this._x=(s+c)/d,this._y=(l+u)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(St(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-r*a,this._w=o*u-n*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const d=1-t;return this._w=d*o+t*this._w,this._x=d*n+t*this._x,this._y=d*r+t*this._y,this._z=d*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,f=Math.sin(t*u)/c;return this._w=o*h+this._w*f,this._x=n*h+this._x*f,this._y=r*h+this._y*f,this._z=s*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(s),n*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}At.prototype.isQuaternion=!0;class A{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(mf.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(mf.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*n,u=l*n+a*t-s*r,h=l*r+s*n-o*t,f=-s*t-o*n-a*r;return this.x=c*l+f*-s+u*-a-h*-o,this.y=u*l+f*-o+h*-s-c*-a,this.z=h*l+f*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-n*l,this.z=n*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Hl.copy(this).projectOnVector(e),this.sub(Hl)}reflect(e){return this.sub(Hl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(St(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}A.prototype.isVector3=!0;const Hl=new A,mf=new At;class Zt{constructor(e=new A(1/0,1/0,1/0),t=new A(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],f=e[l+2];u<t&&(t=u),h<n&&(n=h),f<r&&(r=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),f=e.getZ(l);u<t&&(t=u),h<n&&(n=h),f<r&&(r=f),u>s&&(s=u),h>o&&(o=h),f>a&&(a=f)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=vs.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),Gl.copy(t.boundingBox),Gl.applyMatrix4(e.matrixWorld),this.union(Gl));const n=e.children;for(let r=0,s=n.length;r<s;r++)this.expandByObject(n[r]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,vs),vs.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(_s),No.subVectors(this.max,_s),gr.subVectors(e.a,_s),yr.subVectors(e.b,_s),xr.subVectors(e.c,_s),Wn.subVectors(yr,gr),qn.subVectors(xr,yr),Ai.subVectors(gr,xr);let t=[0,-Wn.z,Wn.y,0,-qn.z,qn.y,0,-Ai.z,Ai.y,Wn.z,0,-Wn.x,qn.z,0,-qn.x,Ai.z,0,-Ai.x,-Wn.y,Wn.x,0,-qn.y,qn.x,0,-Ai.y,Ai.x,0];return!kl(t,gr,yr,xr,No)||(t=[1,0,0,0,1,0,0,0,1],!kl(t,gr,yr,xr,No))?!1:(Bo.crossVectors(Wn,qn),t=[Bo.x,Bo.y,Bo.z],kl(t,gr,yr,xr,No))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return vs.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(vs).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Tn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Tn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Tn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Tn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Tn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Tn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Tn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Tn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Tn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Zt.prototype.isBox3=!0;const Tn=[new A,new A,new A,new A,new A,new A,new A,new A],vs=new A,Gl=new Zt,gr=new A,yr=new A,xr=new A,Wn=new A,qn=new A,Ai=new A,_s=new A,No=new A,Bo=new A,Ci=new A;function kl(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Ci.fromArray(i,s);const a=r.x*Math.abs(Ci.x)+r.y*Math.abs(Ci.y)+r.z*Math.abs(Ci.z),l=e.dot(Ci),c=t.dot(Ci),u=n.dot(Ci);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const zw=new Zt,gf=new A,Vl=new A,Wl=new A;class yi{constructor(e=new A,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):zw.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Wl.subVectors(e,this.center);const t=Wl.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.add(Wl.multiplyScalar(r/n)),this.radius+=r}return this}union(e){return Vl.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(gf.copy(e.center).add(Vl)),this.expandByPoint(gf.copy(e.center).sub(Vl)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const An=new A,ql=new A,zo=new A,Xn=new A,Xl=new A,Oo=new A,Yl=new A;class xi{constructor(e=new A,t=new A(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,An)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=An.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(An.copy(this.direction).multiplyScalar(t).add(this.origin),An.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){ql.copy(e).add(t).multiplyScalar(.5),zo.copy(t).sub(e).normalize(),Xn.copy(this.origin).sub(ql);const s=e.distanceTo(t)*.5,o=-this.direction.dot(zo),a=Xn.dot(this.direction),l=-Xn.dot(zo),c=Xn.lengthSq(),u=Math.abs(1-o*o);let h,f,d,p;if(u>0)if(h=o*l-a,f=o*a-l,p=s*u,h>=0)if(f>=-p)if(f<=p){const y=1/u;h*=y,f*=y,d=h*(h+o*f+2*a)+f*(o*h+f+2*l)+c}else f=s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f=-s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-o*s+a)),f=h>0?-s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-s,-l),s),d=f*(f+2*l)+c):(h=Math.max(0,-(o*s+a)),f=h>0?s:Math.min(Math.max(-s,-l),s),d=-h*h+f*(f+2*l)+c);else f=o>0?-s:s,h=Math.max(0,-(o*f+a)),d=-h*h+f*(f+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),r&&r.copy(zo).multiplyScalar(f).add(ql),d}intersectSphere(e,t){An.subVectors(e.center,this.origin);const n=An.dot(this.direction),r=An.dot(An)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(n=(e.min.x-f.x)*c,r=(e.max.x-f.x)*c):(n=(e.max.x-f.x)*c,r=(e.min.x-f.x)*c),u>=0?(s=(e.min.y-f.y)*u,o=(e.max.y-f.y)*u):(s=(e.max.y-f.y)*u,o=(e.min.y-f.y)*u),n>o||s>r||((s>n||n!==n)&&(n=s),(o<r||r!==r)&&(r=o),h>=0?(a=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(a=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),n>l||a>r)||((a>n||n!==n)&&(n=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,An)!==null}intersectTriangle(e,t,n,r,s){Xl.subVectors(t,e),Oo.subVectors(n,e),Yl.crossVectors(Xl,Oo);let o=this.direction.dot(Yl),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Xn.subVectors(this.origin,e);const l=a*this.direction.dot(Oo.crossVectors(Xn,Oo));if(l<0)return null;const c=a*this.direction.dot(Xl.cross(Xn));if(c<0||l+c>o)return null;const u=-a*Xn.dot(Yl);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class _e{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,s,o,a,l,c,u,h,f,d,p,y,x){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=s,m[5]=o,m[9]=a,m[13]=l,m[2]=c,m[6]=u,m[10]=h,m[14]=f,m[3]=d,m[7]=p,m[11]=y,m[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new _e().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/vr.setFromMatrixColumn(e,0).length(),s=1/vr.setFromMatrixColumn(e,1).length(),o=1/vr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const f=o*u,d=o*h,p=a*u,y=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=d+p*c,t[5]=f-y*c,t[9]=-a*l,t[2]=y-f*c,t[6]=p+d*c,t[10]=o*l}else if(e.order==="YXZ"){const f=l*u,d=l*h,p=c*u,y=c*h;t[0]=f+y*a,t[4]=p*a-d,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=d*a-p,t[6]=y+f*a,t[10]=o*l}else if(e.order==="ZXY"){const f=l*u,d=l*h,p=c*u,y=c*h;t[0]=f-y*a,t[4]=-o*h,t[8]=p+d*a,t[1]=d+p*a,t[5]=o*u,t[9]=y-f*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const f=o*u,d=o*h,p=a*u,y=a*h;t[0]=l*u,t[4]=p*c-d,t[8]=f*c+y,t[1]=l*h,t[5]=y*c+f,t[9]=d*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const f=o*l,d=o*c,p=a*l,y=a*c;t[0]=l*u,t[4]=y-f*h,t[8]=p*h+d,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=d*h+p,t[10]=f-y*h}else if(e.order==="XZY"){const f=o*l,d=o*c,p=a*l,y=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=f*h+y,t[5]=o*u,t[9]=d*h-p,t[2]=p*h-d,t[6]=a*u,t[10]=y*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ow,e,Uw)}lookAt(e,t,n){const r=this.elements;return Vt.subVectors(e,t),Vt.lengthSq()===0&&(Vt.z=1),Vt.normalize(),Yn.crossVectors(n,Vt),Yn.lengthSq()===0&&(Math.abs(n.z)===1?Vt.x+=1e-4:Vt.z+=1e-4,Vt.normalize(),Yn.crossVectors(n,Vt)),Yn.normalize(),Uo.crossVectors(Vt,Yn),r[0]=Yn.x,r[4]=Uo.x,r[8]=Vt.x,r[1]=Yn.y,r[5]=Uo.y,r[9]=Vt.y,r[2]=Yn.z,r[6]=Uo.z,r[10]=Vt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],f=n[9],d=n[13],p=n[2],y=n[6],x=n[10],m=n[14],g=n[3],_=n[7],v=n[11],S=n[15],T=r[0],b=r[4],R=r[8],H=r[12],F=r[1],P=r[5],ee=r[9],k=r[13],W=r[2],J=r[6],V=r[10],q=r[14],ie=r[3],me=r[7],we=r[11],ue=r[15];return s[0]=o*T+a*F+l*W+c*ie,s[4]=o*b+a*P+l*J+c*me,s[8]=o*R+a*ee+l*V+c*we,s[12]=o*H+a*k+l*q+c*ue,s[1]=u*T+h*F+f*W+d*ie,s[5]=u*b+h*P+f*J+d*me,s[9]=u*R+h*ee+f*V+d*we,s[13]=u*H+h*k+f*q+d*ue,s[2]=p*T+y*F+x*W+m*ie,s[6]=p*b+y*P+x*J+m*me,s[10]=p*R+y*ee+x*V+m*we,s[14]=p*H+y*k+x*q+m*ue,s[3]=g*T+_*F+v*W+S*ie,s[7]=g*b+_*P+v*J+S*me,s[11]=g*R+_*ee+v*V+S*we,s[15]=g*H+_*k+v*q+S*ue,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],f=e[10],d=e[14],p=e[3],y=e[7],x=e[11],m=e[15];return p*(+s*l*h-r*c*h-s*a*f+n*c*f+r*a*d-n*l*d)+y*(+t*l*d-t*c*f+s*o*f-r*o*d+r*c*u-s*l*u)+x*(+t*c*h-t*a*d-s*o*h+n*o*d+s*a*u-n*c*u)+m*(-r*a*u-t*l*h+t*a*f+r*o*h-n*o*f+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],f=e[10],d=e[11],p=e[12],y=e[13],x=e[14],m=e[15],g=h*x*c-y*f*c+y*l*d-a*x*d-h*l*m+a*f*m,_=p*f*c-u*x*c-p*l*d+o*x*d+u*l*m-o*f*m,v=u*y*c-p*h*c+p*a*d-o*y*d-u*a*m+o*h*m,S=p*h*l-u*y*l-p*a*f+o*y*f+u*a*x-o*h*x,T=t*g+n*_+r*v+s*S;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/T;return e[0]=g*b,e[1]=(y*f*s-h*x*s-y*r*d+n*x*d+h*r*m-n*f*m)*b,e[2]=(a*x*s-y*l*s+y*r*c-n*x*c-a*r*m+n*l*m)*b,e[3]=(h*l*s-a*f*s-h*r*c+n*f*c+a*r*d-n*l*d)*b,e[4]=_*b,e[5]=(u*x*s-p*f*s+p*r*d-t*x*d-u*r*m+t*f*m)*b,e[6]=(p*l*s-o*x*s-p*r*c+t*x*c+o*r*m-t*l*m)*b,e[7]=(o*f*s-u*l*s+u*r*c-t*f*c-o*r*d+t*l*d)*b,e[8]=v*b,e[9]=(p*h*s-u*y*s-p*n*d+t*y*d+u*n*m-t*h*m)*b,e[10]=(o*y*s-p*a*s+p*n*c-t*y*c-o*n*m+t*a*m)*b,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*d-t*a*d)*b,e[12]=S*b,e[13]=(u*y*r-p*h*r+p*n*f-t*y*f-u*n*x+t*h*x)*b,e[14]=(p*a*r-o*y*r-p*n*l+t*y*l+o*n*x-t*a*x)*b,e[15]=(o*h*r-u*a*r+u*n*l-t*h*l-o*n*f+t*a*f)*b,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+n,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,f=s*c,d=s*u,p=s*h,y=o*u,x=o*h,m=a*h,g=l*c,_=l*u,v=l*h,S=n.x,T=n.y,b=n.z;return r[0]=(1-(y+m))*S,r[1]=(d+v)*S,r[2]=(p-_)*S,r[3]=0,r[4]=(d-v)*T,r[5]=(1-(f+m))*T,r[6]=(x+g)*T,r[7]=0,r[8]=(p+_)*b,r[9]=(x-g)*b,r[10]=(1-(f+y))*b,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=vr.set(r[0],r[1],r[2]).length();const o=vr.set(r[4],r[5],r[6]).length(),a=vr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],rn.copy(this);const c=1/s,u=1/o,h=1/a;return rn.elements[0]*=c,rn.elements[1]*=c,rn.elements[2]*=c,rn.elements[4]*=u,rn.elements[5]*=u,rn.elements[6]*=u,rn.elements[8]*=h,rn.elements[9]*=h,rn.elements[10]*=h,t.setFromRotationMatrix(rn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,r,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,l=2*s/(t-e),c=2*s/(n-r),u=(t+e)/(t-e),h=(n+r)/(n-r),f=-(o+s)/(o-s),d=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=f,a[14]=d,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,s,o){const a=this.elements,l=1/(t-e),c=1/(n-r),u=1/(o-s),h=(t+e)*l,f=(n+r)*c,d=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-f,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-d,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}_e.prototype.isMatrix4=!0;const vr=new A,rn=new _e,Ow=new A(0,0,0),Uw=new A(1,1,1),Yn=new A,Uo=new A,Vt=new A,yf=new _e,xf=new At;class ur{constructor(e=0,t=0,n=0,r=ur.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],f=r[6],d=r[10];switch(t){case"XYZ":this._y=Math.asin(St(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,d),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-St(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(St(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-St(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(St(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-St(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return yf.makeRotationFromQuaternion(e),this.setFromRotationMatrix(yf,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return xf.setFromEuler(this),this.setFromQuaternion(xf,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new A(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ur.prototype.isEuler=!0;ur.DefaultOrder="XYZ";ur.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ku{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let Hw=0;const vf=new A,_r=new At,Cn=new _e,Ho=new A,ws=new A,Gw=new A,kw=new At,_f=new A(1,0,0),wf=new A(0,1,0),bf=new A(0,0,1),Vw={type:"added"},Mf={type:"removed"};class ze extends gi{constructor(){super(),Object.defineProperty(this,"id",{value:Hw++}),this.uuid=$t(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ze.DefaultUp.clone();const e=new A,t=new ur,n=new At,r=new A(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new _e},normalMatrix:{value:new gt}}),this.matrix=new _e,this.matrixWorld=new _e,this.matrixAutoUpdate=ze.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ku,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return _r.setFromAxisAngle(e,t),this.quaternion.multiply(_r),this}rotateOnWorldAxis(e,t){return _r.setFromAxisAngle(e,t),this.quaternion.premultiply(_r),this}rotateX(e){return this.rotateOnAxis(_f,e)}rotateY(e){return this.rotateOnAxis(wf,e)}rotateZ(e){return this.rotateOnAxis(bf,e)}translateOnAxis(e,t){return vf.copy(e).applyQuaternion(this.quaternion),this.position.add(vf.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_f,e)}translateY(e){return this.translateOnAxis(wf,e)}translateZ(e){return this.translateOnAxis(bf,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Cn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ho.copy(e):Ho.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),ws.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Cn.lookAt(ws,Ho,this.up):Cn.lookAt(Ho,ws,this.up),this.quaternion.setFromRotationMatrix(Cn),r&&(Cn.extractRotation(r.matrixWorld),_r.setFromRotationMatrix(Cn),this.quaternion.premultiply(_r.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Vw)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Mf)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Mf)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Cn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Cn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Cn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ws,e,Gw),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ws,kw,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),f=o(e.skeletons),d=o(e.animations);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),f.length>0&&(n.skeletons=f),d.length>0&&(n.animations=d)}return n.object=r,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}ze.DefaultUp=new A(0,1,0);ze.DefaultMatrixAutoUpdate=!0;ze.prototype.isObject3D=!0;const sn=new A,Ln=new A,$l=new A,Rn=new A,wr=new A,br=new A,Sf=new A,Jl=new A,jl=new A,Zl=new A;class ct{constructor(e=new A,t=new A,n=new A){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),sn.subVectors(e,t),r.cross(sn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){sn.subVectors(r,t),Ln.subVectors(n,t),$l.subVectors(e,t);const o=sn.dot(sn),a=sn.dot(Ln),l=sn.dot($l),c=Ln.dot(Ln),u=Ln.dot($l),h=o*c-a*a;if(h===0)return s.set(-2,-1,-1);const f=1/h,d=(c*l-a*u)*f,p=(o*u-a*l)*f;return s.set(1-d-p,p,d)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Rn),Rn.x>=0&&Rn.y>=0&&Rn.x+Rn.y<=1}static getUV(e,t,n,r,s,o,a,l){return this.getBarycoord(e,t,n,r,Rn),l.set(0,0),l.addScaledVector(s,Rn.x),l.addScaledVector(o,Rn.y),l.addScaledVector(a,Rn.z),l}static isFrontFacing(e,t,n,r){return sn.subVectors(n,t),Ln.subVectors(e,t),sn.cross(Ln).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return sn.subVectors(this.c,this.b),Ln.subVectors(this.a,this.b),sn.cross(Ln).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ct.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ct.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,s){return ct.getUV(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return ct.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ct.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,a;wr.subVectors(r,n),br.subVectors(s,n),Jl.subVectors(e,n);const l=wr.dot(Jl),c=br.dot(Jl);if(l<=0&&c<=0)return t.copy(n);jl.subVectors(e,r);const u=wr.dot(jl),h=br.dot(jl);if(u>=0&&h<=u)return t.copy(r);const f=l*h-u*c;if(f<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(wr,o);Zl.subVectors(e,s);const d=wr.dot(Zl),p=br.dot(Zl);if(p>=0&&d<=p)return t.copy(s);const y=d*c-l*p;if(y<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(n).addScaledVector(br,a);const x=u*p-d*h;if(x<=0&&h-u>=0&&d-p>=0)return Sf.subVectors(s,r),a=(h-u)/(h-u+(d-p)),t.copy(r).addScaledVector(Sf,a);const m=1/(x+y+f);return o=y*m,a=f*m,t.copy(n).addScaledVector(wr,o).addScaledVector(br,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Ww=0;class wt extends gi{constructor(){super(),Object.defineProperty(this,"id",{value:Ww++}),this.uuid=$t(),this.name="",this.type="Material",this.fog=!0,this.blending=Hr,this.side=ji,this.vertexColors=!1,this.opacity=1,this.format=Tt,this.transparent=!1,this.blendSrc=Du,this.blendDst=Fu,this.blendEquation=zi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ba,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ig,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ca,this.stencilZFail=Ca,this.stencilZPass=Ca,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Iu;continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Hr&&(n.blending=this.blending),this.side!==ji&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==Tt&&(n.format=this.format),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}wt.prototype.isMaterial=!0;const zg={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},on={h:0,s:0,l:0},Go={h:0,s:0,l:0};function Kl(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}function Ql(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function ec(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}class de{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){if(e=Hu(e,1),t=St(t,0,1),n=St(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,s=2*n-r;this.r=Kl(s,r,e+1/3),this.g=Kl(s,r,e),this.b=Kl(s,r,e-1/3)}return this}setStyle(e){function t(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const s=n[1],o=n[2];switch(s){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const a=parseFloat(r[1])/360,l=parseInt(r[2],10)/100,c=parseInt(r[3],10)/100;return t(r[4]),this.setHSL(a,l,c)}break}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=n[1],s=r.length;if(s===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,this;if(s===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const t=zg[e.toLowerCase()];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){const n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Ql(e.r),this.g=Ql(e.g),this.b=Ql(e.b),this}copyLinearToSRGB(e){return this.r=ec(e.r),this.g=ec(e.g),this.b=ec(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){const t=this.r,n=this.g,r=this.b,s=Math.max(t,n,r),o=Math.min(t,n,r);let a,l;const c=(o+s)/2;if(o===s)a=0,l=0;else{const u=s-o;switch(l=c<=.5?u/(s+o):u/(2-s-o),s){case t:a=(n-r)/u+(n<r?6:0);break;case n:a=(r-t)/u+2;break;case r:a=(t-n)/u+4;break}a/=6}return e.h=a,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,t,n){return this.getHSL(on),on.h+=e,on.s+=t,on.l+=n,this.setHSL(on.h,on.s,on.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(on),e.getHSL(Go);const n=Us(on.h,Go.h,t),r=Us(on.s,Go.s,t),s=Us(on.l,Go.l,t);return this.setHSL(n,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}de.NAMES=zg;de.prototype.isColor=!0;de.prototype.r=1;de.prototype.g=1;de.prototype.b=1;class Gn extends wt{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new de(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=po,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}Gn.prototype.isMeshBasicMaterial=!0;const Je=new A,ko=new ne;class He{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=jr,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),o=new de),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new ne),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new A),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let r=0,s=e.length;r<s;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),o=new Ye),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ko.fromBufferAttribute(this,t),ko.applyMatrix3(e),this.setXY(t,ko.x,ko.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Je.fromBufferAttribute(this,t),Je.applyMatrix3(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Je.x=this.getX(t),Je.y=this.getY(t),Je.z=this.getZ(t),Je.applyMatrix4(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Je.x=this.getX(t),Je.y=this.getY(t),Je.z=this.getZ(t),Je.applyNormalMatrix(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Je.x=this.getX(t),Je.y=this.getY(t),Je.z=this.getZ(t),Je.transformDirection(e),this.setXYZ(t,Je.x,Je.y,Je.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==jr&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}He.prototype.isBufferAttribute=!0;class Og extends He{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Ug extends He{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Hg extends He{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Gg extends He{constructor(e,t,n){super(new Int16Array(e),t,n)}}class sl extends He{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class kg extends He{constructor(e,t,n){super(new Int32Array(e),t,n)}}class ol extends He{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Vg extends He{constructor(e,t,n){super(new Uint16Array(e),t,n)}}Vg.prototype.isFloat16BufferAttribute=!0;class xe extends He{constructor(e,t,n){super(new Float32Array(e),t,n)}}class Wg extends He{constructor(e,t,n){super(new Float64Array(e),t,n)}}let qw=0;const Kt=new _e,tc=new ze,Mr=new A,Wt=new Zt,bs=new Zt,xt=new A;class Te extends gi{constructor(){super(),Object.defineProperty(this,"id",{value:qw++}),this.uuid=$t(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ng(e)>65535?ol:sl)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new gt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Kt.makeRotationFromQuaternion(e),this.applyMatrix4(Kt),this}rotateX(e){return Kt.makeRotationX(e),this.applyMatrix4(Kt),this}rotateY(e){return Kt.makeRotationY(e),this.applyMatrix4(Kt),this}rotateZ(e){return Kt.makeRotationZ(e),this.applyMatrix4(Kt),this}translate(e,t,n){return Kt.makeTranslation(e,t,n),this.applyMatrix4(Kt),this}scale(e,t,n){return Kt.makeScale(e,t,n),this.applyMatrix4(Kt),this}lookAt(e){return tc.lookAt(e),tc.updateMatrix(),this.applyMatrix4(tc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Mr).negate(),this.translate(Mr.x,Mr.y,Mr.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new xe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Zt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new A(-1/0,-1/0,-1/0),new A(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];Wt.setFromBufferAttribute(s),this.morphTargetsRelative?(xt.addVectors(this.boundingBox.min,Wt.min),this.boundingBox.expandByPoint(xt),xt.addVectors(this.boundingBox.max,Wt.max),this.boundingBox.expandByPoint(xt)):(this.boundingBox.expandByPoint(Wt.min),this.boundingBox.expandByPoint(Wt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new A,1/0);return}if(e){const n=this.boundingSphere.center;if(Wt.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];bs.setFromBufferAttribute(a),this.morphTargetsRelative?(xt.addVectors(Wt.min,bs.min),Wt.expandByPoint(xt),xt.addVectors(Wt.max,bs.max),Wt.expandByPoint(xt)):(Wt.expandByPoint(bs.min),Wt.expandByPoint(bs.max))}Wt.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)xt.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(xt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)xt.fromBufferAttribute(a,c),l&&(Mr.fromBufferAttribute(e,c),xt.add(Mr)),r=Math.max(r,n.distanceToSquared(xt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;t.tangent===void 0&&this.setAttribute("tangent",new He(new Float32Array(4*a),4));const l=t.tangent.array,c=[],u=[];for(let F=0;F<a;F++)c[F]=new A,u[F]=new A;const h=new A,f=new A,d=new A,p=new ne,y=new ne,x=new ne,m=new A,g=new A;function _(F,P,ee){h.fromArray(r,F*3),f.fromArray(r,P*3),d.fromArray(r,ee*3),p.fromArray(o,F*2),y.fromArray(o,P*2),x.fromArray(o,ee*2),f.sub(h),d.sub(h),y.sub(p),x.sub(p);const k=1/(y.x*x.y-x.x*y.y);isFinite(k)&&(m.copy(f).multiplyScalar(x.y).addScaledVector(d,-y.y).multiplyScalar(k),g.copy(d).multiplyScalar(y.x).addScaledVector(f,-x.x).multiplyScalar(k),c[F].add(m),c[P].add(m),c[ee].add(m),u[F].add(g),u[P].add(g),u[ee].add(g))}let v=this.groups;v.length===0&&(v=[{start:0,count:n.length}]);for(let F=0,P=v.length;F<P;++F){const ee=v[F],k=ee.start,W=ee.count;for(let J=k,V=k+W;J<V;J+=3)_(n[J+0],n[J+1],n[J+2])}const S=new A,T=new A,b=new A,R=new A;function H(F){b.fromArray(s,F*3),R.copy(b);const P=c[F];S.copy(P),S.sub(b.multiplyScalar(b.dot(P))).normalize(),T.crossVectors(R,P);const k=T.dot(u[F])<0?-1:1;l[F*4]=S.x,l[F*4+1]=S.y,l[F*4+2]=S.z,l[F*4+3]=k}for(let F=0,P=v.length;F<P;++F){const ee=v[F],k=ee.start,W=ee.count;for(let J=k,V=k+W;J<V;J+=3)H(n[J+0]),H(n[J+1]),H(n[J+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new He(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,d=n.count;f<d;f++)n.setXYZ(f,0,0,0);const r=new A,s=new A,o=new A,a=new A,l=new A,c=new A,u=new A,h=new A;if(e)for(let f=0,d=e.count;f<d;f+=3){const p=e.getX(f+0),y=e.getX(f+1),x=e.getX(f+2);r.fromBufferAttribute(t,p),s.fromBufferAttribute(t,y),o.fromBufferAttribute(t,x),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,y),c.fromBufferAttribute(n,x),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(y,l.x,l.y,l.z),n.setXYZ(x,c.x,c.y,c.z)}else for(let f=0,d=t.count;f<d;f+=3)r.fromBufferAttribute(t,f+0),s.fromBufferAttribute(t,f+1),o.fromBufferAttribute(t,f+2),u.subVectors(o,s),h.subVectors(r,s),u.cross(h),n.setXYZ(f+0,u.x,u.y,u.z),n.setXYZ(f+1,u.x,u.y,u.z),n.setXYZ(f+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(e.attributes[r]===void 0)continue;const o=n[r].array,a=e.attributes[r],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let h=0,f=c;h<u;h++,f++)o[f]=l[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)xt.fromBufferAttribute(e,t),xt.normalize(),e.setXYZ(t,xt.x,xt.y,xt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,f=new c.constructor(l.length*u);let d=0,p=0;for(let y=0,x=l.length;y<x;y++){a.isInterleavedBufferAttribute?d=l[y]*a.data.stride+a.offset:d=l[y]*u;for(let m=0;m<u;m++)f[p++]=c[d++]}return new He(f,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Te,n=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=e(f,n);l.push(d)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,f=c.length;h<f;h++){const d=c[h];u.push(d.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let f=0,d=h.length;f<d;f++)u.push(h[f].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Te.prototype.isBufferGeometry=!0;const Ef=new _e,Sr=new xi,nc=new yi,$n=new A,Jn=new A,jn=new A,ic=new A,rc=new A,sc=new A,Vo=new A,Wo=new A,qo=new A,Xo=new ne,Yo=new ne,$o=new ne,oc=new A,Jo=new A;class dt extends ze{constructor(e=new Te,t=new Gn){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),nc.copy(n.boundingSphere),nc.applyMatrix4(s),e.ray.intersectsSphere(nc)===!1)||(Ef.copy(s).invert(),Sr.copy(e.ray).applyMatrix4(Ef),n.boundingBox!==null&&Sr.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,f=n.attributes.uv2,d=n.groups,p=n.drawRange;if(a!==null)if(Array.isArray(r))for(let y=0,x=d.length;y<x;y++){const m=d[y],g=r[m.materialIndex],_=Math.max(m.start,p.start),v=Math.min(a.count,Math.min(m.start+m.count,p.start+p.count));for(let S=_,T=v;S<T;S+=3){const b=a.getX(S),R=a.getX(S+1),H=a.getX(S+2);o=jo(this,g,e,Sr,l,c,u,h,f,b,R,H),o&&(o.faceIndex=Math.floor(S/3),o.face.materialIndex=m.materialIndex,t.push(o))}}else{const y=Math.max(0,p.start),x=Math.min(a.count,p.start+p.count);for(let m=y,g=x;m<g;m+=3){const _=a.getX(m),v=a.getX(m+1),S=a.getX(m+2);o=jo(this,r,e,Sr,l,c,u,h,f,_,v,S),o&&(o.faceIndex=Math.floor(m/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let y=0,x=d.length;y<x;y++){const m=d[y],g=r[m.materialIndex],_=Math.max(m.start,p.start),v=Math.min(l.count,Math.min(m.start+m.count,p.start+p.count));for(let S=_,T=v;S<T;S+=3){const b=S,R=S+1,H=S+2;o=jo(this,g,e,Sr,l,c,u,h,f,b,R,H),o&&(o.faceIndex=Math.floor(S/3),o.face.materialIndex=m.materialIndex,t.push(o))}}else{const y=Math.max(0,p.start),x=Math.min(l.count,p.start+p.count);for(let m=y,g=x;m<g;m+=3){const _=m,v=m+1,S=m+2;o=jo(this,r,e,Sr,l,c,u,h,f,_,v,S),o&&(o.faceIndex=Math.floor(m/3),t.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}dt.prototype.isMesh=!0;function Xw(i,e,t,n,r,s,o,a){let l;if(e.side===lt?l=n.intersectTriangle(o,s,r,!0,a):l=n.intersectTriangle(r,s,o,e.side!==Zi,a),l===null)return null;Jo.copy(a),Jo.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(Jo);return c<t.near||c>t.far?null:{distance:c,point:Jo.clone(),object:i}}function jo(i,e,t,n,r,s,o,a,l,c,u,h){$n.fromBufferAttribute(r,c),Jn.fromBufferAttribute(r,u),jn.fromBufferAttribute(r,h);const f=i.morphTargetInfluences;if(s&&f){Vo.set(0,0,0),Wo.set(0,0,0),qo.set(0,0,0);for(let p=0,y=s.length;p<y;p++){const x=f[p],m=s[p];x!==0&&(ic.fromBufferAttribute(m,c),rc.fromBufferAttribute(m,u),sc.fromBufferAttribute(m,h),o?(Vo.addScaledVector(ic,x),Wo.addScaledVector(rc,x),qo.addScaledVector(sc,x)):(Vo.addScaledVector(ic.sub($n),x),Wo.addScaledVector(rc.sub(Jn),x),qo.addScaledVector(sc.sub(jn),x)))}$n.add(Vo),Jn.add(Wo),jn.add(qo)}i.isSkinnedMesh&&(i.boneTransform(c,$n),i.boneTransform(u,Jn),i.boneTransform(h,jn));const d=Xw(i,e,t,n,$n,Jn,jn,oc);if(d){a&&(Xo.fromBufferAttribute(a,c),Yo.fromBufferAttribute(a,u),$o.fromBufferAttribute(a,h),d.uv=ct.getUV(oc,$n,Jn,jn,Xo,Yo,$o,new ne)),l&&(Xo.fromBufferAttribute(l,c),Yo.fromBufferAttribute(l,u),$o.fromBufferAttribute(l,h),d.uv2=ct.getUV(oc,$n,Jn,jn,Xo,Yo,$o,new ne));const p={a:c,b:u,c:h,normal:new A,materialIndex:0};ct.getNormal($n,Jn,jn,p.normal),d.face=p}return d}class Bn extends Te{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let f=0,d=0;p("z","y","x",-1,-1,n,t,e,o,s,0),p("z","y","x",1,-1,n,t,-e,o,s,1),p("x","z","y",1,1,e,n,t,r,o,2),p("x","z","y",1,-1,e,n,-t,r,o,3),p("x","y","z",1,-1,e,t,n,r,s,4),p("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new xe(c,3)),this.setAttribute("normal",new xe(u,3)),this.setAttribute("uv",new xe(h,2));function p(y,x,m,g,_,v,S,T,b,R,H){const F=v/b,P=S/R,ee=v/2,k=S/2,W=T/2,J=b+1,V=R+1;let q=0,ie=0;const me=new A;for(let we=0;we<V;we++){const ue=we*P-k;for(let Me=0;Me<J;Me++){const ae=Me*F-ee;me[y]=ae*g,me[x]=ue*_,me[m]=W,c.push(me.x,me.y,me.z),me[y]=0,me[x]=0,me[m]=T>0?1:-1,u.push(me.x,me.y,me.z),h.push(Me/b),h.push(1-we/R),q+=1}}for(let we=0;we<R;we++)for(let ue=0;ue<b;ue++){const Me=f+ue+J*we,ae=f+ue+J*(we+1),ce=f+(ue+1)+J*(we+1),ve=f+(ue+1)+J*we;l.push(Me,ae,ve),l.push(ae,ce,ve),ie+=6}a.addGroup(d,ie,H),d+=ie,f+=q}}static fromJSON(e){return new Bn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Kr(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function Lt(i){const e={};for(let t=0;t<i.length;t++){const n=Kr(i[t]);for(const r in n)e[r]=n[r]}return e}const qg={clone:Kr,merge:Lt};var Yw="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",$w="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class zn extends wt{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Yw,this.fragmentShader=$w,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Kr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}zn.prototype.isShaderMaterial=!0;class go extends ze{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new _e,this.projectionMatrix=new _e,this.projectionMatrixInverse=new _e}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}go.prototype.isCamera=!0;class vt extends go{constructor(e=50,t=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=to*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Xi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return to*2*Math.atan(Math.tan(Xi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Xi*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*n/c,r*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}vt.prototype.isPerspectiveCamera=!0;const Er=90,Tr=1;class al extends ze{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const r=new vt(Er,Tr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new A(1,0,0)),this.add(r);const s=new vt(Er,Tr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new A(-1,0,0)),this.add(s);const o=new vt(Er,Tr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new A(0,1,0)),this.add(o);const a=new vt(Er,Tr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new A(0,-1,0)),this.add(a);const l=new vt(Er,Tr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new A(0,0,1)),this.add(l);const c=new vt(Er,Tr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new A(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[r,s,o,a,l,c]=this.children,u=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;const f=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=f,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(h),e.xr.enabled=u}}class hs extends yt{constructor(e,t,n,r,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:sr,super(e,t,n,r,s,o,a,l,c,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}hs.prototype.isCubeTexture=!0;class ll extends un{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new hs(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:mt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Tt,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n				varying vec3 vWorldDirection;\n\n				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n				}\n\n				void main() {\n\n					vWorldDirection = transformDirection( position, modelMatrix );\n\n					#include <begin_vertex>\n					#include <project_vertex>\n\n				}\n			",fragmentShader:"\n\n				uniform sampler2D tEquirect;\n\n				varying vec3 vWorldDirection;\n\n				#include <common>\n\n				void main() {\n\n					vec3 direction = normalize( vWorldDirection );\n\n					vec2 sampleUV = equirectUv( direction );\n\n					gl_FragColor = texture2D( tEquirect, sampleUV );\n\n				}\n			"},r=new Bn(5,5,5),s=new zn({name:"CubemapFromEquirect",uniforms:Kr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:lt,blending:Fn});s.uniforms.tEquirect.value=t;const o=new dt(r,s),a=t.minFilter;return t.minFilter===ar&&(t.minFilter=mt),new al(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}ll.prototype.isWebGLCubeRenderTarget=!0;const ac=new A,Jw=new A,jw=new gt;class gn{constructor(e=new A(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=ac.subVectors(n,t).cross(Jw.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(ac),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||jw.getNormalMatrix(e),r=this.coplanarPoint(ac).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}gn.prototype.isPlane=!0;const Ar=new yi,Zo=new A;class yo{constructor(e=new gn,t=new gn,n=new gn,r=new gn,s=new gn,o=new gn){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],f=n[8],d=n[9],p=n[10],y=n[11],x=n[12],m=n[13],g=n[14],_=n[15];return t[0].setComponents(a-r,h-l,y-f,_-x).normalize(),t[1].setComponents(a+r,h+l,y+f,_+x).normalize(),t[2].setComponents(a+s,h+c,y+d,_+m).normalize(),t[3].setComponents(a-s,h-c,y-d,_-m).normalize(),t[4].setComponents(a-o,h-u,y-p,_-g).normalize(),t[5].setComponents(a+o,h+u,y+p,_+g).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Ar.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Ar)}intersectsSprite(e){return Ar.center.set(0,0,0),Ar.radius=.7071067811865476,Ar.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ar)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Zo.x=r.normal.x>0?e.max.x:e.min.x,Zo.y=r.normal.y>0?e.max.y:e.min.y,Zo.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Zo)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Xg(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function Zw(i,e){const t=e.isWebGL2,n=new WeakMap;function r(c,u){const h=c.array,f=c.usage,d=i.createBuffer();i.bindBuffer(u,d),i.bufferData(u,h,f),c.onUploadCallback();let p=5126;return h instanceof Float32Array?p=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?c.isFloat16BufferAttribute?t?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:h instanceof Int16Array?p=5122:h instanceof Uint32Array?p=5125:h instanceof Int32Array?p=5124:h instanceof Int8Array?p=5120:(h instanceof Uint8Array||h instanceof Uint8ClampedArray)&&(p=5121),{buffer:d,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,h){const f=u.array,d=u.updateRange;i.bindBuffer(h,c),d.count===-1?i.bufferSubData(h,0,f):(t?i.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f,d.offset,d.count):i.bufferSubData(h,d.offset*f.BYTES_PER_ELEMENT,f.subarray(d.offset,d.offset+d.count)),d.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(i.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const f=n.get(c);(!f||f.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h===void 0?n.set(c,r(c,u)):h.version<c.version&&(s(h.buffer,c,u),h.version=c.version)}return{get:o,remove:a,update:l}}class Ki extends Te{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(r),c=a+1,u=l+1,h=e/a,f=t/l,d=[],p=[],y=[],x=[];for(let m=0;m<u;m++){const g=m*f-o;for(let _=0;_<c;_++){const v=_*h-s;p.push(v,-g,0),y.push(0,0,1),x.push(_/a),x.push(1-m/l)}}for(let m=0;m<l;m++)for(let g=0;g<a;g++){const _=g+c*m,v=g+c*(m+1),S=g+1+c*(m+1),T=g+1+c*m;d.push(_,v,T),d.push(v,S,T)}this.setIndex(d),this.setAttribute("position",new xe(p,3)),this.setAttribute("normal",new xe(y,3)),this.setAttribute("uv",new xe(x,2))}static fromJSON(e){return new Ki(e.width,e.height,e.widthSegments,e.heightSegments)}}var Kw="#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",Qw="#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",eb="#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",tb="#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",nb="#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",ib="#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",rb="vec3 transformed = vec3( position );",sb="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",ob="vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",ab="#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",lb="#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",cb="#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",ub="#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",hb="#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",fb="#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",db="#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",pb="#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",mb="#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",gb="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",yb="#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_maxMipLevel 8.0\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_maxTileSize 256.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n		vec2 f = fract( uv );\n		uv += 0.5 - f;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		if ( mipInt < cubeUV_maxMipLevel ) {\n			uv.y += 2.0 * cubeUV_maxTileSize;\n		}\n		uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n		uv *= texelSize;\n		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x += texelSize;\n		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.y += texelSize;\n		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		uv.x -= texelSize;\n		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n		vec3 tm = mix( tl, tr, f.x );\n		vec3 bm = mix( bl, br, f.x );\n		return mix( tm, bm, f.y );\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",xb="vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",vb="#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",_b="#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",wb="#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",bb="#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",Mb="gl_FragColor = linearToOutputTexel( gl_FragColor );",Sb="\nvec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n	float maxComponent = max( max( value.r, value.g ), value.b );\n	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n	M = ceil( M * 255.0 ) / 255.0;\n	return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n	float maxRGB = max( value.r, max( value.g, value.b ) );\n	float D = max( maxRange / maxRGB, 1.0 );\n	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n	vec4 vResult;\n	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n	vResult.w = fract( Le );\n	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n	return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n	float Le = value.z * 255.0 + value.w;\n	vec3 Xp_Y_XYZp;\n	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n	return vec4( max( vRGB, 0.0 ), 1.0 );\n}",Eb="#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n		envColor = envMapTexelToLinear( envColor );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",Tb="#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform int maxMipLevel;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",Ab="#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",Cb="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",Lb="#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",Rb="#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",Pb="#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",Ib="#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",Db="#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",Fb="#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return texture2D( gradientMap, coord ).rgb;\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",Nb="#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		lightMapIrradiance *= PI;\n	#endif\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",Bb="#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",zb="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",Ob="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",Ub="#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec;\n			#ifdef ENVMAP_MODE_REFLECTION\n				reflectVec = reflect( - viewDir, normal );\n				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			#else\n				reflectVec = refract( - viewDir, normal, refractionRatio );\n			#endif\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",Hb="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",Gb="varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",kb="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",Vb="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",Wb="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",qb="struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		reflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",Xb="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",Yb="#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",$b="#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",Jb="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",jb="#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",Zb="#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",Kb="#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",Qb="#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif",eM="#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",tM="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",nM="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",iM="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",rM="#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",sM="#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",oM="#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform vec2 morphTargetsTextureSize;\n		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n			float texelIndex = float( vertexIndex * stride + offset );\n			float y = floor( texelIndex / morphTargetsTextureSize.x );\n			float x = texelIndex - y * morphTargetsTextureSize.x;\n			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n			return texture( morphTargetsTexture, morphUV ).xyz;\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",aM="#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			#ifndef USE_MORPHNORMALS\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n			#else\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n			#endif\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",lM="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",cM="#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",uM="#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",hM="#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",fM="#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",dM="#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",pM="#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",mM="#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",gM="#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",yM="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",xM="vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",vM="#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",_M="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",wM="#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",bM="#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",MM="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",SM="#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",EM="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",TM="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",AM="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",CM="float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",LM="#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",RM="#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",PM="#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",IM="#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",DM="float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",FM="#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",NM="#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",BM="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",zM="#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",OM="#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( float roughness, float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef TEXTURE_LOD_EXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n		vec3 attenuationColor, float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",UM="#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",HM="#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",GM="#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",kM="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",VM="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",WM="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",qM="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif";const XM="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",YM="uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",$M="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",JM="#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",jM="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",ZM="#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",KM="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",QM="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",e1="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",t1="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",n1="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",i1="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",r1="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",s1="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",o1="#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",a1="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",l1="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",c1="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",u1="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",h1="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",f1="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",d1="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",p1="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",m1="#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",g1="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",y1="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",x1="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",v1="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",_1="#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",w1="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",b1="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",M1="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",Ne={alphamap_fragment:Kw,alphamap_pars_fragment:Qw,alphatest_fragment:eb,alphatest_pars_fragment:tb,aomap_fragment:nb,aomap_pars_fragment:ib,begin_vertex:rb,beginnormal_vertex:sb,bsdfs:ob,bumpmap_pars_fragment:ab,clipping_planes_fragment:lb,clipping_planes_pars_fragment:cb,clipping_planes_pars_vertex:ub,clipping_planes_vertex:hb,color_fragment:fb,color_pars_fragment:db,color_pars_vertex:pb,color_vertex:mb,common:gb,cube_uv_reflection_fragment:yb,defaultnormal_vertex:xb,displacementmap_pars_vertex:vb,displacementmap_vertex:_b,emissivemap_fragment:wb,emissivemap_pars_fragment:bb,encodings_fragment:Mb,encodings_pars_fragment:Sb,envmap_fragment:Eb,envmap_common_pars_fragment:Tb,envmap_pars_fragment:Ab,envmap_pars_vertex:Cb,envmap_physical_pars_fragment:Ub,envmap_vertex:Lb,fog_vertex:Rb,fog_pars_vertex:Pb,fog_fragment:Ib,fog_pars_fragment:Db,gradientmap_pars_fragment:Fb,lightmap_fragment:Nb,lightmap_pars_fragment:Bb,lights_lambert_vertex:zb,lights_pars_begin:Ob,lights_toon_fragment:Hb,lights_toon_pars_fragment:Gb,lights_phong_fragment:kb,lights_phong_pars_fragment:Vb,lights_physical_fragment:Wb,lights_physical_pars_fragment:qb,lights_fragment_begin:Xb,lights_fragment_maps:Yb,lights_fragment_end:$b,logdepthbuf_fragment:Jb,logdepthbuf_pars_fragment:jb,logdepthbuf_pars_vertex:Zb,logdepthbuf_vertex:Kb,map_fragment:Qb,map_pars_fragment:eM,map_particle_fragment:tM,map_particle_pars_fragment:nM,metalnessmap_fragment:iM,metalnessmap_pars_fragment:rM,morphnormal_vertex:sM,morphtarget_pars_vertex:oM,morphtarget_vertex:aM,normal_fragment_begin:lM,normal_fragment_maps:cM,normal_pars_fragment:uM,normal_pars_vertex:hM,normal_vertex:fM,normalmap_pars_fragment:dM,clearcoat_normal_fragment_begin:pM,clearcoat_normal_fragment_maps:mM,clearcoat_pars_fragment:gM,output_fragment:yM,packing:xM,premultiplied_alpha_fragment:vM,project_vertex:_M,dithering_fragment:wM,dithering_pars_fragment:bM,roughnessmap_fragment:MM,roughnessmap_pars_fragment:SM,shadowmap_pars_fragment:EM,shadowmap_pars_vertex:TM,shadowmap_vertex:AM,shadowmask_pars_fragment:CM,skinbase_vertex:LM,skinning_pars_vertex:RM,skinning_vertex:PM,skinnormal_vertex:IM,specularmap_fragment:DM,specularmap_pars_fragment:FM,tonemapping_fragment:NM,tonemapping_pars_fragment:BM,transmission_fragment:zM,transmission_pars_fragment:OM,uv_pars_fragment:UM,uv_pars_vertex:HM,uv_vertex:GM,uv2_pars_fragment:kM,uv2_pars_vertex:VM,uv2_vertex:WM,worldpos_vertex:qM,background_vert:XM,background_frag:YM,cube_vert:$M,cube_frag:JM,depth_vert:jM,depth_frag:ZM,distanceRGBA_vert:KM,distanceRGBA_frag:QM,equirect_vert:e1,equirect_frag:t1,linedashed_vert:n1,linedashed_frag:i1,meshbasic_vert:r1,meshbasic_frag:s1,meshlambert_vert:o1,meshlambert_frag:a1,meshmatcap_vert:l1,meshmatcap_frag:c1,meshnormal_vert:u1,meshnormal_frag:h1,meshphong_vert:f1,meshphong_frag:d1,meshphysical_vert:p1,meshphysical_frag:m1,meshtoon_vert:g1,meshtoon_frag:y1,points_vert:x1,points_frag:v1,shadow_vert:_1,shadow_frag:w1,sprite_vert:b1,sprite_frag:M1},he={common:{diffuse:{value:new de(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new gt},uv2Transform:{value:new gt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ne(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new de(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new de(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new gt}},sprite:{diffuse:{value:new de(16777215)},opacity:{value:1},center:{value:new ne(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new gt}}},ln={basic:{uniforms:Lt([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.fog]),vertexShader:Ne.meshbasic_vert,fragmentShader:Ne.meshbasic_frag},lambert:{uniforms:Lt([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.fog,he.lights,{emissive:{value:new de(0)}}]),vertexShader:Ne.meshlambert_vert,fragmentShader:Ne.meshlambert_frag},phong:{uniforms:Lt([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new de(0)},specular:{value:new de(1118481)},shininess:{value:30}}]),vertexShader:Ne.meshphong_vert,fragmentShader:Ne.meshphong_frag},standard:{uniforms:Lt([he.common,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.roughnessmap,he.metalnessmap,he.fog,he.lights,{emissive:{value:new de(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag},toon:{uniforms:Lt([he.common,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.gradientmap,he.fog,he.lights,{emissive:{value:new de(0)}}]),vertexShader:Ne.meshtoon_vert,fragmentShader:Ne.meshtoon_frag},matcap:{uniforms:Lt([he.common,he.bumpmap,he.normalmap,he.displacementmap,he.fog,{matcap:{value:null}}]),vertexShader:Ne.meshmatcap_vert,fragmentShader:Ne.meshmatcap_frag},points:{uniforms:Lt([he.points,he.fog]),vertexShader:Ne.points_vert,fragmentShader:Ne.points_frag},dashed:{uniforms:Lt([he.common,he.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ne.linedashed_vert,fragmentShader:Ne.linedashed_frag},depth:{uniforms:Lt([he.common,he.displacementmap]),vertexShader:Ne.depth_vert,fragmentShader:Ne.depth_frag},normal:{uniforms:Lt([he.common,he.bumpmap,he.normalmap,he.displacementmap,{opacity:{value:1}}]),vertexShader:Ne.meshnormal_vert,fragmentShader:Ne.meshnormal_frag},sprite:{uniforms:Lt([he.sprite,he.fog]),vertexShader:Ne.sprite_vert,fragmentShader:Ne.sprite_frag},background:{uniforms:{uvTransform:{value:new gt},t2D:{value:null}},vertexShader:Ne.background_vert,fragmentShader:Ne.background_frag},cube:{uniforms:Lt([he.envmap,{opacity:{value:1}}]),vertexShader:Ne.cube_vert,fragmentShader:Ne.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ne.equirect_vert,fragmentShader:Ne.equirect_frag},distanceRGBA:{uniforms:Lt([he.common,he.displacementmap,{referencePosition:{value:new A},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ne.distanceRGBA_vert,fragmentShader:Ne.distanceRGBA_frag},shadow:{uniforms:Lt([he.lights,he.fog,{color:{value:new de(0)},opacity:{value:1}}]),vertexShader:Ne.shadow_vert,fragmentShader:Ne.shadow_frag}};ln.physical={uniforms:Lt([ln.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ne(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new de(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ne},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new de(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new de(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag};function S1(i,e,t,n,r){const s=new de(0);let o=0,a,l,c=null,u=0,h=null;function f(p,y){let x=!1,m=y.isScene===!0?y.background:null;m&&m.isTexture&&(m=e.get(m));const g=i.xr,_=g.getSession&&g.getSession();_&&_.environmentBlendMode==="additive"&&(m=null),m===null?d(s,o):m&&m.isColor&&(d(m,1),x=!0),(i.autoClear||x)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),m&&(m.isCubeTexture||m.mapping===us)?(l===void 0&&(l=new dt(new Bn(1,1,1),new zn({name:"BackgroundCubeMaterial",uniforms:Kr(ln.cube.uniforms),vertexShader:ln.cube.vertexShader,fragmentShader:ln.cube.fragmentShader,side:lt,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(v,S,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m.isRenderTargetTexture===!1?-1:1,(c!==m||u!==m.version||h!==i.toneMapping)&&(l.material.needsUpdate=!0,c=m,u=m.version,h=i.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(a===void 0&&(a=new dt(new Ki(2,2),new zn({name:"BackgroundMaterial",uniforms:Kr(ln.background.uniforms),vertexShader:ln.background.vertexShader,fragmentShader:ln.background.fragmentShader,side:ji,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(a)),a.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),a.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||u!==m.version||h!==i.toneMapping)&&(a.material.needsUpdate=!0,c=m,u=m.version,h=i.toneMapping),p.unshift(a,a.geometry,a.material,0,0,null))}function d(p,y){t.buffers.color.setClear(p.r,p.g,p.b,y,r)}return{getClearColor:function(){return s},setClearColor:function(p,y=1){s.set(p),o=y,d(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(p){o=p,d(s,o)},render:f}}function E1(i,e,t,n){const r=i.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=y(null);let c=l;function u(k,W,J,V,q){let ie=!1;if(o){const me=p(V,J,W);c!==me&&(c=me,f(c.object)),ie=x(V,q),ie&&m(V,q)}else{const me=W.wireframe===!0;(c.geometry!==V.id||c.program!==J.id||c.wireframe!==me)&&(c.geometry=V.id,c.program=J.id,c.wireframe=me,ie=!0)}k.isInstancedMesh===!0&&(ie=!0),q!==null&&t.update(q,34963),ie&&(b(k,W,J,V),q!==null&&i.bindBuffer(34963,t.get(q).buffer))}function h(){return n.isWebGL2?i.createVertexArray():s.createVertexArrayOES()}function f(k){return n.isWebGL2?i.bindVertexArray(k):s.bindVertexArrayOES(k)}function d(k){return n.isWebGL2?i.deleteVertexArray(k):s.deleteVertexArrayOES(k)}function p(k,W,J){const V=J.wireframe===!0;let q=a[k.id];q===void 0&&(q={},a[k.id]=q);let ie=q[W.id];ie===void 0&&(ie={},q[W.id]=ie);let me=ie[V];return me===void 0&&(me=y(h()),ie[V]=me),me}function y(k){const W=[],J=[],V=[];for(let q=0;q<r;q++)W[q]=0,J[q]=0,V[q]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:W,enabledAttributes:J,attributeDivisors:V,object:k,attributes:{},index:null}}function x(k,W){const J=c.attributes,V=k.attributes;let q=0;for(const ie in V){const me=J[ie],we=V[ie];if(me===void 0||me.attribute!==we||me.data!==we.data)return!0;q++}return c.attributesNum!==q||c.index!==W}function m(k,W){const J={},V=k.attributes;let q=0;for(const ie in V){const me=V[ie],we={};we.attribute=me,me.data&&(we.data=me.data),J[ie]=we,q++}c.attributes=J,c.attributesNum=q,c.index=W}function g(){const k=c.newAttributes;for(let W=0,J=k.length;W<J;W++)k[W]=0}function _(k){v(k,0)}function v(k,W){const J=c.newAttributes,V=c.enabledAttributes,q=c.attributeDivisors;J[k]=1,V[k]===0&&(i.enableVertexAttribArray(k),V[k]=1),q[k]!==W&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](k,W),q[k]=W)}function S(){const k=c.newAttributes,W=c.enabledAttributes;for(let J=0,V=W.length;J<V;J++)W[J]!==k[J]&&(i.disableVertexAttribArray(J),W[J]=0)}function T(k,W,J,V,q,ie){n.isWebGL2===!0&&(J===5124||J===5125)?i.vertexAttribIPointer(k,W,J,q,ie):i.vertexAttribPointer(k,W,J,V,q,ie)}function b(k,W,J,V){if(n.isWebGL2===!1&&(k.isInstancedMesh||V.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;g();const q=V.attributes,ie=J.getAttributes(),me=W.defaultAttributeValues;for(const we in ie){const ue=ie[we];if(ue.location>=0){let Me=q[we];if(Me===void 0&&(we==="instanceMatrix"&&k.instanceMatrix&&(Me=k.instanceMatrix),we==="instanceColor"&&k.instanceColor&&(Me=k.instanceColor)),Me!==void 0){const ae=Me.normalized,ce=Me.itemSize,ve=t.get(Me);if(ve===void 0)continue;const Z=ve.buffer,be=ve.type,Ee=ve.bytesPerElement;if(Me.isInterleavedBufferAttribute){const ge=Me.data,ye=ge.stride,Le=Me.offset;if(ge&&ge.isInstancedInterleavedBuffer){for(let K=0;K<ue.locationSize;K++)v(ue.location+K,ge.meshPerAttribute);k.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=ge.meshPerAttribute*ge.count)}else for(let K=0;K<ue.locationSize;K++)_(ue.location+K);i.bindBuffer(34962,Z);for(let K=0;K<ue.locationSize;K++)T(ue.location+K,ce/ue.locationSize,be,ae,ye*Ee,(Le+ce/ue.locationSize*K)*Ee)}else{if(Me.isInstancedBufferAttribute){for(let ge=0;ge<ue.locationSize;ge++)v(ue.location+ge,Me.meshPerAttribute);k.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=Me.meshPerAttribute*Me.count)}else for(let ge=0;ge<ue.locationSize;ge++)_(ue.location+ge);i.bindBuffer(34962,Z);for(let ge=0;ge<ue.locationSize;ge++)T(ue.location+ge,ce/ue.locationSize,be,ae,ce*Ee,ce/ue.locationSize*ge*Ee)}}else if(me!==void 0){const ae=me[we];if(ae!==void 0)switch(ae.length){case 2:i.vertexAttrib2fv(ue.location,ae);break;case 3:i.vertexAttrib3fv(ue.location,ae);break;case 4:i.vertexAttrib4fv(ue.location,ae);break;default:i.vertexAttrib1fv(ue.location,ae)}}}}S()}function R(){P();for(const k in a){const W=a[k];for(const J in W){const V=W[J];for(const q in V)d(V[q].object),delete V[q];delete W[J]}delete a[k]}}function H(k){if(a[k.id]===void 0)return;const W=a[k.id];for(const J in W){const V=W[J];for(const q in V)d(V[q].object),delete V[q];delete W[J]}delete a[k.id]}function F(k){for(const W in a){const J=a[W];if(J[k.id]===void 0)continue;const V=J[k.id];for(const q in V)d(V[q].object),delete V[q];delete J[k.id]}}function P(){ee(),c!==l&&(c=l,f(c.object))}function ee(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:u,reset:P,resetDefaultState:ee,dispose:R,releaseStatesOfGeometry:H,releaseStatesOfProgram:F,initAttributes:g,enableAttribute:_,disableUnusedAttributes:S}}function T1(i,e,t,n){const r=n.isWebGL2;let s;function o(c){s=c}function a(c,u){i.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,h){if(h===0)return;let f,d;if(r)f=i,d="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[d](s,c,u,h),t.update(u,s,h)}this.setMode=o,this.render=a,this.renderInstances=l}function A1(i,e,t){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const b=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(b){if(b==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return b==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&i instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,h=i.getParameter(34930),f=i.getParameter(35660),d=i.getParameter(3379),p=i.getParameter(34076),y=i.getParameter(34921),x=i.getParameter(36347),m=i.getParameter(36348),g=i.getParameter(36349),_=f>0,v=o||e.has("OES_texture_float"),S=_&&v,T=o?i.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:y,maxVertexUniforms:x,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:_,floatFragmentTextures:v,floatVertexTextures:S,maxSamples:T}}function C1(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new gn,a=new gt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,d){const p=h.length!==0||f||n!==0||r;return r=f,t=u(h,d,0),n=h.length,p},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,f,d){const p=h.clippingPlanes,y=h.clipIntersection,x=h.clipShadows,m=i.get(h);if(!r||p===null||p.length===0||s&&!x)s?u(null):c();else{const g=s?0:n,_=g*4;let v=m.clippingState||null;l.value=v,v=u(p,f,_,d);for(let S=0;S!==_;++S)v[S]=t[S];m.clippingState=v,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=g}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,f,d,p){const y=h!==null?h.length:0;let x=null;if(y!==0){if(x=l.value,p!==!0||x===null){const m=d+y*4,g=f.matrixWorldInverse;a.getNormalMatrix(g),(x===null||x.length<m)&&(x=new Float32Array(m));for(let _=0,v=d;_!==y;++_,v+=4)o.copy(h[_]).applyMatrix4(g,a),o.normal.toArray(x,v),x[v+3]=o.constant}l.value=x,l.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,x}}function L1(i){let e=new WeakMap;function t(o,a){return a===Ys?o.mapping=sr:a===$s&&(o.mapping=or),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Ys||a===$s)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=i.getRenderTarget(),u=new ll(l.height/2);return u.fromEquirectangularTexture(i,o),e.set(o,u),i.setRenderTarget(c),o.addEventListener("dispose",r),t(u.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class xo extends go{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}xo.prototype.isOrthographicCamera=!0;class fs extends zn{constructor(e){super(e),this.type="RawShaderMaterial"}}fs.prototype.isRawShaderMaterial=!0;const kr=4,ri=8,pn=Math.pow(2,ri),Yg=[.125,.215,.35,.446,.526,.582],$g=ri-kr+1+Yg.length,Cr=20,li={[Ct]:0,[mi]:1,[il]:2,[zu]:3,[Ou]:4,[Uu]:5,[nl]:6},lc=new xo,{_lodPlanes:Ms,_sizeLods:Tf,_sigmas:Ko}=P1(),Af=new de;let cc=null;const Fi=(1+Math.sqrt(5))/2,Lr=1/Fi,Cf=[new A(1,1,1),new A(-1,1,1),new A(1,1,-1),new A(-1,1,-1),new A(0,Fi,Lr),new A(0,Fi,-Lr),new A(Lr,0,Fi),new A(-Lr,0,Fi),new A(Fi,Lr,0),new A(-Fi,Lr,0)];class Jg{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=I1(Cr),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){cc=this._renderer.getRenderTarget();const s=this._allocateTargets();return this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){this._cubemapShader===null&&(this._cubemapShader=Pf(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){this._equirectShader===null&&(this._equirectShader=Rf(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),this._cubemapShader!==null&&this._cubemapShader.dispose(),this._equirectShader!==null&&this._equirectShader.dispose();for(let e=0;e<Ms.length;e++)Ms[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(cc),e.scissorTest=!1,Qo(e,0,0,e.width,e.height)}_fromTexture(e){cc=this._renderer.getRenderTarget();const t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){const t={magFilter:ft,minFilter:ft,generateMipmaps:!1,type:Nn,format:Gm,encoding:R1(e)?e.encoding:il,depthBuffer:!1},n=Lf(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Lf(t),n}_compileMaterial(e){const t=new dt(Ms[0],e);this._renderer.compile(t,lc)}_sceneToCubeUV(e,t,n,r){const a=new vt(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,h=u.autoClear,f=u.outputEncoding,d=u.toneMapping;u.getClearColor(Af),u.toneMapping=ii,u.outputEncoding=Ct,u.autoClear=!1;const p=new Gn({name:"PMREM.Background",side:lt,depthWrite:!1,depthTest:!1}),y=new dt(new Bn,p);let x=!1;const m=e.background;m?m.isColor&&(p.color.copy(m),e.background=null,x=!0):(p.color.copy(Af),x=!0);for(let g=0;g<6;g++){const _=g%3;_==0?(a.up.set(0,l[g],0),a.lookAt(c[g],0,0)):_==1?(a.up.set(0,0,l[g]),a.lookAt(0,c[g],0)):(a.up.set(0,l[g],0),a.lookAt(0,0,c[g])),Qo(r,_*pn,g>2?pn:0,pn,pn),u.setRenderTarget(r),x&&u.render(y,a),u.render(e,a)}y.geometry.dispose(),y.material.dispose(),u.toneMapping=d,u.outputEncoding=f,u.autoClear=h,e.background=m}_setEncoding(e,t){this._renderer.capabilities.isWebGL2===!0&&t.format===Tt&&t.type===Nn&&t.encoding===mi?e.value=li[Ct]:e.value=li[t.encoding]}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===sr||e.mapping===or;r?this._cubemapShader==null&&(this._cubemapShader=Pf()):this._equirectShader==null&&(this._equirectShader=Rf());const s=r?this._cubemapShader:this._equirectShader,o=new dt(Ms[0],s),a=s.uniforms;a.envMap.value=e,r||a.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(a.inputEncoding,e),this._setEncoding(a.outputEncoding,t.texture),Qo(t,0,0,3*pn,2*pn),n.setRenderTarget(t),n.render(o,lc)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let r=1;r<$g;r++){const s=Math.sqrt(Ko[r]*Ko[r]-Ko[r-1]*Ko[r-1]),o=Cf[(r-1)%Cf.length];this._blur(e,r-1,r,s,o)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new dt(Ms[r],c),f=c.uniforms,d=Tf[n]-1,p=isFinite(s)?Math.PI/(2*d):2*Math.PI/(2*Cr-1),y=s/p,x=isFinite(s)?1+Math.floor(u*y):Cr;x>Cr&&console.warn("sigmaRadians, ".concat(s,", is too large and will clip, as it requested ").concat(x," samples when the maximum is set to ").concat(Cr));const m=[];let g=0;for(let T=0;T<Cr;++T){const b=T/y,R=Math.exp(-b*b/2);m.push(R),T==0?g+=R:T<x&&(g+=2*R)}for(let T=0;T<m.length;T++)m[T]=m[T]/g;f.envMap.value=e.texture,f.samples.value=x,f.weights.value=m,f.latitudinal.value=o==="latitudinal",a&&(f.poleAxis.value=a),f.dTheta.value=p,f.mipInt.value=ri-n,this._setEncoding(f.inputEncoding,e.texture),this._setEncoding(f.outputEncoding,e.texture);const _=Tf[r],v=3*Math.max(0,pn-2*_),S=(r===0?0:2*pn)+2*_*(r>ri-kr?r-ri+kr:0);Qo(t,v,S,3*_,2*_),l.setRenderTarget(t),l.render(h,lc)}}function R1(i){return i===void 0||i.type!==Nn?!1:i.encoding===Ct||i.encoding===mi||i.encoding===nl}function P1(){const i=[],e=[],t=[];let n=ri;for(let r=0;r<$g;r++){const s=Math.pow(2,n);e.push(s);let o=1/s;r>ri-kr?o=Yg[r-ri+kr-1]:r==0&&(o=0),t.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,f=6,d=3,p=2,y=1,x=new Float32Array(d*f*h),m=new Float32Array(p*f*h),g=new Float32Array(y*f*h);for(let v=0;v<h;v++){const S=v%3*2/3-1,T=v>2?0:-1,b=[S,T,0,S+2/3,T,0,S+2/3,T+1,0,S,T,0,S+2/3,T+1,0,S,T+1,0];x.set(b,d*f*v),m.set(u,p*f*v);const R=[v,v,v,v,v,v];g.set(R,y*f*v)}const _=new Te;_.setAttribute("position",new He(x,d)),_.setAttribute("uv",new He(m,p)),_.setAttribute("faceIndex",new He(g,y)),i.push(_),n>kr&&n--}return{_lodPlanes:i,_sizeLods:e,_sigmas:t}}function Lf(i){const e=new un(3*pn,3*pn,i);return e.texture.mapping=us,e.texture.name="PMREM.cubeUv",e.scissorTest=!0,e}function Qo(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function I1(i){const e=new Float32Array(i),t=new A(0,1,0);return new fs({name:"SphericalGaussianBlur",defines:{n:i},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t},inputEncoding:{value:li[Ct]},outputEncoding:{value:li[Ct]}},vertexShader:Vu(),fragmentShader:"\n\n			precision mediump float;\n			precision mediump int;\n\n			varying vec3 vOutputDirection;\n\n			uniform sampler2D envMap;\n			uniform int samples;\n			uniform float weights[ n ];\n			uniform bool latitudinal;\n			uniform float dTheta;\n			uniform float mipInt;\n			uniform vec3 poleAxis;\n\n			".concat(Wu(),"\n\n			#define ENVMAP_TYPE_CUBE_UV\n			#include <cube_uv_reflection_fragment>\n\n			vec3 getSample( float theta, vec3 axis ) {\n\n				float cosTheta = cos( theta );\n				// Rodrigues' axis-angle rotation\n				vec3 sampleDirection = vOutputDirection * cosTheta\n					+ cross( axis, vOutputDirection ) * sin( theta )\n					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n				return bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n			}\n\n			void main() {\n\n				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n				}\n\n				axis = normalize( axis );\n\n				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n				for ( int i = 1; i < n; i++ ) {\n\n					if ( i >= samples ) {\n\n						break;\n\n					}\n\n					float theta = dTheta * float( i );\n					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n				}\n\n				gl_FragColor = linearToOutputTexel( gl_FragColor );\n\n			}\n		"),blending:Fn,depthTest:!1,depthWrite:!1})}function Rf(){const i=new ne(1,1);return new fs({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:i},inputEncoding:{value:li[Ct]},outputEncoding:{value:li[Ct]}},vertexShader:Vu(),fragmentShader:"\n\n			precision mediump float;\n			precision mediump int;\n\n			varying vec3 vOutputDirection;\n\n			uniform sampler2D envMap;\n			uniform vec2 texelSize;\n\n			".concat(Wu(),"\n\n			#include <common>\n\n			void main() {\n\n				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n				vec3 outputDirection = normalize( vOutputDirection );\n				vec2 uv = equirectUv( outputDirection );\n\n				vec2 f = fract( uv / texelSize - 0.5 );\n				uv -= f * texelSize;\n				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n				uv.x += texelSize.x;\n				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n				uv.y += texelSize.y;\n				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n				uv.x -= texelSize.x;\n				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n				vec3 tm = mix( tl, tr, f.x );\n				vec3 bm = mix( bl, br, f.x );\n				gl_FragColor.rgb = mix( tm, bm, f.y );\n\n				gl_FragColor = linearToOutputTexel( gl_FragColor );\n\n			}\n		"),blending:Fn,depthTest:!1,depthWrite:!1})}function Pf(){return new fs({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:li[Ct]},outputEncoding:{value:li[Ct]}},vertexShader:Vu(),fragmentShader:"\n\n			precision mediump float;\n			precision mediump int;\n\n			varying vec3 vOutputDirection;\n\n			uniform samplerCube envMap;\n\n			".concat(Wu(),"\n\n			void main() {\n\n				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n				gl_FragColor = linearToOutputTexel( gl_FragColor );\n\n			}\n		"),blending:Fn,depthTest:!1,depthWrite:!1})}function Vu(){return"\n\n		precision mediump float;\n		precision mediump int;\n\n		attribute vec3 position;\n		attribute vec2 uv;\n		attribute float faceIndex;\n\n		varying vec3 vOutputDirection;\n\n		// RH coordinate system; PMREM face-indexing convention\n		vec3 getDirection( vec2 uv, float face ) {\n\n			uv = 2.0 * uv - 1.0;\n\n			vec3 direction = vec3( uv, 1.0 );\n\n			if ( face == 0.0 ) {\n\n				direction = direction.zyx; // ( 1, v, u ) pos x\n\n			} else if ( face == 1.0 ) {\n\n				direction = direction.xzy;\n				direction.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n			} else if ( face == 2.0 ) {\n\n				direction.x *= -1.0; // ( -u, v, 1 ) pos z\n\n			} else if ( face == 3.0 ) {\n\n				direction = direction.zyx;\n				direction.xz *= -1.0; // ( -1, v, -u ) neg x\n\n			} else if ( face == 4.0 ) {\n\n				direction = direction.xzy;\n				direction.xy *= -1.0; // ( -u, -1, v ) neg y\n\n			} else if ( face == 5.0 ) {\n\n				direction.z *= -1.0; // ( u, v, -1 ) neg z\n\n			}\n\n			return direction;\n\n		}\n\n		void main() {\n\n			vOutputDirection = getDirection( uv, faceIndex );\n			gl_Position = vec4( position, 1.0 );\n\n		}\n	"}function Wu(){return"\n\n		uniform int inputEncoding;\n		uniform int outputEncoding;\n\n		#include <encodings_pars_fragment>\n\n		vec4 inputTexelToLinear( vec4 value ) {\n\n			if ( inputEncoding == 0 ) {\n\n				return value;\n\n			} else if ( inputEncoding == 1 ) {\n\n				return sRGBToLinear( value );\n\n			} else if ( inputEncoding == 2 ) {\n\n				return RGBEToLinear( value );\n\n			} else if ( inputEncoding == 3 ) {\n\n				return RGBMToLinear( value, 7.0 );\n\n			} else if ( inputEncoding == 4 ) {\n\n				return RGBMToLinear( value, 16.0 );\n\n			} else if ( inputEncoding == 5 ) {\n\n				return RGBDToLinear( value, 256.0 );\n\n			} else {\n\n				return GammaToLinear( value, 2.2 );\n\n			}\n\n		}\n\n		vec4 linearToOutputTexel( vec4 value ) {\n\n			if ( outputEncoding == 0 ) {\n\n				return value;\n\n			} else if ( outputEncoding == 1 ) {\n\n				return LinearTosRGB( value );\n\n			} else if ( outputEncoding == 2 ) {\n\n				return LinearToRGBE( value );\n\n			} else if ( outputEncoding == 3 ) {\n\n				return LinearToRGBM( value, 7.0 );\n\n			} else if ( outputEncoding == 4 ) {\n\n				return LinearToRGBM( value, 16.0 );\n\n			} else if ( outputEncoding == 5 ) {\n\n				return LinearToRGBD( value, 256.0 );\n\n			} else {\n\n				return LinearToGamma( value, 2.2 );\n\n			}\n\n		}\n\n		vec4 envMapTexelToLinear( vec4 color ) {\n\n			return inputTexelToLinear( color );\n\n		}\n	"}function D1(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const l=a.mapping,c=l===Ys||l===$s,u=l===sr||l===or;if(c||u){if(e.has(a))return e.get(a).texture;{const h=a.image;if(c&&h&&h.height>0||u&&h&&r(h)){const f=i.getRenderTarget();t===null&&(t=new Jg(i));const d=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),i.setRenderTarget(f),a.addEventListener("dispose",s),d.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function F1(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float")},get:function(n){const r=t(n);return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function N1(i,e,t,n){const r={},s=new WeakMap;function o(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const p in f.attributes)e.remove(f.attributes[p]);f.removeEventListener("dispose",o),delete r[f.id];const d=s.get(f);d&&(e.remove(d),s.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function a(h,f){return r[f.id]===!0||(f.addEventListener("dispose",o),r[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const d=h.morphAttributes;for(const p in d){const y=d[p];for(let x=0,m=y.length;x<m;x++)e.update(y[x],34962)}}function c(h){const f=[],d=h.index,p=h.attributes.position;let y=0;if(d!==null){const g=d.array;y=d.version;for(let _=0,v=g.length;_<v;_+=3){const S=g[_+0],T=g[_+1],b=g[_+2];f.push(S,T,T,b,b,S)}}else{const g=p.array;y=p.version;for(let _=0,v=g.length/3-1;_<v;_+=3){const S=_+0,T=_+1,b=_+2;f.push(S,T,T,b,b,S)}}const x=new(Ng(f)>65535?ol:sl)(f,1);x.version=y;const m=s.get(h);m&&e.remove(m),s.set(h,x)}function u(h){const f=s.get(h);if(f){const d=h.index;d!==null&&f.version<d.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function B1(i,e,t,n){const r=n.isWebGL2;let s;function o(f){s=f}let a,l;function c(f){a=f.type,l=f.bytesPerElement}function u(f,d){i.drawElements(s,d,a,f*l),t.update(d,s,1)}function h(f,d,p){if(p===0)return;let y,x;if(r)y=i,x="drawElementsInstanced";else if(y=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[x](s,d,a,f*l,p),t.update(d,s,p)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=h}function z1(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}class cl extends yt{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=Et,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}cl.prototype.isDataTexture2DArray=!0;function O1(i,e){return i[0]-e[0]}function U1(i,e){return Math.abs(e[1])-Math.abs(i[1])}function If(i,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),i.divideScalar(t)}function H1(i,e,t){const n={},r=new Float32Array(8),s=new WeakMap,o=new A,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,h,f){const d=c.morphTargetInfluences;if(e.isWebGL2===!0){const p=u.morphAttributes.position.length;let y=s.get(u);if(y===void 0||y.count!==p){y!==void 0&&y.texture.dispose();const g=u.morphAttributes.normal!==void 0,_=u.morphAttributes.position,v=u.morphAttributes.normal||[],S=u.attributes.position.count,T=g===!0?2:1;let b=S*T,R=1;b>e.maxTextureSize&&(R=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const H=new Float32Array(b*R*4*p),F=new cl(H,b,R,p);F.format=Tt,F.type=xn;const P=T*4;for(let ee=0;ee<p;ee++){const k=_[ee],W=v[ee],J=b*R*4*ee;for(let V=0;V<k.count;V++){o.fromBufferAttribute(k,V),k.normalized===!0&&If(o,k);const q=V*P;H[J+q+0]=o.x,H[J+q+1]=o.y,H[J+q+2]=o.z,H[J+q+3]=0,g===!0&&(o.fromBufferAttribute(W,V),W.normalized===!0&&If(o,W),H[J+q+4]=o.x,H[J+q+5]=o.y,H[J+q+6]=o.z,H[J+q+7]=0)}}y={count:p,texture:F,size:new ne(b,R)},s.set(u,y)}let x=0;for(let g=0;g<d.length;g++)x+=d[g];const m=u.morphTargetsRelative?1:1-x;f.getUniforms().setValue(i,"morphTargetBaseInfluence",m),f.getUniforms().setValue(i,"morphTargetInfluences",d),f.getUniforms().setValue(i,"morphTargetsTexture",y.texture,t),f.getUniforms().setValue(i,"morphTargetsTextureSize",y.size)}else{const p=d===void 0?0:d.length;let y=n[u.id];if(y===void 0||y.length!==p){y=[];for(let v=0;v<p;v++)y[v]=[v,0];n[u.id]=y}for(let v=0;v<p;v++){const S=y[v];S[0]=v,S[1]=d[v]}y.sort(U1);for(let v=0;v<8;v++)v<p&&y[v][1]?(a[v][0]=y[v][0],a[v][1]=y[v][1]):(a[v][0]=Number.MAX_SAFE_INTEGER,a[v][1]=0);a.sort(O1);const x=u.morphAttributes.position,m=u.morphAttributes.normal;let g=0;for(let v=0;v<8;v++){const S=a[v],T=S[0],b=S[1];T!==Number.MAX_SAFE_INTEGER&&b?(x&&u.getAttribute("morphTarget"+v)!==x[T]&&u.setAttribute("morphTarget"+v,x[T]),m&&u.getAttribute("morphNormal"+v)!==m[T]&&u.setAttribute("morphNormal"+v,m[T]),r[v]=b,g+=b):(x&&u.hasAttribute("morphTarget"+v)===!0&&u.deleteAttribute("morphTarget"+v),m&&u.hasAttribute("morphNormal"+v)===!0&&u.deleteAttribute("morphNormal"+v),r[v]=0)}const _=u.morphTargetsRelative?1:1-g;f.getUniforms().setValue(i,"morphTargetBaseInfluence",_),f.getUniforms().setValue(i,"morphTargetInfluences",r)}}return{update:l}}function G1(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=e.get(l,u);return r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}class qu extends yt{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=ft,this.minFilter=ft,this.wrapR=Et,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}qu.prototype.isDataTexture3D=!0;const jg=new yt,k1=new cl,V1=new qu,Zg=new hs,Df=[],Ff=[],Nf=new Float32Array(16),Bf=new Float32Array(9),zf=new Float32Array(4);function ds(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=Df[r];if(s===void 0&&(s=new Float32Array(r),Df[r]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(s,a)}return s}function Nt(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function It(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function Kg(i,e){let t=Ff[e];t===void 0&&(t=new Int32Array(e),Ff[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function W1(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function q1(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Nt(t,e))return;i.uniform2fv(this.addr,e),It(t,e)}}function X1(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Nt(t,e))return;i.uniform3fv(this.addr,e),It(t,e)}}function Y1(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Nt(t,e))return;i.uniform4fv(this.addr,e),It(t,e)}}function $1(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),It(t,e)}else{if(Nt(t,n))return;zf.set(n),i.uniformMatrix2fv(this.addr,!1,zf),It(t,n)}}function J1(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),It(t,e)}else{if(Nt(t,n))return;Bf.set(n),i.uniformMatrix3fv(this.addr,!1,Bf),It(t,n)}}function j1(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Nt(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),It(t,e)}else{if(Nt(t,n))return;Nf.set(n),i.uniformMatrix4fv(this.addr,!1,Nf),It(t,n)}}function Z1(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function K1(i,e){const t=this.cache;Nt(t,e)||(i.uniform2iv(this.addr,e),It(t,e))}function Q1(i,e){const t=this.cache;Nt(t,e)||(i.uniform3iv(this.addr,e),It(t,e))}function eS(i,e){const t=this.cache;Nt(t,e)||(i.uniform4iv(this.addr,e),It(t,e))}function tS(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function nS(i,e){const t=this.cache;Nt(t,e)||(i.uniform2uiv(this.addr,e),It(t,e))}function iS(i,e){const t=this.cache;Nt(t,e)||(i.uniform3uiv(this.addr,e),It(t,e))}function rS(i,e){const t=this.cache;Nt(t,e)||(i.uniform4uiv(this.addr,e),It(t,e))}function sS(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.safeSetTexture2D(e||jg,r)}function oS(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||V1,r)}function aS(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.safeSetTextureCube(e||Zg,r)}function lS(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||k1,r)}function cS(i){switch(i){case 5126:return W1;case 35664:return q1;case 35665:return X1;case 35666:return Y1;case 35674:return $1;case 35675:return J1;case 35676:return j1;case 5124:case 35670:return Z1;case 35667:case 35671:return K1;case 35668:case 35672:return Q1;case 35669:case 35673:return eS;case 5125:return tS;case 36294:return nS;case 36295:return iS;case 36296:return rS;case 35678:case 36198:case 36298:case 36306:case 35682:return sS;case 35679:case 36299:case 36307:return oS;case 35680:case 36300:case 36308:case 36293:return aS;case 36289:case 36303:case 36311:case 36292:return lS}}function uS(i,e){i.uniform1fv(this.addr,e)}function hS(i,e){const t=ds(e,this.size,2);i.uniform2fv(this.addr,t)}function fS(i,e){const t=ds(e,this.size,3);i.uniform3fv(this.addr,t)}function dS(i,e){const t=ds(e,this.size,4);i.uniform4fv(this.addr,t)}function pS(i,e){const t=ds(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function mS(i,e){const t=ds(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function gS(i,e){const t=ds(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function yS(i,e){i.uniform1iv(this.addr,e)}function xS(i,e){i.uniform2iv(this.addr,e)}function vS(i,e){i.uniform3iv(this.addr,e)}function _S(i,e){i.uniform4iv(this.addr,e)}function wS(i,e){i.uniform1uiv(this.addr,e)}function bS(i,e){i.uniform2uiv(this.addr,e)}function MS(i,e){i.uniform3uiv(this.addr,e)}function SS(i,e){i.uniform4uiv(this.addr,e)}function ES(i,e,t){const n=e.length,r=Kg(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.safeSetTexture2D(e[s]||jg,r[s])}function TS(i,e,t){const n=e.length,r=Kg(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.safeSetTextureCube(e[s]||Zg,r[s])}function AS(i){switch(i){case 5126:return uS;case 35664:return hS;case 35665:return fS;case 35666:return dS;case 35674:return pS;case 35675:return mS;case 35676:return gS;case 5124:case 35670:return yS;case 35667:case 35671:return xS;case 35668:case 35672:return vS;case 35669:case 35673:return _S;case 5125:return wS;case 36294:return bS;case 36295:return MS;case 36296:return SS;case 35678:case 36198:case 36298:case 36306:case 35682:return ES;case 35680:case 36300:case 36308:case 36293:return TS}}function CS(i,e,t){this.id=i,this.addr=t,this.cache=[],this.setValue=cS(e.type)}function Qg(i,e,t){this.id=i,this.addr=t,this.cache=[],this.size=e.size,this.setValue=AS(e.type)}Qg.prototype.updateCache=function(i){const e=this.cache;i instanceof Float32Array&&e.length!==i.length&&(this.cache=new Float32Array(i.length)),It(e,i)};function e0(i){this.id=i,this.seq=[],this.map={}}e0.prototype.setValue=function(i,e,t){const n=this.seq;for(let r=0,s=n.length;r!==s;++r){const o=n[r];o.setValue(i,e[o.id],t)}};const uc=/(\w+)(\])?(\[|\.)?/g;function Of(i,e){i.seq.push(e),i.map[e.id]=e}function LS(i,e,t){const n=i.name,r=n.length;for(uc.lastIndex=0;;){const s=uc.exec(n),o=uc.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Of(t,c===void 0?new CS(a,i,e):new Qg(a,i,e));break}else{let h=t.map[a];h===void 0&&(h=new e0(a),Of(t,h)),t=h}}}function si(i,e){this.seq=[],this.map={};const t=i.getProgramParameter(e,35718);for(let n=0;n<t;++n){const r=i.getActiveUniform(e,n),s=i.getUniformLocation(e,r.name);LS(r,s,this)}}si.prototype.setValue=function(i,e,t,n){const r=this.map[e];r!==void 0&&r.setValue(i,t,n)};si.prototype.setOptional=function(i,e,t){const n=e[t];n!==void 0&&this.setValue(i,t,n)};si.upload=function(i,e,t,n){for(let r=0,s=e.length;r!==s;++r){const o=e[r],a=t[o.id];a.needsUpdate!==!1&&o.setValue(i,a.value,n)}};si.seqWithValue=function(i,e){const t=[];for(let n=0,r=i.length;n!==r;++n){const s=i[n];s.id in e&&t.push(s)}return t};function Uf(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}let RS=0;function PS(i){const e=i.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}function t0(i){switch(i){case Ct:return["Linear","( value )"];case mi:return["sRGB","( value )"];case il:return["RGBE","( value )"];case zu:return["RGBM","( value, 7.0 )"];case Ou:return["RGBM","( value, 16.0 )"];case Uu:return["RGBD","( value, 256.0 )"];case nl:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Cg:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function Hf(i,e,t){const n=i.getShaderParameter(e,35713),r=i.getShaderInfoLog(e).trim();return n&&r===""?"":t.toUpperCase()+"\n\n"+r+"\n\n"+PS(i.getShaderSource(e))}function Li(i,e){const t=t0(e);return"vec4 "+i+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function IS(i,e){const t=t0(e);return"vec4 "+i+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function DS(i,e){let t;switch(e){case Am:t="Linear";break;case Cm:t="Reinhard";break;case Lm:t="OptimizedCineon";break;case Rm:t="ACESFilmic";break;case Pm:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function FS(i){return[i.extensionDerivatives||i.envMapCubeUV||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Rs).join("\n")}function NS(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join("\n")}function BS(i,e){const t={},n=i.getProgramParameter(e,35721);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function Rs(i){return i!==""}function Gf(i,e){return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function kf(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const zS=/^[ \t]*#include +<([\w\d./]+)>/gm;function tu(i){return i.replace(zS,OS)}function OS(i,e){const t=Ne[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return tu(t)}const US=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,HS=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Vf(i){return i.replace(HS,n0).replace(US,GS)}function GS(i,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),n0(i,e,t,n)}function n0(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Wf(i){let e="precision "+i.precision+" float;\nprecision "+i.precision+" int;";return i.precision==="highp"?e+="\n#define HIGH_PRECISION":i.precision==="mediump"?e+="\n#define MEDIUM_PRECISION":i.precision==="lowp"&&(e+="\n#define LOW_PRECISION"),e}function kS(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Pu?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===sm?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Fr&&(e="SHADOWMAP_TYPE_VSM"),e}function VS(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case sr:case or:e="ENVMAP_TYPE_CUBE";break;case us:case mo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function WS(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case or:case mo:e="ENVMAP_MODE_REFRACTION";break}return e}function qS(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case po:e="ENVMAP_BLENDING_MULTIPLY";break;case Em:e="ENVMAP_BLENDING_MIX";break;case Tm:e="ENVMAP_BLENDING_ADD";break}return e}function XS(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=kS(t),c=VS(t),u=WS(t),h=qS(t),f=i.gammaFactor>0?i.gammaFactor:1,d=t.isWebGL2?"":FS(t),p=NS(s),y=r.createProgram();let x,m,g=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(x=[p].filter(Rs).join("\n"),x.length>0&&(x+="\n"),m=[d,p].filter(Rs).join("\n"),m.length>0&&(m+="\n")):(x=[Wf(t),"#define SHADER_NAME "+t.shaderName,p,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargets&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(Rs).join("\n"),m=[d,Wf(t),"#define SHADER_NAME "+t.shaderName,p,"#define GAMMA_FACTOR "+f,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ii?"#define TONE_MAPPING":"",t.toneMapping!==ii?Ne.tonemapping_pars_fragment:"",t.toneMapping!==ii?DS("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.format===Wi?"#define OPAQUE":"",Ne.encodings_pars_fragment,t.map?Li("mapTexelToLinear",t.mapEncoding):"",t.matcap?Li("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?Li("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?Li("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.specularColorMap?Li("specularColorMapTexelToLinear",t.specularColorMapEncoding):"",t.sheenColorMap?Li("sheenColorMapTexelToLinear",t.sheenColorMapEncoding):"",t.lightMap?Li("lightMapTexelToLinear",t.lightMapEncoding):"",IS("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(Rs).join("\n")),o=tu(o),o=Gf(o,t),o=kf(o,t),a=tu(a),a=Gf(a,t),a=kf(a,t),o=Vf(o),a=Vf(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(g="#version 300 es\n",x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+x,m=["#define varying in",t.glslVersion===Qc?"":"out highp vec4 pc_fragColor;",t.glslVersion===Qc?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+m);const _=g+x+o,v=g+m+a,S=Uf(r,35633,_),T=Uf(r,35632,v);if(r.attachShader(y,S),r.attachShader(y,T),t.index0AttributeName!==void 0?r.bindAttribLocation(y,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y),i.debug.checkShaderErrors){const H=r.getProgramInfoLog(y).trim(),F=r.getShaderInfoLog(S).trim(),P=r.getShaderInfoLog(T).trim();let ee=!0,k=!0;if(r.getProgramParameter(y,35714)===!1){ee=!1;const W=Hf(r,S,"vertex"),J=Hf(r,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(y,35715)+"\n\nProgram Info Log: "+H+"\n"+W+"\n"+J)}else H!==""?console.warn("THREE.WebGLProgram: Program Info Log:",H):(F===""||P==="")&&(k=!1);k&&(this.diagnostics={runnable:ee,programLog:H,vertexShader:{log:F,prefix:x},fragmentShader:{log:P,prefix:m}})}r.deleteShader(S),r.deleteShader(T);let b;this.getUniforms=function(){return b===void 0&&(b=new si(r,y)),b};let R;return this.getAttributes=function(){return R===void 0&&(R=BS(r,y)),R},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(y),this.program=void 0},this.name=t.shaderName,this.id=RS++,this.cacheKey=e,this.usedTimes=1,this.program=y,this.vertexShader=S,this.fragmentShader=T,this}function YS(i,e,t,n,r,s,o){const a=[],l=r.isWebGL2,c=r.logarithmicDepthBuffer,u=r.floatVertexTextures,h=r.maxVertexUniforms,f=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},y=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap",,"roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","specularIntensityMap","specularColorMap","specularColorMapEncoding","transmission","transmissionMap","thicknessMap","sheen","sheenColorMap","sheenColorMapEncoding","sheenRoughnessMap"];function x(b){const H=b.skeleton.bones;if(u)return 1024;{const P=Math.floor((h-20)/4),ee=Math.min(P,H.length);return ee<H.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+H.length+" bones. This GPU supports "+ee+"."),0):ee}}function m(b){let R;return b&&b.isTexture?R=b.encoding:b&&b.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),R=b.texture.encoding):R=Ct,l&&b&&b.isTexture&&b.format===Tt&&b.type===Nn&&b.encoding===mi&&(R=Ct),R}function g(b,R,H,F,P){const ee=F.fog,k=b.isMeshStandardMaterial?F.environment:null,W=(b.isMeshStandardMaterial?t:e).get(b.envMap||k),J=p[b.type],V=P.isSkinnedMesh?x(P):0;b.precision!==null&&(d=r.getMaxPrecision(b.precision),d!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",d,"instead."));let q,ie;if(J){const ae=ln[J];q=ae.vertexShader,ie=ae.fragmentShader}else q=b.vertexShader,ie=b.fragmentShader;const me=i.getRenderTarget(),we=b.alphaTest>0,ue=b.clearcoat>0;return{isWebGL2:l,shaderID:J,shaderName:b.type,vertexShader:q,fragmentShader:ie,defines:b.defines,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:d,instancing:P.isInstancedMesh===!0,instancingColor:P.isInstancedMesh===!0&&P.instanceColor!==null,supportsVertexTextures:f,outputEncoding:me!==null?m(me.texture):i.outputEncoding,map:!!b.map,mapEncoding:m(b.map),matcap:!!b.matcap,matcapEncoding:m(b.matcap),envMap:!!W,envMapMode:W&&W.mapping,envMapEncoding:m(W),envMapCubeUV:!!W&&(W.mapping===us||W.mapping===mo),lightMap:!!b.lightMap,lightMapEncoding:m(b.lightMap),aoMap:!!b.aoMap,emissiveMap:!!b.emissiveMap,emissiveMapEncoding:m(b.emissiveMap),bumpMap:!!b.bumpMap,normalMap:!!b.normalMap,objectSpaceNormalMap:b.normalMapType===Pg,tangentSpaceNormalMap:b.normalMapType===lr,clearcoat:ue,clearcoatMap:ue&&!!b.clearcoatMap,clearcoatRoughnessMap:ue&&!!b.clearcoatRoughnessMap,clearcoatNormalMap:ue&&!!b.clearcoatNormalMap,displacementMap:!!b.displacementMap,roughnessMap:!!b.roughnessMap,metalnessMap:!!b.metalnessMap,specularMap:!!b.specularMap,specularIntensityMap:!!b.specularIntensityMap,specularColorMap:!!b.specularColorMap,specularColorMapEncoding:m(b.specularColorMap),alphaMap:!!b.alphaMap,alphaTest:we,gradientMap:!!b.gradientMap,sheen:b.sheen>0,sheenColorMap:!!b.sheenColorMap,sheenColorMapEncoding:m(b.sheenColorMap),sheenRoughnessMap:!!b.sheenRoughnessMap,transmission:b.transmission>0,transmissionMap:!!b.transmissionMap,thicknessMap:!!b.thicknessMap,combine:b.combine,vertexTangents:!!b.normalMap&&!!P.geometry&&!!P.geometry.attributes.tangent,vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!P.geometry&&!!P.geometry.attributes.color&&P.geometry.attributes.color.itemSize===4,vertexUvs:!!b.map||!!b.bumpMap||!!b.normalMap||!!b.specularMap||!!b.alphaMap||!!b.emissiveMap||!!b.roughnessMap||!!b.metalnessMap||!!b.clearcoatMap||!!b.clearcoatRoughnessMap||!!b.clearcoatNormalMap||!!b.displacementMap||!!b.transmissionMap||!!b.thicknessMap||!!b.specularIntensityMap||!!b.specularColorMap||!!b.sheenColorMap||b.sheenRoughnessMap,uvsVertexOnly:!(b.map||b.bumpMap||b.normalMap||b.specularMap||b.alphaMap||b.emissiveMap||b.roughnessMap||b.metalnessMap||b.clearcoatNormalMap||b.transmission>0||b.transmissionMap||b.thicknessMap||b.specularIntensityMap||b.specularColorMap||!!b.sheen>0||b.sheenColorMap||b.sheenRoughnessMap)&&!!b.displacementMap,fog:!!ee,useFog:b.fog,fogExp2:ee&&ee.isFogExp2,flatShading:!!b.flatShading,sizeAttenuation:b.sizeAttenuation,logarithmicDepthBuffer:c,skinning:P.isSkinnedMesh===!0&&V>0,maxBones:V,useVertexTexture:u,morphTargets:!!P.geometry&&!!P.geometry.morphAttributes.position,morphNormals:!!P.geometry&&!!P.geometry.morphAttributes.normal,morphTargetsCount:P.geometry&&P.geometry.morphAttributes.position?P.geometry.morphAttributes.position.length:0,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,format:b.format,dithering:b.dithering,shadowMapEnabled:i.shadowMap.enabled&&H.length>0,shadowMapType:i.shadowMap.type,toneMapping:b.toneMapped?i.toneMapping:ii,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Zi,flipSided:b.side===lt,depthPacking:b.depthPacking!==void 0?b.depthPacking:!1,index0AttributeName:b.index0AttributeName,extensionDerivatives:b.extensions&&b.extensions.derivatives,extensionFragDepth:b.extensions&&b.extensions.fragDepth,extensionDrawBuffers:b.extensions&&b.extensions.drawBuffers,extensionShaderTextureLOD:b.extensions&&b.extensions.shaderTextureLOD,rendererExtensionFragDepth:l||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function _(b){const R=[];if(b.shaderID?R.push(b.shaderID):(R.push(pf(b.fragmentShader)),R.push(pf(b.vertexShader))),b.defines!==void 0)for(const H in b.defines)R.push(H),R.push(b.defines[H]);if(b.isRawShaderMaterial===!1){for(let H=0;H<y.length;H++)R.push(b[y[H]]);R.push(i.outputEncoding),R.push(i.gammaFactor)}return R.push(b.customProgramCacheKey),R.join()}function v(b){const R=p[b.type];let H;if(R){const F=ln[R];H=qg.clone(F.uniforms)}else H=b.uniforms;return H}function S(b,R){let H;for(let F=0,P=a.length;F<P;F++){const ee=a[F];if(ee.cacheKey===R){H=ee,++H.usedTimes;break}}return H===void 0&&(H=new XS(i,R,b,s),a.push(H)),H}function T(b){if(--b.usedTimes===0){const R=a.indexOf(b);a[R]=a[a.length-1],a.pop(),b.destroy()}}return{getParameters:g,getProgramCacheKey:_,getUniforms:v,acquireProgram:S,releaseProgram:T,programs:a}}function $S(){let i=new WeakMap;function e(s){let o=i.get(s);return o===void 0&&(o={},i.set(s,o)),o}function t(s){i.delete(s)}function n(s,o,a){i.get(s)[o]=a}function r(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:r}}function JS(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.program!==e.program?i.program.id-e.program.id:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function qf(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Xf(i){const e=[];let t=0;const n=[],r=[],s=[],o={id:-1};function a(){t=0,n.length=0,r.length=0,s.length=0}function l(d,p,y,x,m,g){let _=e[t];const v=i.get(y);return _===void 0?(_={id:d.id,object:d,geometry:p,material:y,program:v.program||o,groupOrder:x,renderOrder:d.renderOrder,z:m,group:g},e[t]=_):(_.id=d.id,_.object=d,_.geometry=p,_.material=y,_.program=v.program||o,_.groupOrder=x,_.renderOrder=d.renderOrder,_.z=m,_.group=g),t++,_}function c(d,p,y,x,m,g){const _=l(d,p,y,x,m,g);y.transmission>0?r.push(_):y.transparent===!0?s.push(_):n.push(_)}function u(d,p,y,x,m,g){const _=l(d,p,y,x,m,g);y.transmission>0?r.unshift(_):y.transparent===!0?s.unshift(_):n.unshift(_)}function h(d,p){n.length>1&&n.sort(d||JS),r.length>1&&r.sort(p||qf),s.length>1&&s.sort(p||qf)}function f(){for(let d=t,p=e.length;d<p;d++){const y=e[d];if(y.id===null)break;y.id=null,y.object=null,y.geometry=null,y.material=null,y.program=null,y.group=null}}return{opaque:n,transmissive:r,transparent:s,init:a,push:c,unshift:u,finish:f,sort:h}}function jS(i){let e=new WeakMap;function t(r,s){let o;return e.has(r)===!1?(o=new Xf(i),e.set(r,[o])):s>=e.get(r).length?(o=new Xf(i),e.get(r).push(o)):o=e.get(r)[s],o}function n(){e=new WeakMap}return{get:t,dispose:n}}function ZS(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new A,color:new de};break;case"SpotLight":t={position:new A,direction:new A,color:new de,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new A,color:new de,distance:0,decay:0};break;case"HemisphereLight":t={direction:new A,skyColor:new de,groundColor:new de};break;case"RectAreaLight":t={color:new de,position:new A,halfWidth:new A,halfHeight:new A};break}return i[e.id]=t,t}}}function KS(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ne,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let QS=0;function eE(i,e){return(e.castShadow?1:0)-(i.castShadow?1:0)}function tE(i,e){const t=new ZS,n=KS(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new A);const s=new A,o=new _e,a=new _e;function l(u,h){let f=0,d=0,p=0;for(let H=0;H<9;H++)r.probe[H].set(0,0,0);let y=0,x=0,m=0,g=0,_=0,v=0,S=0,T=0;u.sort(eE);const b=h!==!0?Math.PI:1;for(let H=0,F=u.length;H<F;H++){const P=u[H],ee=P.color,k=P.intensity,W=P.distance,J=P.shadow&&P.shadow.map?P.shadow.map.texture:null;if(P.isAmbientLight)f+=ee.r*k*b,d+=ee.g*k*b,p+=ee.b*k*b;else if(P.isLightProbe)for(let V=0;V<9;V++)r.probe[V].addScaledVector(P.sh.coefficients[V],k);else if(P.isDirectionalLight){const V=t.get(P);if(V.color.copy(P.color).multiplyScalar(P.intensity*b),P.castShadow){const q=P.shadow,ie=n.get(P);ie.shadowBias=q.bias,ie.shadowNormalBias=q.normalBias,ie.shadowRadius=q.radius,ie.shadowMapSize=q.mapSize,r.directionalShadow[y]=ie,r.directionalShadowMap[y]=J,r.directionalShadowMatrix[y]=P.shadow.matrix,v++}r.directional[y]=V,y++}else if(P.isSpotLight){const V=t.get(P);if(V.position.setFromMatrixPosition(P.matrixWorld),V.color.copy(ee).multiplyScalar(k*b),V.distance=W,V.coneCos=Math.cos(P.angle),V.penumbraCos=Math.cos(P.angle*(1-P.penumbra)),V.decay=P.decay,P.castShadow){const q=P.shadow,ie=n.get(P);ie.shadowBias=q.bias,ie.shadowNormalBias=q.normalBias,ie.shadowRadius=q.radius,ie.shadowMapSize=q.mapSize,r.spotShadow[m]=ie,r.spotShadowMap[m]=J,r.spotShadowMatrix[m]=P.shadow.matrix,T++}r.spot[m]=V,m++}else if(P.isRectAreaLight){const V=t.get(P);V.color.copy(ee).multiplyScalar(k),V.halfWidth.set(P.width*.5,0,0),V.halfHeight.set(0,P.height*.5,0),r.rectArea[g]=V,g++}else if(P.isPointLight){const V=t.get(P);if(V.color.copy(P.color).multiplyScalar(P.intensity*b),V.distance=P.distance,V.decay=P.decay,P.castShadow){const q=P.shadow,ie=n.get(P);ie.shadowBias=q.bias,ie.shadowNormalBias=q.normalBias,ie.shadowRadius=q.radius,ie.shadowMapSize=q.mapSize,ie.shadowCameraNear=q.camera.near,ie.shadowCameraFar=q.camera.far,r.pointShadow[x]=ie,r.pointShadowMap[x]=J,r.pointShadowMatrix[x]=P.shadow.matrix,S++}r.point[x]=V,x++}else if(P.isHemisphereLight){const V=t.get(P);V.skyColor.copy(P.color).multiplyScalar(k*b),V.groundColor.copy(P.groundColor).multiplyScalar(k*b),r.hemi[_]=V,_++}}g>0&&(e.isWebGL2||i.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=he.LTC_FLOAT_1,r.rectAreaLTC2=he.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=he.LTC_HALF_1,r.rectAreaLTC2=he.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=f,r.ambient[1]=d,r.ambient[2]=p;const R=r.hash;(R.directionalLength!==y||R.pointLength!==x||R.spotLength!==m||R.rectAreaLength!==g||R.hemiLength!==_||R.numDirectionalShadows!==v||R.numPointShadows!==S||R.numSpotShadows!==T)&&(r.directional.length=y,r.spot.length=m,r.rectArea.length=g,r.point.length=x,r.hemi.length=_,r.directionalShadow.length=v,r.directionalShadowMap.length=v,r.pointShadow.length=S,r.pointShadowMap.length=S,r.spotShadow.length=T,r.spotShadowMap.length=T,r.directionalShadowMatrix.length=v,r.pointShadowMatrix.length=S,r.spotShadowMatrix.length=T,R.directionalLength=y,R.pointLength=x,R.spotLength=m,R.rectAreaLength=g,R.hemiLength=_,R.numDirectionalShadows=v,R.numPointShadows=S,R.numSpotShadows=T,r.version=QS++)}function c(u,h){let f=0,d=0,p=0,y=0,x=0;const m=h.matrixWorldInverse;for(let g=0,_=u.length;g<_;g++){const v=u[g];if(v.isDirectionalLight){const S=r.directional[f];S.direction.setFromMatrixPosition(v.matrixWorld),s.setFromMatrixPosition(v.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(m),f++}else if(v.isSpotLight){const S=r.spot[p];S.position.setFromMatrixPosition(v.matrixWorld),S.position.applyMatrix4(m),S.direction.setFromMatrixPosition(v.matrixWorld),s.setFromMatrixPosition(v.target.matrixWorld),S.direction.sub(s),S.direction.transformDirection(m),p++}else if(v.isRectAreaLight){const S=r.rectArea[y];S.position.setFromMatrixPosition(v.matrixWorld),S.position.applyMatrix4(m),a.identity(),o.copy(v.matrixWorld),o.premultiply(m),a.extractRotation(o),S.halfWidth.set(v.width*.5,0,0),S.halfHeight.set(0,v.height*.5,0),S.halfWidth.applyMatrix4(a),S.halfHeight.applyMatrix4(a),y++}else if(v.isPointLight){const S=r.point[d];S.position.setFromMatrixPosition(v.matrixWorld),S.position.applyMatrix4(m),d++}else if(v.isHemisphereLight){const S=r.hemi[x];S.direction.setFromMatrixPosition(v.matrixWorld),S.direction.transformDirection(m),S.direction.normalize(),x++}}}return{setup:l,setupView:c,state:r}}function Yf(i,e){const t=new tE(i,e),n=[],r=[];function s(){n.length=0,r.length=0}function o(h){n.push(h)}function a(h){r.push(h)}function l(h){t.setup(n,h)}function c(h){t.setupView(n,h)}return{init:s,state:{lightsArray:n,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function nE(i,e){let t=new WeakMap;function n(s,o=0){let a;return t.has(s)===!1?(a=new Yf(i,e),t.set(s,[a])):o>=t.get(s).length?(a=new Yf(i,e),t.get(s).push(a)):a=t.get(s)[o],a}function r(){t=new WeakMap}return{get:n,dispose:r}}class ul extends wt{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=Lg,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}ul.prototype.isMeshDepthMaterial=!0;class hl extends wt{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new A,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}hl.prototype.isMeshDistanceMaterial=!0;const iE="void main() {\n	gl_Position = vec4( position, 1.0 );\n}",rE="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function i0(i,e,t){let n=new yo;const r=new ne,s=new ne,o=new Ye,a=new ul({depthPacking:Rg}),l=new hl,c={},u=t.maxTextureSize,h={0:lt,1:ji,2:Zi},f=new zn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ne},radius:{value:4}},vertexShader:iE,fragmentShader:rE}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new Te;p.setAttribute("position",new He(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new dt(p,f),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Pu,this.render=function(v,S,T){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||v.length===0)return;const b=i.getRenderTarget(),R=i.getActiveCubeFace(),H=i.getActiveMipmapLevel(),F=i.state;F.setBlending(Fn),F.buffers.color.setClear(1,1,1,1),F.buffers.depth.setTest(!0),F.setScissorTest(!1);for(let P=0,ee=v.length;P<ee;P++){const k=v[P],W=k.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",k,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;r.copy(W.mapSize);const J=W.getFrameExtents();if(r.multiply(J),s.copy(W.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/J.x),r.x=s.x*J.x,W.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/J.y),r.y=s.y*J.y,W.mapSize.y=s.y)),W.map===null&&!W.isPointLightShadow&&this.type===Fr){const q={minFilter:mt,magFilter:mt,format:Tt};W.map=new un(r.x,r.y,q),W.map.texture.name=k.name+".shadowMap",W.mapPass=new un(r.x,r.y,q),W.camera.updateProjectionMatrix()}if(W.map===null){const q={minFilter:ft,magFilter:ft,format:Tt};W.map=new un(r.x,r.y,q),W.map.texture.name=k.name+".shadowMap",W.camera.updateProjectionMatrix()}i.setRenderTarget(W.map),i.clear();const V=W.getViewportCount();for(let q=0;q<V;q++){const ie=W.getViewport(q);o.set(s.x*ie.x,s.y*ie.y,s.x*ie.z,s.y*ie.w),F.viewport(o),W.updateMatrices(k,q),n=W.getFrustum(),_(S,T,W.camera,k,this.type)}!W.isPointLightShadow&&this.type===Fr&&m(W,T),W.needsUpdate=!1}x.needsUpdate=!1,i.setRenderTarget(b,R,H)};function m(v,S){const T=e.update(y);f.defines.VSM_SAMPLES!==v.blurSamples&&(f.defines.VSM_SAMPLES=v.blurSamples,d.defines.VSM_SAMPLES=v.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),f.uniforms.shadow_pass.value=v.map.texture,f.uniforms.resolution.value=v.mapSize,f.uniforms.radius.value=v.radius,i.setRenderTarget(v.mapPass),i.clear(),i.renderBufferDirect(S,null,T,f,y,null),d.uniforms.shadow_pass.value=v.mapPass.texture,d.uniforms.resolution.value=v.mapSize,d.uniforms.radius.value=v.radius,i.setRenderTarget(v.map),i.clear(),i.renderBufferDirect(S,null,T,d,y,null)}function g(v,S,T,b,R,H,F){let P=null;const ee=b.isPointLight===!0?v.customDistanceMaterial:v.customDepthMaterial;if(ee!==void 0?P=ee:P=b.isPointLight===!0?l:a,i.localClippingEnabled&&T.clipShadows===!0&&T.clippingPlanes.length!==0||T.displacementMap&&T.displacementScale!==0||T.alphaMap&&T.alphaTest>0){const k=P.uuid,W=T.uuid;let J=c[k];J===void 0&&(J={},c[k]=J);let V=J[W];V===void 0&&(V=P.clone(),J[W]=V),P=V}return P.visible=T.visible,P.wireframe=T.wireframe,F===Fr?P.side=T.shadowSide!==null?T.shadowSide:T.side:P.side=T.shadowSide!==null?T.shadowSide:h[T.side],P.alphaMap=T.alphaMap,P.alphaTest=T.alphaTest,P.clipShadows=T.clipShadows,P.clippingPlanes=T.clippingPlanes,P.clipIntersection=T.clipIntersection,P.displacementMap=T.displacementMap,P.displacementScale=T.displacementScale,P.displacementBias=T.displacementBias,P.wireframeLinewidth=T.wireframeLinewidth,P.linewidth=T.linewidth,b.isPointLight===!0&&P.isMeshDistanceMaterial===!0&&(P.referencePosition.setFromMatrixPosition(b.matrixWorld),P.nearDistance=R,P.farDistance=H),P}function _(v,S,T,b,R){if(v.visible===!1)return;if(v.layers.test(S.layers)&&(v.isMesh||v.isLine||v.isPoints)&&(v.castShadow||v.receiveShadow&&R===Fr)&&(!v.frustumCulled||n.intersectsObject(v))){v.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,v.matrixWorld);const P=e.update(v),ee=v.material;if(Array.isArray(ee)){const k=P.groups;for(let W=0,J=k.length;W<J;W++){const V=k[W],q=ee[V.materialIndex];if(q&&q.visible){const ie=g(v,P,q,b,T.near,T.far,R);i.renderBufferDirect(T,null,P,ie,v,V)}}}else if(ee.visible){const k=g(v,P,ee,b,T.near,T.far,R);i.renderBufferDirect(T,null,P,k,v,null)}}const F=v.children;for(let P=0,ee=F.length;P<ee;P++)_(F[P],S,T,b,R)}}function sE(i,e,t){const n=t.isWebGL2;function r(){let I=!1;const le=new Ye;let Y=null;const fe=new Ye(0,0,0,0);return{setMask:function(pe){Y!==pe&&!I&&(i.colorMask(pe,pe,pe,pe),Y=pe)},setLocked:function(pe){I=pe},setClear:function(pe,De,pt,et,tn){tn===!0&&(pe*=et,De*=et,pt*=et),le.set(pe,De,pt,et),fe.equals(le)===!1&&(i.clearColor(pe,De,pt,et),fe.copy(le))},reset:function(){I=!1,Y=null,fe.set(-1,0,0,0)}}}function s(){let I=!1,le=null,Y=null,fe=null;return{setTest:function(pe){pe?ce(2929):ve(2929)},setMask:function(pe){le!==pe&&!I&&(i.depthMask(pe),le=pe)},setFunc:function(pe){if(Y!==pe){if(pe)switch(pe){case xm:i.depthFunc(512);break;case vm:i.depthFunc(519);break;case _m:i.depthFunc(513);break;case Ba:i.depthFunc(515);break;case wm:i.depthFunc(514);break;case bm:i.depthFunc(518);break;case Mm:i.depthFunc(516);break;case Sm:i.depthFunc(517);break;default:i.depthFunc(515)}else i.depthFunc(515);Y=pe}},setLocked:function(pe){I=pe},setClear:function(pe){fe!==pe&&(i.clearDepth(pe),fe=pe)},reset:function(){I=!1,le=null,Y=null,fe=null}}}function o(){let I=!1,le=null,Y=null,fe=null,pe=null,De=null,pt=null,et=null,tn=null;return{setTest:function(Oe){I||(Oe?ce(2960):ve(2960))},setMask:function(Oe){le!==Oe&&!I&&(i.stencilMask(Oe),le=Oe)},setFunc:function(Oe,ht,zt){(Y!==Oe||fe!==ht||pe!==zt)&&(i.stencilFunc(Oe,ht,zt),Y=Oe,fe=ht,pe=zt)},setOp:function(Oe,ht,zt){(De!==Oe||pt!==ht||et!==zt)&&(i.stencilOp(Oe,ht,zt),De=Oe,pt=ht,et=zt)},setLocked:function(Oe){I=Oe},setClear:function(Oe){tn!==Oe&&(i.clearStencil(Oe),tn=Oe)},reset:function(){I=!1,le=null,Y=null,fe=null,pe=null,De=null,pt=null,et=null,tn=null}}}const a=new r,l=new s,c=new o;let u={},h=null,f={},d=null,p=!1,y=null,x=null,m=null,g=null,_=null,v=null,S=null,T=!1,b=null,R=null,H=null,F=null,P=null;const ee=i.getParameter(35661);let k=!1,W=0;const J=i.getParameter(7938);J.indexOf("WebGL")!==-1?(W=parseFloat(/^WebGL (\d)/.exec(J)[1]),k=W>=1):J.indexOf("OpenGL ES")!==-1&&(W=parseFloat(/^OpenGL ES (\d)/.exec(J)[1]),k=W>=2);let V=null,q={};const ie=i.getParameter(3088),me=i.getParameter(2978),we=new Ye().fromArray(ie),ue=new Ye().fromArray(me);function Me(I,le,Y){const fe=new Uint8Array(4),pe=i.createTexture();i.bindTexture(I,pe),i.texParameteri(I,10241,9728),i.texParameteri(I,10240,9728);for(let De=0;De<Y;De++)i.texImage2D(le+De,0,6408,1,1,0,6408,5121,fe);return pe}const ae={};ae[3553]=Me(3553,3553,1),ae[34067]=Me(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ce(2929),l.setFunc(Ba),E(!1),C(zc),ce(2884),Le(Fn);function ce(I){u[I]!==!0&&(i.enable(I),u[I]=!0)}function ve(I){u[I]!==!1&&(i.disable(I),u[I]=!1)}function Z(I){I!==h&&(i.bindFramebuffer(36160,I),h=I)}function be(I,le){return le===null&&h!==null&&(le=h),f[I]!==le?(i.bindFramebuffer(I,le),f[I]=le,n&&(I===36009&&(f[36160]=le),I===36160&&(f[36009]=le)),!0):!1}function Ee(I){return d!==I?(i.useProgram(I),d=I,!0):!1}const ge={[zi]:32774,[am]:32778,[lm]:32779};if(n)ge[Gc]=32775,ge[kc]=32776;else{const I=e.get("EXT_blend_minmax");I!==null&&(ge[Gc]=I.MIN_EXT,ge[kc]=I.MAX_EXT)}const ye={[cm]:0,[um]:1,[hm]:768,[Du]:770,[ym]:776,[mm]:774,[dm]:772,[fm]:769,[Fu]:771,[gm]:775,[pm]:773};function Le(I,le,Y,fe,pe,De,pt,et){if(I===Fn){p===!0&&(ve(3042),p=!1);return}if(p===!1&&(ce(3042),p=!0),I!==om){if(I!==y||et!==T){if((x!==zi||_!==zi)&&(i.blendEquation(32774),x=zi,_=zi),et)switch(I){case Hr:i.blendFuncSeparate(1,771,1,771);break;case Oc:i.blendFunc(1,1);break;case Uc:i.blendFuncSeparate(0,0,769,771);break;case Hc:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}else switch(I){case Hr:i.blendFuncSeparate(770,771,1,771);break;case Oc:i.blendFunc(770,1);break;case Uc:i.blendFunc(0,769);break;case Hc:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",I);break}m=null,g=null,v=null,S=null,y=I,T=et}return}pe=pe||le,De=De||Y,pt=pt||fe,(le!==x||pe!==_)&&(i.blendEquationSeparate(ge[le],ge[pe]),x=le,_=pe),(Y!==m||fe!==g||De!==v||pt!==S)&&(i.blendFuncSeparate(ye[Y],ye[fe],ye[De],ye[pt]),m=Y,g=fe,v=De,S=pt),y=I,T=null}function K(I,le){I.side===Zi?ve(2884):ce(2884);let Y=I.side===lt;le&&(Y=!Y),E(Y),I.blending===Hr&&I.transparent===!1?Le(Fn):Le(I.blending,I.blendEquation,I.blendSrc,I.blendDst,I.blendEquationAlpha,I.blendSrcAlpha,I.blendDstAlpha,I.premultipliedAlpha),l.setFunc(I.depthFunc),l.setTest(I.depthTest),l.setMask(I.depthWrite),a.setMask(I.colorWrite);const fe=I.stencilWrite;c.setTest(fe),fe&&(c.setMask(I.stencilWriteMask),c.setFunc(I.stencilFunc,I.stencilRef,I.stencilFuncMask),c.setOp(I.stencilFail,I.stencilZFail,I.stencilZPass)),z(I.polygonOffset,I.polygonOffsetFactor,I.polygonOffsetUnits),I.alphaToCoverage===!0?ce(32926):ve(32926)}function E(I){b!==I&&(I?i.frontFace(2304):i.frontFace(2305),b=I)}function C(I){I!==im?(ce(2884),I!==R&&(I===zc?i.cullFace(1029):I===rm?i.cullFace(1028):i.cullFace(1032))):ve(2884),R=I}function N(I){I!==H&&(k&&i.lineWidth(I),H=I)}function z(I,le,Y){I?(ce(32823),(F!==le||P!==Y)&&(i.polygonOffset(le,Y),F=le,P=Y)):ve(32823)}function M(I){I?ce(3089):ve(3089)}function w(I){I===void 0&&(I=33984+ee-1),V!==I&&(i.activeTexture(I),V=I)}function D(I,le){V===null&&w();let Y=q[V];Y===void 0&&(Y={type:void 0,texture:void 0},q[V]=Y),(Y.type!==I||Y.texture!==le)&&(i.bindTexture(I,le||ae[I]),Y.type=I,Y.texture=le)}function O(){const I=q[V];I!==void 0&&I.type!==void 0&&(i.bindTexture(I.type,null),I.type=void 0,I.texture=void 0)}function U(){try{i.compressedTexImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function G(){try{i.texImage2D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function Q(){try{i.texImage3D.apply(i,arguments)}catch(I){console.error("THREE.WebGLState:",I)}}function te(I){we.equals(I)===!1&&(i.scissor(I.x,I.y,I.z,I.w),we.copy(I))}function se(I){ue.equals(I)===!1&&(i.viewport(I.x,I.y,I.z,I.w),ue.copy(I))}function oe(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),u={},V=null,q={},h=null,f={},d=null,p=!1,y=null,x=null,m=null,g=null,_=null,v=null,S=null,T=!1,b=null,R=null,H=null,F=null,P=null,we.set(0,0,i.canvas.width,i.canvas.height),ue.set(0,0,i.canvas.width,i.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ce,disable:ve,bindFramebuffer:be,bindXRFramebuffer:Z,useProgram:Ee,setBlending:Le,setMaterial:K,setFlipSided:E,setCullFace:C,setLineWidth:N,setPolygonOffset:z,setScissorTest:M,activeTexture:w,bindTexture:D,unbindTexture:O,compressedTexImage2D:U,texImage2D:G,texImage3D:Q,scissor:te,viewport:se,reset:oe}}function oE(i,e,t,n,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,h=r.maxSamples,f=new WeakMap;let d,p=!1;try{p=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(M){}function y(M,w){return p?new OffscreenCanvas(M,w):rl("canvas")}function x(M,w,D,O){let U=1;if((M.width>O||M.height>O)&&(U=O/Math.max(M.width,M.height)),U<1||w===!0)if(typeof HTMLImageElement<"u"&&M instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&M instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&M instanceof ImageBitmap){const G=w?Fg:Math.floor,Q=G(U*M.width),te=G(U*M.height);d===void 0&&(d=y(Q,te));const se=D?y(Q,te):d;return se.width=Q,se.height=te,se.getContext("2d").drawImage(M,0,0,Q,te),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+M.width+"x"+M.height+") to ("+Q+"x"+te+")."),se}else return"data"in M&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+M.width+"x"+M.height+")."),M;return M}function m(M){return eu(M.width)&&eu(M.height)}function g(M){return a?!1:M.wrapS!==Et||M.wrapT!==Et||M.minFilter!==ft&&M.minFilter!==mt}function _(M,w){return M.generateMipmaps&&w&&M.minFilter!==ft&&M.minFilter!==mt}function v(M,w,D,O,U=1){i.generateMipmap(M);const G=n.get(w);G.__maxMipLevel=Math.log2(Math.max(D,O,U))}function S(M,w,D,O){if(a===!1)return w;if(M!==null){if(i[M]!==void 0)return i[M];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+M+"'")}let U=w;return w===6403&&(D===5126&&(U=33326),D===5131&&(U=33325),D===5121&&(U=33321)),w===6407&&(D===5126&&(U=34837),D===5131&&(U=34843),D===5121&&(U=32849)),w===6408&&(D===5126&&(U=34836),D===5131&&(U=34842),D===5121&&(U=O===mi?35907:32856)),(U===33325||U===33326||U===34842||U===34836)&&e.get("EXT_color_buffer_float"),U}function T(M){return M===ft||M===za||M===Oa?9728:9729}function b(M){const w=M.target;w.removeEventListener("dispose",b),H(w),w.isVideoTexture&&f.delete(w),o.memory.textures--}function R(M){const w=M.target;w.removeEventListener("dispose",R),F(w)}function H(M){const w=n.get(M);w.__webglInit!==void 0&&(i.deleteTexture(w.__webglTexture),n.remove(M))}function F(M){const w=M.texture,D=n.get(M),O=n.get(w);if(M){if(O.__webglTexture!==void 0&&(i.deleteTexture(O.__webglTexture),o.memory.textures--),M.depthTexture&&M.depthTexture.dispose(),M.isWebGLCubeRenderTarget)for(let U=0;U<6;U++)i.deleteFramebuffer(D.__webglFramebuffer[U]),D.__webglDepthbuffer&&i.deleteRenderbuffer(D.__webglDepthbuffer[U]);else i.deleteFramebuffer(D.__webglFramebuffer),D.__webglDepthbuffer&&i.deleteRenderbuffer(D.__webglDepthbuffer),D.__webglMultisampledFramebuffer&&i.deleteFramebuffer(D.__webglMultisampledFramebuffer),D.__webglColorRenderbuffer&&i.deleteRenderbuffer(D.__webglColorRenderbuffer),D.__webglDepthRenderbuffer&&i.deleteRenderbuffer(D.__webglDepthRenderbuffer);if(M.isWebGLMultipleRenderTargets)for(let U=0,G=w.length;U<G;U++){const Q=n.get(w[U]);Q.__webglTexture&&(i.deleteTexture(Q.__webglTexture),o.memory.textures--),n.remove(w[U])}n.remove(w),n.remove(M)}}let P=0;function ee(){P=0}function k(){const M=P;return M>=l&&console.warn("THREE.WebGLTextures: Trying to use "+M+" texture units while this GPU supports only "+l),P+=1,M}function W(M,w){const D=n.get(M);if(M.isVideoTexture&&K(M),M.version>0&&D.__version!==M.version){const O=M.image;if(O===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(O.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Me(D,M,w);return}}t.activeTexture(33984+w),t.bindTexture(3553,D.__webglTexture)}function J(M,w){const D=n.get(M);if(M.version>0&&D.__version!==M.version){Me(D,M,w);return}t.activeTexture(33984+w),t.bindTexture(35866,D.__webglTexture)}function V(M,w){const D=n.get(M);if(M.version>0&&D.__version!==M.version){Me(D,M,w);return}t.activeTexture(33984+w),t.bindTexture(32879,D.__webglTexture)}function q(M,w){const D=n.get(M);if(M.version>0&&D.__version!==M.version){ae(D,M,w);return}t.activeTexture(33984+w),t.bindTexture(34067,D.__webglTexture)}const ie={[Js]:10497,[Et]:33071,[js]:33648},me={[ft]:9728,[za]:9984,[Oa]:9986,[mt]:9729,[Nu]:9985,[ar]:9987};function we(M,w,D){if(D?(i.texParameteri(M,10242,ie[w.wrapS]),i.texParameteri(M,10243,ie[w.wrapT]),(M===32879||M===35866)&&i.texParameteri(M,32882,ie[w.wrapR]),i.texParameteri(M,10240,me[w.magFilter]),i.texParameteri(M,10241,me[w.minFilter])):(i.texParameteri(M,10242,33071),i.texParameteri(M,10243,33071),(M===32879||M===35866)&&i.texParameteri(M,32882,33071),(w.wrapS!==Et||w.wrapT!==Et)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(M,10240,T(w.magFilter)),i.texParameteri(M,10241,T(w.minFilter)),w.minFilter!==ft&&w.minFilter!==mt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const O=e.get("EXT_texture_filter_anisotropic");if(w.type===xn&&e.has("OES_texture_float_linear")===!1||a===!1&&w.type===Vi&&e.has("OES_texture_half_float_linear")===!1)return;(w.anisotropy>1||n.get(w).__currentAnisotropy)&&(i.texParameterf(M,O.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(w.anisotropy,r.getMaxAnisotropy())),n.get(w).__currentAnisotropy=w.anisotropy)}}function ue(M,w){M.__webglInit===void 0&&(M.__webglInit=!0,w.addEventListener("dispose",b),M.__webglTexture=i.createTexture(),o.memory.textures++)}function Me(M,w,D){let O=3553;w.isDataTexture2DArray&&(O=35866),w.isDataTexture3D&&(O=32879),ue(M,w),t.activeTexture(33984+D),t.bindTexture(O,M.__webglTexture),i.pixelStorei(37440,w.flipY),i.pixelStorei(37441,w.premultiplyAlpha),i.pixelStorei(3317,w.unpackAlignment),i.pixelStorei(37443,0);const U=g(w)&&m(w.image)===!1,G=x(w.image,U,!1,u),Q=m(G)||a,te=s.convert(w.format);let se=s.convert(w.type),oe=S(w.internalFormat,te,se,w.encoding);we(O,w,Q);let I;const le=w.mipmaps;if(w.isDepthTexture)oe=6402,a?w.type===xn?oe=36012:w.type===Os?oe=33190:w.type===Gr?oe=35056:oe=33189:w.type===xn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),w.format===qi&&oe===6402&&w.type!==Zs&&w.type!==Os&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),w.type=Zs,se=s.convert(w.type)),w.format===Jr&&oe===6402&&(oe=34041,w.type!==Gr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),w.type=Gr,se=s.convert(w.type))),t.texImage2D(3553,0,oe,G.width,G.height,0,te,se,null);else if(w.isDataTexture)if(le.length>0&&Q){for(let Y=0,fe=le.length;Y<fe;Y++)I=le[Y],t.texImage2D(3553,Y,oe,I.width,I.height,0,te,se,I.data);w.generateMipmaps=!1,M.__maxMipLevel=le.length-1}else t.texImage2D(3553,0,oe,G.width,G.height,0,te,se,G.data),M.__maxMipLevel=0;else if(w.isCompressedTexture){for(let Y=0,fe=le.length;Y<fe;Y++)I=le[Y],w.format!==Tt&&w.format!==Wi?te!==null?t.compressedTexImage2D(3553,Y,oe,I.width,I.height,0,I.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(3553,Y,oe,I.width,I.height,0,te,se,I.data);M.__maxMipLevel=le.length-1}else if(w.isDataTexture2DArray)t.texImage3D(35866,0,oe,G.width,G.height,G.depth,0,te,se,G.data),M.__maxMipLevel=0;else if(w.isDataTexture3D)t.texImage3D(32879,0,oe,G.width,G.height,G.depth,0,te,se,G.data),M.__maxMipLevel=0;else if(le.length>0&&Q){for(let Y=0,fe=le.length;Y<fe;Y++)I=le[Y],t.texImage2D(3553,Y,oe,te,se,I);w.generateMipmaps=!1,M.__maxMipLevel=le.length-1}else t.texImage2D(3553,0,oe,te,se,G),M.__maxMipLevel=0;_(w,Q)&&v(O,w,G.width,G.height),M.__version=w.version,w.onUpdate&&w.onUpdate(w)}function ae(M,w,D){if(w.image.length!==6)return;ue(M,w),t.activeTexture(33984+D),t.bindTexture(34067,M.__webglTexture),i.pixelStorei(37440,w.flipY),i.pixelStorei(37441,w.premultiplyAlpha),i.pixelStorei(3317,w.unpackAlignment),i.pixelStorei(37443,0);const O=w&&(w.isCompressedTexture||w.image[0].isCompressedTexture),U=w.image[0]&&w.image[0].isDataTexture,G=[];for(let Y=0;Y<6;Y++)!O&&!U?G[Y]=x(w.image[Y],!1,!0,c):G[Y]=U?w.image[Y].image:w.image[Y];const Q=G[0],te=m(Q)||a,se=s.convert(w.format),oe=s.convert(w.type),I=S(w.internalFormat,se,oe,w.encoding);we(34067,w,te);let le;if(O){for(let Y=0;Y<6;Y++){le=G[Y].mipmaps;for(let fe=0;fe<le.length;fe++){const pe=le[fe];w.format!==Tt&&w.format!==Wi?se!==null?t.compressedTexImage2D(34069+Y,fe,I,pe.width,pe.height,0,pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):t.texImage2D(34069+Y,fe,I,pe.width,pe.height,0,se,oe,pe.data)}}M.__maxMipLevel=le.length-1}else{le=w.mipmaps;for(let Y=0;Y<6;Y++)if(U){t.texImage2D(34069+Y,0,I,G[Y].width,G[Y].height,0,se,oe,G[Y].data);for(let fe=0;fe<le.length;fe++){const De=le[fe].image[Y].image;t.texImage2D(34069+Y,fe+1,I,De.width,De.height,0,se,oe,De.data)}}else{t.texImage2D(34069+Y,0,I,se,oe,G[Y]);for(let fe=0;fe<le.length;fe++){const pe=le[fe];t.texImage2D(34069+Y,fe+1,I,se,oe,pe.image[Y])}}M.__maxMipLevel=le.length}_(w,te)&&v(34067,w,Q.width,Q.height),M.__version=w.version,w.onUpdate&&w.onUpdate(w)}function ce(M,w,D,O,U){const G=s.convert(D.format),Q=s.convert(D.type),te=S(D.internalFormat,G,Q,D.encoding);U===32879||U===35866?t.texImage3D(U,0,te,w.width,w.height,w.depth,0,G,Q,null):t.texImage2D(U,0,te,w.width,w.height,0,G,Q,null),t.bindFramebuffer(36160,M),i.framebufferTexture2D(36160,O,U,n.get(D).__webglTexture,0),t.bindFramebuffer(36160,null)}function ve(M,w,D){if(i.bindRenderbuffer(36161,M),w.depthBuffer&&!w.stencilBuffer){let O=33189;if(D){const U=w.depthTexture;U&&U.isDepthTexture&&(U.type===xn?O=36012:U.type===Os&&(O=33190));const G=Le(w);i.renderbufferStorageMultisample(36161,G,O,w.width,w.height)}else i.renderbufferStorage(36161,O,w.width,w.height);i.framebufferRenderbuffer(36160,36096,36161,M)}else if(w.depthBuffer&&w.stencilBuffer){if(D){const O=Le(w);i.renderbufferStorageMultisample(36161,O,35056,w.width,w.height)}else i.renderbufferStorage(36161,34041,w.width,w.height);i.framebufferRenderbuffer(36160,33306,36161,M)}else{const O=w.isWebGLMultipleRenderTargets===!0?w.texture[0]:w.texture,U=s.convert(O.format),G=s.convert(O.type),Q=S(O.internalFormat,U,G,O.encoding);if(D){const te=Le(w);i.renderbufferStorageMultisample(36161,te,Q,w.width,w.height)}else i.renderbufferStorage(36161,Q,w.width,w.height)}i.bindRenderbuffer(36161,null)}function Z(M,w){if(w&&w.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,M),!(w.depthTexture&&w.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(w.depthTexture).__webglTexture||w.depthTexture.image.width!==w.width||w.depthTexture.image.height!==w.height)&&(w.depthTexture.image.width=w.width,w.depthTexture.image.height=w.height,w.depthTexture.needsUpdate=!0),W(w.depthTexture,0);const O=n.get(w.depthTexture).__webglTexture;if(w.depthTexture.format===qi)i.framebufferTexture2D(36160,36096,3553,O,0);else if(w.depthTexture.format===Jr)i.framebufferTexture2D(36160,33306,3553,O,0);else throw new Error("Unknown depthTexture format")}function be(M){const w=n.get(M),D=M.isWebGLCubeRenderTarget===!0;if(M.depthTexture){if(D)throw new Error("target.depthTexture not supported in Cube render targets");Z(w.__webglFramebuffer,M)}else if(D){w.__webglDepthbuffer=[];for(let O=0;O<6;O++)t.bindFramebuffer(36160,w.__webglFramebuffer[O]),w.__webglDepthbuffer[O]=i.createRenderbuffer(),ve(w.__webglDepthbuffer[O],M,!1)}else t.bindFramebuffer(36160,w.__webglFramebuffer),w.__webglDepthbuffer=i.createRenderbuffer(),ve(w.__webglDepthbuffer,M,!1);t.bindFramebuffer(36160,null)}function Ee(M){const w=M.texture,D=n.get(M),O=n.get(w);M.addEventListener("dispose",R),M.isWebGLMultipleRenderTargets!==!0&&(O.__webglTexture=i.createTexture(),O.__version=w.version,o.memory.textures++);const U=M.isWebGLCubeRenderTarget===!0,G=M.isWebGLMultipleRenderTargets===!0,Q=M.isWebGLMultisampleRenderTarget===!0,te=w.isDataTexture3D||w.isDataTexture2DArray,se=m(M)||a;if(a&&w.format===Wi&&(w.type===xn||w.type===Vi)&&(w.format=Tt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),U){D.__webglFramebuffer=[];for(let oe=0;oe<6;oe++)D.__webglFramebuffer[oe]=i.createFramebuffer()}else if(D.__webglFramebuffer=i.createFramebuffer(),G)if(r.drawBuffers){const oe=M.texture;for(let I=0,le=oe.length;I<le;I++){const Y=n.get(oe[I]);Y.__webglTexture===void 0&&(Y.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(Q)if(a){D.__webglMultisampledFramebuffer=i.createFramebuffer(),D.__webglColorRenderbuffer=i.createRenderbuffer(),i.bindRenderbuffer(36161,D.__webglColorRenderbuffer);const oe=s.convert(w.format),I=s.convert(w.type),le=S(w.internalFormat,oe,I,w.encoding),Y=Le(M);i.renderbufferStorageMultisample(36161,Y,le,M.width,M.height),t.bindFramebuffer(36160,D.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064,36161,D.__webglColorRenderbuffer),i.bindRenderbuffer(36161,null),M.depthBuffer&&(D.__webglDepthRenderbuffer=i.createRenderbuffer(),ve(D.__webglDepthRenderbuffer,M,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(U){t.bindTexture(34067,O.__webglTexture),we(34067,w,se);for(let oe=0;oe<6;oe++)ce(D.__webglFramebuffer[oe],M,w,36064,34069+oe);_(w,se)&&v(34067,w,M.width,M.height),t.unbindTexture()}else if(G){const oe=M.texture;for(let I=0,le=oe.length;I<le;I++){const Y=oe[I],fe=n.get(Y);t.bindTexture(3553,fe.__webglTexture),we(3553,Y,se),ce(D.__webglFramebuffer,M,Y,36064+I,3553),_(Y,se)&&v(3553,Y,M.width,M.height)}t.unbindTexture()}else{let oe=3553;te&&(a?oe=w.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(oe,O.__webglTexture),we(oe,w,se),ce(D.__webglFramebuffer,M,w,36064,oe),_(w,se)&&v(oe,w,M.width,M.height,M.depth),t.unbindTexture()}M.depthBuffer&&be(M)}function ge(M){const w=m(M)||a,D=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let O=0,U=D.length;O<U;O++){const G=D[O];if(_(G,w)){const Q=M.isWebGLCubeRenderTarget?34067:3553,te=n.get(G).__webglTexture;t.bindTexture(Q,te),v(Q,G,M.width,M.height),t.unbindTexture()}}}function ye(M){if(M.isWebGLMultisampleRenderTarget)if(a){const w=M.width,D=M.height;let O=16384;M.depthBuffer&&(O|=256),M.stencilBuffer&&(O|=1024);const U=n.get(M);t.bindFramebuffer(36008,U.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,U.__webglFramebuffer),i.blitFramebuffer(0,0,w,D,0,0,w,D,O,9728),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,U.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Le(M){return a&&M.isWebGLMultisampleRenderTarget?Math.min(h,M.samples):0}function K(M){const w=o.render.frame;f.get(M)!==w&&(f.set(M,w),M.update())}let E=!1,C=!1;function N(M,w){M&&M.isWebGLRenderTarget&&(E===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),E=!0),M=M.texture),W(M,w)}function z(M,w){M&&M.isWebGLCubeRenderTarget&&(C===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),C=!0),M=M.texture),q(M,w)}this.allocateTextureUnit=k,this.resetTextureUnits=ee,this.setTexture2D=W,this.setTexture2DArray=J,this.setTexture3D=V,this.setTextureCube=q,this.setupRenderTarget=Ee,this.updateRenderTargetMipmap=ge,this.updateMultisampleRenderTarget=ye,this.safeSetTexture2D=N,this.safeSetTextureCube=z}function r0(i,e,t){const n=t.isWebGL2;function r(s){let o;if(s===Nn)return 5121;if(s===Nm)return 32819;if(s===Bm)return 32820;if(s===zm)return 33635;if(s===Im)return 5120;if(s===Dm)return 5122;if(s===Zs)return 5123;if(s===Fm)return 5124;if(s===Os)return 5125;if(s===xn)return 5126;if(s===Vi)return n?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(s===Om)return 6406;if(s===Wi)return 6407;if(s===Tt)return 6408;if(s===Um)return 6409;if(s===Hm)return 6410;if(s===qi)return 6402;if(s===Jr)return 34041;if(s===km)return 6403;if(s===Vm)return 36244;if(s===Wm)return 33319;if(s===qm)return 33320;if(s===Xm)return 36248;if(s===Ym)return 36249;if(s===Vc||s===Wc||s===qc||s===Xc)if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(s===Vc)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Wc)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===qc)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Xc)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Yc||s===$c||s===Jc||s===jc)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(s===Yc)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===$c)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Jc)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===jc)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===$m)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((s===Zc||s===Kc)&&(o=e.get("WEBGL_compressed_texture_etc"),o!==null)){if(s===Zc)return o.COMPRESSED_RGB8_ETC2;if(s===Kc)return o.COMPRESSED_RGBA8_ETC2_EAC}if(s===Jm||s===jm||s===Zm||s===Km||s===Qm||s===eg||s===tg||s===ng||s===ig||s===rg||s===sg||s===og||s===ag||s===lg||s===ug||s===hg||s===fg||s===dg||s===pg||s===mg||s===gg||s===yg||s===xg||s===vg||s===_g||s===wg||s===bg||s===Mg)return o=e.get("WEBGL_compressed_texture_astc"),o!==null?s:null;if(s===cg)return o=e.get("EXT_texture_compression_bptc"),o!==null?s:null;if(s===Gr)return n?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:r}}class Xu extends vt{constructor(e=[]){super(),this.cameras=e}}Xu.prototype.isArrayCamera=!0;class Hi extends ze{constructor(){super(),this.type="Group"}}Hi.prototype.isGroup=!0;const aE={type:"move"};class hc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Hi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Hi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new A,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new A),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Hi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new A,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new A),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(r=t.getPose(e.targetRaySpace,n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(aE))),c&&e.hand){o=!0;for(const y of e.hand.values()){const x=t.getJointPose(y,n);if(c.joints[y.jointName]===void 0){const g=new Hi;g.matrixAutoUpdate=!1,g.visible=!1,c.joints[y.jointName]=g,c.add(g)}const m=c.joints[y.jointName];x!==null&&(m.matrix.fromArray(x.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.jointRadius=x.radius),m.visible=x!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],f=u.position.distanceTo(h.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}}class lE extends gi{constructor(e,t){super();const n=this,r=e.state;let s=null,o=1,a=null,l="local-floor",c=null,u=null,h=null,f=null,d=null,p=!1,y=null,x=null,m=null,g=null,_=null,v=null;const S=[],T=new Map,b=new vt;b.layers.enable(1),b.viewport=new Ye;const R=new vt;R.layers.enable(2),R.viewport=new Ye;const H=[b,R],F=new Xu;F.layers.enable(1),F.layers.enable(2);let P=null,ee=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ae){let ce=S[ae];return ce===void 0&&(ce=new hc,S[ae]=ce),ce.getTargetRaySpace()},this.getControllerGrip=function(ae){let ce=S[ae];return ce===void 0&&(ce=new hc,S[ae]=ce),ce.getGripSpace()},this.getHand=function(ae){let ce=S[ae];return ce===void 0&&(ce=new hc,S[ae]=ce),ce.getHandSpace()};function k(ae){const ce=T.get(ae.inputSource);ce&&ce.dispatchEvent({type:ae.type,data:ae.inputSource})}function W(){T.forEach(function(ae,ce){ae.disconnect(ce)}),T.clear(),P=null,ee=null,r.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),h&&t.deleteFramebuffer(h),y&&t.deleteFramebuffer(y),x&&t.deleteRenderbuffer(x),m&&t.deleteRenderbuffer(m),h=null,y=null,x=null,m=null,d=null,f=null,u=null,s=null,Me.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ae){o=ae,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ae){l=ae,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(ae){if(s=ae,s!==null){s.addEventListener("select",k),s.addEventListener("selectstart",k),s.addEventListener("selectend",k),s.addEventListener("squeeze",k),s.addEventListener("squeezestart",k),s.addEventListener("squeezeend",k),s.addEventListener("end",W),s.addEventListener("inputsourceschange",J);const ce=t.getContextAttributes();if(ce.xrCompatible!==!0&&await t.makeXRCompatible(),s.renderState.layers===void 0){const ve={antialias:ce.antialias,alpha:ce.alpha,depth:ce.depth,stencil:ce.stencil,framebufferScaleFactor:o};d=new XRWebGLLayer(s,t,ve),s.updateRenderState({baseLayer:d})}else if(t instanceof WebGLRenderingContext){const ve={antialias:!0,alpha:ce.alpha,depth:ce.depth,stencil:ce.stencil,framebufferScaleFactor:o};d=new XRWebGLLayer(s,t,ve),s.updateRenderState({layers:[d]})}else{p=ce.antialias;let ve=null;ce.depth&&(v=256,ce.stencil&&(v|=1024),_=ce.stencil?33306:36096,ve=ce.stencil?35056:33190);const Z={colorFormat:ce.alpha?32856:32849,depthFormat:ve,scaleFactor:o};u=new XRWebGLBinding(s,t),f=u.createProjectionLayer(Z),h=t.createFramebuffer(),s.updateRenderState({layers:[f]}),p&&(y=t.createFramebuffer(),x=t.createRenderbuffer(),t.bindRenderbuffer(36161,x),t.renderbufferStorageMultisample(36161,4,32856,f.textureWidth,f.textureHeight),r.bindFramebuffer(36160,y),t.framebufferRenderbuffer(36160,36064,36161,x),t.bindRenderbuffer(36161,null),ve!==null&&(m=t.createRenderbuffer(),t.bindRenderbuffer(36161,m),t.renderbufferStorageMultisample(36161,4,ve,f.textureWidth,f.textureHeight),t.framebufferRenderbuffer(36160,_,36161,m),t.bindRenderbuffer(36161,null)),r.bindFramebuffer(36160,null))}a=await s.requestReferenceSpace(l),Me.setContext(s),Me.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function J(ae){const ce=s.inputSources;for(let ve=0;ve<S.length;ve++)T.set(ce[ve],S[ve]);for(let ve=0;ve<ae.removed.length;ve++){const Z=ae.removed[ve],be=T.get(Z);be&&(be.dispatchEvent({type:"disconnected",data:Z}),T.delete(Z))}for(let ve=0;ve<ae.added.length;ve++){const Z=ae.added[ve],be=T.get(Z);be&&be.dispatchEvent({type:"connected",data:Z})}}const V=new A,q=new A;function ie(ae,ce,ve){V.setFromMatrixPosition(ce.matrixWorld),q.setFromMatrixPosition(ve.matrixWorld);const Z=V.distanceTo(q),be=ce.projectionMatrix.elements,Ee=ve.projectionMatrix.elements,ge=be[14]/(be[10]-1),ye=be[14]/(be[10]+1),Le=(be[9]+1)/be[5],K=(be[9]-1)/be[5],E=(be[8]-1)/be[0],C=(Ee[8]+1)/Ee[0],N=ge*E,z=ge*C,M=Z/(-E+C),w=M*-E;ce.matrixWorld.decompose(ae.position,ae.quaternion,ae.scale),ae.translateX(w),ae.translateZ(M),ae.matrixWorld.compose(ae.position,ae.quaternion,ae.scale),ae.matrixWorldInverse.copy(ae.matrixWorld).invert();const D=ge+M,O=ye+M,U=N-w,G=z+(Z-w),Q=Le*ye/O*D,te=K*ye/O*D;ae.projectionMatrix.makePerspective(U,G,Q,te,D,O)}function me(ae,ce){ce===null?ae.matrixWorld.copy(ae.matrix):ae.matrixWorld.multiplyMatrices(ce.matrixWorld,ae.matrix),ae.matrixWorldInverse.copy(ae.matrixWorld).invert()}this.updateCamera=function(ae){if(s===null)return;F.near=R.near=b.near=ae.near,F.far=R.far=b.far=ae.far,(P!==F.near||ee!==F.far)&&(s.updateRenderState({depthNear:F.near,depthFar:F.far}),P=F.near,ee=F.far);const ce=ae.parent,ve=F.cameras;me(F,ce);for(let be=0;be<ve.length;be++)me(ve[be],ce);F.matrixWorld.decompose(F.position,F.quaternion,F.scale),ae.position.copy(F.position),ae.quaternion.copy(F.quaternion),ae.scale.copy(F.scale),ae.matrix.copy(F.matrix),ae.matrixWorld.copy(F.matrixWorld);const Z=ae.children;for(let be=0,Ee=Z.length;be<Ee;be++)Z[be].updateMatrixWorld(!0);ve.length===2?ie(F,b,R):F.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return F},this.getFoveation=function(){if(f!==null)return f.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(ae){f!==null&&(f.fixedFoveation=ae),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=ae)};let we=null;function ue(ae,ce){if(c=ce.getViewerPose(a),g=ce,c!==null){const Z=c.views;d!==null&&r.bindXRFramebuffer(d.framebuffer);let be=!1;Z.length!==F.cameras.length&&(F.cameras.length=0,be=!0);for(let Ee=0;Ee<Z.length;Ee++){const ge=Z[Ee];let ye=null;if(d!==null)ye=d.getViewport(ge);else{const K=u.getViewSubImage(f,ge);r.bindXRFramebuffer(h),K.depthStencilTexture!==void 0&&t.framebufferTexture2D(36160,_,3553,K.depthStencilTexture,0),t.framebufferTexture2D(36160,36064,3553,K.colorTexture,0),ye=K.viewport}const Le=H[Ee];Le.matrix.fromArray(ge.transform.matrix),Le.projectionMatrix.fromArray(ge.projectionMatrix),Le.viewport.set(ye.x,ye.y,ye.width,ye.height),Ee===0&&F.matrix.copy(Le.matrix),be===!0&&F.cameras.push(Le)}p&&(r.bindXRFramebuffer(y),v!==null&&t.clear(v))}const ve=s.inputSources;for(let Z=0;Z<S.length;Z++){const be=S[Z],Ee=ve[Z];be.update(Ee,ce,a)}if(we&&we(ae,ce),p){const Z=f.textureWidth,be=f.textureHeight;r.bindFramebuffer(36008,y),r.bindFramebuffer(36009,h),t.invalidateFramebuffer(36008,[_]),t.invalidateFramebuffer(36009,[_]),t.blitFramebuffer(0,0,Z,be,0,0,Z,be,16384,9728),t.invalidateFramebuffer(36008,[36064]),r.bindFramebuffer(36008,null),r.bindFramebuffer(36009,null),r.bindFramebuffer(36160,y)}g=null}const Me=new Xg;Me.setAnimationLoop(ue),this.setAnimationLoop=function(ae){we=ae},this.dispose=function(){}}}function cE(i){function e(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function t(m,g,_,v,S){g.isMeshBasicMaterial?n(m,g):g.isMeshLambertMaterial?(n(m,g),l(m,g)):g.isMeshToonMaterial?(n(m,g),u(m,g)):g.isMeshPhongMaterial?(n(m,g),c(m,g)):g.isMeshStandardMaterial?(n(m,g),g.isMeshPhysicalMaterial?f(m,g,S):h(m,g)):g.isMeshMatcapMaterial?(n(m,g),d(m,g)):g.isMeshDepthMaterial?(n(m,g),p(m,g)):g.isMeshDistanceMaterial?(n(m,g),y(m,g)):g.isMeshNormalMaterial?(n(m,g),x(m,g)):g.isLineBasicMaterial?(r(m,g),g.isLineDashedMaterial&&s(m,g)):g.isPointsMaterial?o(m,g,_,v):g.isSpriteMaterial?a(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function n(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const _=i.get(g).envMap;if(_){m.envMap.value=_,m.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio;const T=i.get(_).__maxMipLevel;T!==void 0&&(m.maxMipLevel.value=T)}g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let v;g.map?v=g.map:g.specularMap?v=g.specularMap:g.displacementMap?v=g.displacementMap:g.normalMap?v=g.normalMap:g.bumpMap?v=g.bumpMap:g.roughnessMap?v=g.roughnessMap:g.metalnessMap?v=g.metalnessMap:g.alphaMap?v=g.alphaMap:g.emissiveMap?v=g.emissiveMap:g.clearcoatMap?v=g.clearcoatMap:g.clearcoatNormalMap?v=g.clearcoatNormalMap:g.clearcoatRoughnessMap?v=g.clearcoatRoughnessMap:g.specularIntensityMap?v=g.specularIntensityMap:g.specularColorMap?v=g.specularColorMap:g.transmissionMap?v=g.transmissionMap:g.thicknessMap?v=g.thicknessMap:g.sheenColorMap?v=g.sheenColorMap:g.sheenRoughnessMap&&(v=g.sheenRoughnessMap),v!==void 0&&(v.isWebGLRenderTarget&&(v=v.texture),v.matrixAutoUpdate===!0&&v.updateMatrix(),m.uvTransform.value.copy(v.matrix));let S;g.aoMap?S=g.aoMap:g.lightMap&&(S=g.lightMap),S!==void 0&&(S.isWebGLRenderTarget&&(S=S.texture),S.matrixAutoUpdate===!0&&S.updateMatrix(),m.uv2Transform.value.copy(S.matrix))}function r(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function s(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function o(m,g,_,v){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*_,m.scale.value=v*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let S;g.map?S=g.map:g.alphaMap&&(S=g.alphaMap),S!==void 0&&(S.matrixAutoUpdate===!0&&S.updateMatrix(),m.uvTransform.value.copy(S.matrix))}function a(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let _;g.map?_=g.map:g.alphaMap&&(_=g.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),m.uvTransform.value.copy(_.matrix))}function l(m,g){g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap)}function c(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===lt&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===lt&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===lt&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===lt&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function h(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===lt&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===lt&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),i.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,_){h(m,g),m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===lt&&m.clearcoatNormalScale.value.negate())),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=_.texture,m.transmissionSamplerSize.value.set(_.width,_.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}function d(m,g){g.matcap&&(m.matcap.value=g.matcap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===lt&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===lt&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function p(m,g){g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}function y(m,g){g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}function x(m,g){g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===lt&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===lt&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:t}}function uE(){const i=rl("canvas");return i.style.display="block",i}function $e(i={}){const e=i.canvas!==void 0?i.canvas:uE(),t=i.context!==void 0?i.context:null,n=i.alpha!==void 0?i.alpha:!1,r=i.depth!==void 0?i.depth:!0,s=i.stencil!==void 0?i.stencil:!0,o=i.antialias!==void 0?i.antialias:!1,a=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,l=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,c=i.powerPreference!==void 0?i.powerPreference:"default",u=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let h=null,f=null;const d=[],p=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Ct,this.physicallyCorrectLights=!1,this.toneMapping=ii,this.toneMappingExposure=1;const y=this;let x=!1,m=0,g=0,_=null,v=-1,S=null;const T=new Ye,b=new Ye;let R=null,H=e.width,F=e.height,P=1,ee=null,k=null;const W=new Ye(0,0,H,F),J=new Ye(0,0,H,F);let V=!1;const q=[],ie=new yo;let me=!1,we=!1,ue=null;const Me=new _e,ae=new A,ce={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ve(){return _===null?P:1}let Z=t;function be(L,X){for(let j=0;j<L.length;j++){const $=L[j],re=e.getContext($,X);if(re!==null)return re}return null}try{const L={alpha:n,depth:r,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(e.addEventListener("webglcontextlost",pt,!1),e.addEventListener("webglcontextrestored",et,!1),Z===null){const X=["webgl2","webgl","experimental-webgl"];if(y.isWebGL1Renderer===!0&&X.shift(),Z=be(X,L),Z===null)throw be(X)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Z.getShaderPrecisionFormat===void 0&&(Z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let Ee,ge,ye,Le,K,E,C,N,z,M,w,D,O,U,G,Q,te,se,oe,I,le,Y,fe;function pe(){Ee=new F1(Z),ge=new A1(Z,Ee,i),Ee.init(ge),Y=new r0(Z,Ee,ge),ye=new sE(Z,Ee,ge),q[0]=1029,Le=new z1,K=new $S,E=new oE(Z,Ee,ye,K,ge,Y,Le),C=new L1(y),N=new D1(y),z=new Zw(Z,ge),fe=new E1(Z,Ee,z,ge),M=new N1(Z,z,Le,fe),w=new G1(Z,M,z,Le),oe=new H1(Z,ge,E),Q=new C1(K),D=new YS(y,C,N,Ee,ge,fe,Q),O=new cE(K),U=new jS(K),G=new nE(Ee,ge),se=new S1(y,C,ye,w,a),te=new i0(y,w,ge),I=new T1(Z,Ee,Le,ge),le=new B1(Z,Ee,Le,ge),Le.programs=D.programs,y.capabilities=ge,y.extensions=Ee,y.properties=K,y.renderLists=U,y.shadowMap=te,y.state=ye,y.info=Le}pe();const De=new lE(y,Z);this.xr=De,this.getContext=function(){return Z},this.getContextAttributes=function(){return Z.getContextAttributes()},this.forceContextLoss=function(){const L=Ee.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=Ee.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return P},this.setPixelRatio=function(L){L!==void 0&&(P=L,this.setSize(H,F,!1))},this.getSize=function(L){return L.set(H,F)},this.setSize=function(L,X,j){if(De.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=L,F=X,e.width=Math.floor(L*P),e.height=Math.floor(X*P),j!==!1&&(e.style.width=L+"px",e.style.height=X+"px"),this.setViewport(0,0,L,X)},this.getDrawingBufferSize=function(L){return L.set(H*P,F*P).floor()},this.setDrawingBufferSize=function(L,X,j){H=L,F=X,P=j,e.width=Math.floor(L*j),e.height=Math.floor(X*j),this.setViewport(0,0,L,X)},this.getCurrentViewport=function(L){return L.copy(T)},this.getViewport=function(L){return L.copy(W)},this.setViewport=function(L,X,j,$){L.isVector4?W.set(L.x,L.y,L.z,L.w):W.set(L,X,j,$),ye.viewport(T.copy(W).multiplyScalar(P).floor())},this.getScissor=function(L){return L.copy(J)},this.setScissor=function(L,X,j,$){L.isVector4?J.set(L.x,L.y,L.z,L.w):J.set(L,X,j,$),ye.scissor(b.copy(J).multiplyScalar(P).floor())},this.getScissorTest=function(){return V},this.setScissorTest=function(L){ye.setScissorTest(V=L)},this.setOpaqueSort=function(L){ee=L},this.setTransparentSort=function(L){k=L},this.getClearColor=function(L){return L.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(L,X,j){let $=0;(L===void 0||L)&&($|=16384),(X===void 0||X)&&($|=256),(j===void 0||j)&&($|=1024),Z.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",pt,!1),e.removeEventListener("webglcontextrestored",et,!1),U.dispose(),G.dispose(),K.dispose(),C.dispose(),N.dispose(),w.dispose(),fe.dispose(),De.dispose(),De.removeEventListener("sessionstart",Ah),De.removeEventListener("sessionend",Ch),ue&&(ue.dispose(),ue=null),vi.stop()};function pt(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function et(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const L=Le.autoReset,X=te.enabled,j=te.autoUpdate,$=te.needsUpdate,re=te.type;pe(),Le.autoReset=L,te.enabled=X,te.autoUpdate=j,te.needsUpdate=$,te.type=re}function tn(L){const X=L.target;X.removeEventListener("dispose",tn),Oe(X)}function Oe(L){ht(L),K.remove(L)}function ht(L){const X=K.get(L).programs;X!==void 0&&X.forEach(function(j){D.releaseProgram(j)})}this.renderBufferDirect=function(L,X,j,$,re,Pe){X===null&&(X=ce);const Ce=re.isMesh&&re.matrixWorld.determinant()<0,Ae=j0(L,X,j,$,re);ye.setMaterial($,Ce);let Be=j.index;const Xe=j.attributes.position;if(Be===null){if(Xe===void 0||Xe.count===0)return}else if(Be.count===0)return;let Ue=1;$.wireframe===!0&&(Be=M.getWireframeAttribute(j),Ue=2),fe.setup(re,$,Ae,j,Be);let Ve,tt=I;Be!==null&&(Ve=z.get(Be),tt=le,tt.setIndex(Ve));const _i=Be!==null?Be.count:Xe.count,We=j.drawRange.start*Ue,gs=j.drawRange.count*Ue,je=Pe!==null?Pe.start*Ue:0,wi=Pe!==null?Pe.count*Ue:1/0,bi=Math.max(We,je),Mi=Math.min(_i,We+gs,je+wi)-1,kn=Math.max(0,Mi-bi+1);if(kn!==0){if(re.isMesh)$.wireframe===!0?(ye.setLineWidth($.wireframeLinewidth*ve()),tt.setMode(1)):tt.setMode(4);else if(re.isLine){let nt=$.linewidth;nt===void 0&&(nt=1),ye.setLineWidth(nt*ve()),re.isLineSegments?tt.setMode(1):re.isLineLoop?tt.setMode(2):tt.setMode(3)}else re.isPoints?tt.setMode(0):re.isSprite&&tt.setMode(4);if(re.isInstancedMesh)tt.renderInstances(bi,kn,re.count);else if(j.isInstancedBufferGeometry){const nt=Math.min(j.instanceCount,j._maxInstanceCount);tt.renderInstances(bi,kn,nt)}else tt.render(bi,kn)}},this.compile=function(L,X){f=G.get(L),f.init(),p.push(f),L.traverseVisible(function(j){j.isLight&&j.layers.test(X.layers)&&(f.pushLight(j),j.castShadow&&f.pushShadow(j))}),f.setupLights(y.physicallyCorrectLights),L.traverse(function(j){const $=j.material;if($)if(Array.isArray($))for(let re=0;re<$.length;re++){const Pe=$[re];El(Pe,L,j)}else El($,L,j)}),p.pop(),f=null};let zt=null;function Y0(L){zt&&zt(L)}function Ah(){vi.stop()}function Ch(){vi.start()}const vi=new Xg;vi.setAnimationLoop(Y0),typeof window<"u"&&vi.setContext(window),this.setAnimationLoop=function(L){zt=L,De.setAnimationLoop(L),L===null?vi.stop():vi.start()},De.addEventListener("sessionstart",Ah),De.addEventListener("sessionend",Ch),this.render=function(L,X){if(X!==void 0&&X.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;L.autoUpdate===!0&&L.updateMatrixWorld(),X.parent===null&&X.updateMatrixWorld(),De.enabled===!0&&De.isPresenting===!0&&(De.cameraAutoUpdate===!0&&De.updateCamera(X),X=De.getCamera()),L.isScene===!0&&L.onBeforeRender(y,L,X,_),f=G.get(L,p.length),f.init(),p.push(f),Me.multiplyMatrices(X.projectionMatrix,X.matrixWorldInverse),ie.setFromProjectionMatrix(Me),we=this.localClippingEnabled,me=Q.init(this.clippingPlanes,we,X),h=U.get(L,d.length),h.init(),d.push(h),Lh(L,X,0,y.sortObjects),h.finish(),y.sortObjects===!0&&h.sort(ee,k),me===!0&&Q.beginShadows();const j=f.state.shadowsArray;if(te.render(j,L,X),me===!0&&Q.endShadows(),this.info.autoReset===!0&&this.info.reset(),se.render(h,L),f.setupLights(y.physicallyCorrectLights),X.isArrayCamera){const $=X.cameras;for(let re=0,Pe=$.length;re<Pe;re++){const Ce=$[re];Rh(h,L,Ce,Ce.viewport)}}else Rh(h,L,X);_!==null&&(E.updateMultisampleRenderTarget(_),E.updateRenderTargetMipmap(_)),L.isScene===!0&&L.onAfterRender(y,L,X),ye.buffers.depth.setTest(!0),ye.buffers.depth.setMask(!0),ye.buffers.color.setMask(!0),ye.setPolygonOffset(!1),fe.resetDefaultState(),v=-1,S=null,p.pop(),p.length>0?f=p[p.length-1]:f=null,d.pop(),d.length>0?h=d[d.length-1]:h=null};function Lh(L,X,j,$){if(L.visible===!1)return;if(L.layers.test(X.layers)){if(L.isGroup)j=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(X);else if(L.isLight)f.pushLight(L),L.castShadow&&f.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||ie.intersectsSprite(L)){$&&ae.setFromMatrixPosition(L.matrixWorld).applyMatrix4(Me);const Ce=w.update(L),Ae=L.material;Ae.visible&&h.push(L,Ce,Ae,j,ae.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(L.isSkinnedMesh&&L.skeleton.frame!==Le.render.frame&&(L.skeleton.update(),L.skeleton.frame=Le.render.frame),!L.frustumCulled||ie.intersectsObject(L))){$&&ae.setFromMatrixPosition(L.matrixWorld).applyMatrix4(Me);const Ce=w.update(L),Ae=L.material;if(Array.isArray(Ae)){const Be=Ce.groups;for(let Xe=0,Ue=Be.length;Xe<Ue;Xe++){const Ve=Be[Xe],tt=Ae[Ve.materialIndex];tt&&tt.visible&&h.push(L,Ce,tt,j,ae.z,Ve)}}else Ae.visible&&h.push(L,Ce,Ae,j,ae.z,null)}}const Pe=L.children;for(let Ce=0,Ae=Pe.length;Ce<Ae;Ce++)Lh(Pe[Ce],X,j,$)}function Rh(L,X,j,$){const re=L.opaque,Pe=L.transmissive,Ce=L.transparent;f.setupLightsView(j),Pe.length>0&&$0(re,X,j),$&&ye.viewport(T.copy($)),re.length>0&&Eo(re,X,j),Pe.length>0&&Eo(Pe,X,j),Ce.length>0&&Eo(Ce,X,j)}function $0(L,X,j){if(ue===null){const Ce=o===!0&&ge.isWebGL2===!0?Gu:un;ue=new Ce(1024,1024,{generateMipmaps:!0,type:Y.convert(Vi)!==null?Vi:Nn,minFilter:ar,magFilter:ft,wrapS:Et,wrapT:Et})}const $=y.getRenderTarget();y.setRenderTarget(ue),y.clear();const re=y.toneMapping;y.toneMapping=ii,Eo(L,X,j),y.toneMapping=re,E.updateMultisampleRenderTarget(ue),E.updateRenderTargetMipmap(ue),y.setRenderTarget($)}function Eo(L,X,j){const $=X.isScene===!0?X.overrideMaterial:null;for(let re=0,Pe=L.length;re<Pe;re++){const Ce=L[re],Ae=Ce.object,Be=Ce.geometry,Xe=$===null?Ce.material:$,Ue=Ce.group;Ae.layers.test(j.layers)&&J0(Ae,X,j,Be,Xe,Ue)}}function J0(L,X,j,$,re,Pe){L.onBeforeRender(y,X,j,$,re,Pe),L.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),re.onBeforeRender(y,X,j,$,L,Pe),re.transparent===!0&&re.side===Zi?(re.side=lt,re.needsUpdate=!0,y.renderBufferDirect(j,X,$,re,L,Pe),re.side=ji,re.needsUpdate=!0,y.renderBufferDirect(j,X,$,re,L,Pe),re.side=Zi):y.renderBufferDirect(j,X,$,re,L,Pe),L.onAfterRender(y,X,j,$,re,Pe)}function El(L,X,j){X.isScene!==!0&&(X=ce);const $=K.get(L),re=f.state.lights,Pe=f.state.shadowsArray,Ce=re.state.version,Ae=D.getParameters(L,re.state,Pe,X,j),Be=D.getProgramCacheKey(Ae);let Xe=$.programs;$.environment=L.isMeshStandardMaterial?X.environment:null,$.fog=X.fog,$.envMap=(L.isMeshStandardMaterial?N:C).get(L.envMap||$.environment),Xe===void 0&&(L.addEventListener("dispose",tn),Xe=new Map,$.programs=Xe);let Ue=Xe.get(Be);if(Ue!==void 0){if($.currentProgram===Ue&&$.lightsStateVersion===Ce)return Ph(L,Ae),Ue}else Ae.uniforms=D.getUniforms(L),L.onBuild(j,Ae,y),L.onBeforeCompile(Ae,y),Ue=D.acquireProgram(Ae,Be),Xe.set(Be,Ue),$.uniforms=Ae.uniforms;const Ve=$.uniforms;(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(Ve.clippingPlanes=Q.uniform),Ph(L,Ae),$.needsLights=K0(L),$.lightsStateVersion=Ce,$.needsLights&&(Ve.ambientLightColor.value=re.state.ambient,Ve.lightProbe.value=re.state.probe,Ve.directionalLights.value=re.state.directional,Ve.directionalLightShadows.value=re.state.directionalShadow,Ve.spotLights.value=re.state.spot,Ve.spotLightShadows.value=re.state.spotShadow,Ve.rectAreaLights.value=re.state.rectArea,Ve.ltc_1.value=re.state.rectAreaLTC1,Ve.ltc_2.value=re.state.rectAreaLTC2,Ve.pointLights.value=re.state.point,Ve.pointLightShadows.value=re.state.pointShadow,Ve.hemisphereLights.value=re.state.hemi,Ve.directionalShadowMap.value=re.state.directionalShadowMap,Ve.directionalShadowMatrix.value=re.state.directionalShadowMatrix,Ve.spotShadowMap.value=re.state.spotShadowMap,Ve.spotShadowMatrix.value=re.state.spotShadowMatrix,Ve.pointShadowMap.value=re.state.pointShadowMap,Ve.pointShadowMatrix.value=re.state.pointShadowMatrix);const tt=Ue.getUniforms(),_i=si.seqWithValue(tt.seq,Ve);return $.currentProgram=Ue,$.uniformsList=_i,Ue}function Ph(L,X){const j=K.get(L);j.outputEncoding=X.outputEncoding,j.instancing=X.instancing,j.skinning=X.skinning,j.morphTargets=X.morphTargets,j.morphNormals=X.morphNormals,j.morphTargetsCount=X.morphTargetsCount,j.numClippingPlanes=X.numClippingPlanes,j.numIntersection=X.numClipIntersection,j.vertexAlphas=X.vertexAlphas,j.vertexTangents=X.vertexTangents}function j0(L,X,j,$,re){X.isScene!==!0&&(X=ce),E.resetTextureUnits();const Pe=X.fog,Ce=$.isMeshStandardMaterial?X.environment:null,Ae=_===null?y.outputEncoding:_.texture.encoding,Be=($.isMeshStandardMaterial?N:C).get($.envMap||Ce),Xe=$.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,Ue=!!$.normalMap&&!!j.attributes.tangent,Ve=!!j.morphAttributes.position,tt=!!j.morphAttributes.normal,_i=j.morphAttributes.position?j.morphAttributes.position.length:0,We=K.get($),gs=f.state.lights;if(me===!0&&(we===!0||L!==S)){const nn=L===S&&$.id===v;Q.setState($,L,nn)}let je=!1;$.version===We.__version?(We.needsLights&&We.lightsStateVersion!==gs.state.version||We.outputEncoding!==Ae||re.isInstancedMesh&&We.instancing===!1||!re.isInstancedMesh&&We.instancing===!0||re.isSkinnedMesh&&We.skinning===!1||!re.isSkinnedMesh&&We.skinning===!0||We.envMap!==Be||$.fog&&We.fog!==Pe||We.numClippingPlanes!==void 0&&(We.numClippingPlanes!==Q.numPlanes||We.numIntersection!==Q.numIntersection)||We.vertexAlphas!==Xe||We.vertexTangents!==Ue||We.morphTargets!==Ve||We.morphNormals!==tt||ge.isWebGL2===!0&&We.morphTargetsCount!==_i)&&(je=!0):(je=!0,We.__version=$.version);let wi=We.currentProgram;je===!0&&(wi=El($,X,re));let bi=!1,Mi=!1,kn=!1;const nt=wi.getUniforms(),ys=We.uniforms;if(ye.useProgram(wi.program)&&(bi=!0,Mi=!0,kn=!0),$.id!==v&&(v=$.id,Mi=!0),bi||S!==L){if(nt.setValue(Z,"projectionMatrix",L.projectionMatrix),ge.logarithmicDepthBuffer&&nt.setValue(Z,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),S!==L&&(S=L,Mi=!0,kn=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){const nn=nt.map.cameraPosition;nn!==void 0&&nn.setValue(Z,ae.setFromMatrixPosition(L.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&nt.setValue(Z,"isOrthographic",L.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.isShadowMaterial||re.isSkinnedMesh)&&nt.setValue(Z,"viewMatrix",L.matrixWorldInverse)}if(re.isSkinnedMesh){nt.setOptional(Z,re,"bindMatrix"),nt.setOptional(Z,re,"bindMatrixInverse");const nn=re.skeleton;nn&&(ge.floatVertexTextures?(nn.boneTexture===null&&nn.computeBoneTexture(),nt.setValue(Z,"boneTexture",nn.boneTexture,E),nt.setValue(Z,"boneTextureSize",nn.boneTextureSize)):nt.setOptional(Z,nn,"boneMatrices"))}return j&&(j.morphAttributes.position!==void 0||j.morphAttributes.normal!==void 0)&&oe.update(re,j,$,wi),(Mi||We.receiveShadow!==re.receiveShadow)&&(We.receiveShadow=re.receiveShadow,nt.setValue(Z,"receiveShadow",re.receiveShadow)),Mi&&(nt.setValue(Z,"toneMappingExposure",y.toneMappingExposure),We.needsLights&&Z0(ys,kn),Pe&&$.fog&&O.refreshFogUniforms(ys,Pe),O.refreshMaterialUniforms(ys,$,P,F,ue),si.upload(Z,We.uniformsList,ys,E)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(si.upload(Z,We.uniformsList,ys,E),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&nt.setValue(Z,"center",re.center),nt.setValue(Z,"modelViewMatrix",re.modelViewMatrix),nt.setValue(Z,"normalMatrix",re.normalMatrix),nt.setValue(Z,"modelMatrix",re.matrixWorld),wi}function Z0(L,X){L.ambientLightColor.needsUpdate=X,L.lightProbe.needsUpdate=X,L.directionalLights.needsUpdate=X,L.directionalLightShadows.needsUpdate=X,L.pointLights.needsUpdate=X,L.pointLightShadows.needsUpdate=X,L.spotLights.needsUpdate=X,L.spotLightShadows.needsUpdate=X,L.rectAreaLights.needsUpdate=X,L.hemisphereLights.needsUpdate=X}function K0(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return m},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return _},this.setRenderTarget=function(L,X=0,j=0){_=L,m=X,g=j,L&&K.get(L).__webglFramebuffer===void 0&&E.setupRenderTarget(L);let $=null,re=!1,Pe=!1;if(L){const Ae=L.texture;(Ae.isDataTexture3D||Ae.isDataTexture2DArray)&&(Pe=!0);const Be=K.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?($=Be[X],re=!0):L.isWebGLMultisampleRenderTarget?$=K.get(L).__webglMultisampledFramebuffer:$=Be,T.copy(L.viewport),b.copy(L.scissor),R=L.scissorTest}else T.copy(W).multiplyScalar(P).floor(),b.copy(J).multiplyScalar(P).floor(),R=V;if(ye.bindFramebuffer(36160,$)&&ge.drawBuffers){let Ae=!1;if(L)if(L.isWebGLMultipleRenderTargets){const Be=L.texture;if(q.length!==Be.length||q[0]!==36064){for(let Xe=0,Ue=Be.length;Xe<Ue;Xe++)q[Xe]=36064+Xe;q.length=Be.length,Ae=!0}}else(q.length!==1||q[0]!==36064)&&(q[0]=36064,q.length=1,Ae=!0);else(q.length!==1||q[0]!==1029)&&(q[0]=1029,q.length=1,Ae=!0);Ae&&(ge.isWebGL2?Z.drawBuffers(q):Ee.get("WEBGL_draw_buffers").drawBuffersWEBGL(q))}if(ye.viewport(T),ye.scissor(b),ye.setScissorTest(R),re){const Ae=K.get(L.texture);Z.framebufferTexture2D(36160,36064,34069+X,Ae.__webglTexture,j)}else if(Pe){const Ae=K.get(L.texture),Be=X||0;Z.framebufferTextureLayer(36160,36064,Ae.__webglTexture,j||0,Be)}v=-1},this.readRenderTargetPixels=function(L,X,j,$,re,Pe,Ce){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ae=K.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Ce!==void 0&&(Ae=Ae[Ce]),Ae){ye.bindFramebuffer(36160,Ae);try{const Be=L.texture,Xe=Be.format,Ue=Be.type;if(Xe!==Tt&&Y.convert(Xe)!==Z.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ve=Ue===Vi&&(Ee.has("EXT_color_buffer_half_float")||ge.isWebGL2&&Ee.has("EXT_color_buffer_float"));if(Ue!==Nn&&Y.convert(Ue)!==Z.getParameter(35738)&&!(Ue===xn&&(ge.isWebGL2||Ee.has("OES_texture_float")||Ee.has("WEBGL_color_buffer_float")))&&!Ve){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z.checkFramebufferStatus(36160)===36053?X>=0&&X<=L.width-$&&j>=0&&j<=L.height-re&&Z.readPixels(X,j,$,re,Y.convert(Xe),Y.convert(Ue),Pe):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const Be=_!==null?K.get(_).__webglFramebuffer:null;ye.bindFramebuffer(36160,Be)}}},this.copyFramebufferToTexture=function(L,X,j=0){const $=Math.pow(2,-j),re=Math.floor(X.image.width*$),Pe=Math.floor(X.image.height*$);let Ce=Y.convert(X.format);ge.isWebGL2&&(Ce===6407&&(Ce=32849),Ce===6408&&(Ce=32856)),E.setTexture2D(X,0),Z.copyTexImage2D(3553,j,Ce,L.x,L.y,re,Pe,0),ye.unbindTexture()},this.copyTextureToTexture=function(L,X,j,$=0){const re=X.image.width,Pe=X.image.height,Ce=Y.convert(j.format),Ae=Y.convert(j.type);E.setTexture2D(j,0),Z.pixelStorei(37440,j.flipY),Z.pixelStorei(37441,j.premultiplyAlpha),Z.pixelStorei(3317,j.unpackAlignment),X.isDataTexture?Z.texSubImage2D(3553,$,L.x,L.y,re,Pe,Ce,Ae,X.image.data):X.isCompressedTexture?Z.compressedTexSubImage2D(3553,$,L.x,L.y,X.mipmaps[0].width,X.mipmaps[0].height,Ce,X.mipmaps[0].data):Z.texSubImage2D(3553,$,L.x,L.y,Ce,Ae,X.image),$===0&&j.generateMipmaps&&Z.generateMipmap(3553),ye.unbindTexture()},this.copyTextureToTexture3D=function(L,X,j,$,re=0){if(y.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Pe=L.max.x-L.min.x+1,Ce=L.max.y-L.min.y+1,Ae=L.max.z-L.min.z+1,Be=Y.convert($.format),Xe=Y.convert($.type);let Ue;if($.isDataTexture3D)E.setTexture3D($,0),Ue=32879;else if($.isDataTexture2DArray)E.setTexture2DArray($,0),Ue=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Z.pixelStorei(37440,$.flipY),Z.pixelStorei(37441,$.premultiplyAlpha),Z.pixelStorei(3317,$.unpackAlignment);const Ve=Z.getParameter(3314),tt=Z.getParameter(32878),_i=Z.getParameter(3316),We=Z.getParameter(3315),gs=Z.getParameter(32877),je=j.isCompressedTexture?j.mipmaps[0]:j.image;Z.pixelStorei(3314,je.width),Z.pixelStorei(32878,je.height),Z.pixelStorei(3316,L.min.x),Z.pixelStorei(3315,L.min.y),Z.pixelStorei(32877,L.min.z),j.isDataTexture||j.isDataTexture3D?Z.texSubImage3D(Ue,re,X.x,X.y,X.z,Pe,Ce,Ae,Be,Xe,je.data):j.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Z.compressedTexSubImage3D(Ue,re,X.x,X.y,X.z,Pe,Ce,Ae,Be,je.data)):Z.texSubImage3D(Ue,re,X.x,X.y,X.z,Pe,Ce,Ae,Be,Xe,je),Z.pixelStorei(3314,Ve),Z.pixelStorei(32878,tt),Z.pixelStorei(3316,_i),Z.pixelStorei(3315,We),Z.pixelStorei(32877,gs),re===0&&$.generateMipmaps&&Z.generateMipmap(Ue),ye.unbindTexture()},this.initTexture=function(L){E.setTexture2D(L,0),ye.unbindTexture()},this.resetState=function(){m=0,g=0,_=null,ye.reset(),fe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}$e.prototype.isWebGLRenderer=!0;class s0 extends $e{}s0.prototype.isWebGL1Renderer=!0;class vo{constructor(e,t=25e-5){this.name="",this.color=new de(e),this.density=t}clone(){return new vo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}vo.prototype.isFogExp2=!0;class _o{constructor(e,t=1,n=1e3){this.name="",this.color=new de(e),this.near=t,this.far=n}clone(){return new _o(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}_o.prototype.isFog=!0;class fl extends ze{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}fl.prototype.isScene=!0;class hr{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=jr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=$t()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$t()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=$t()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}hr.prototype.isInterleavedBuffer=!0;const ot=new A;class ci{constructor(e,t,n,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ot.x=this.getX(t),ot.y=this.getY(t),ot.z=this.getZ(t),ot.applyMatrix4(e),this.setXYZ(t,ot.x,ot.y,ot.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ot.x=this.getX(t),ot.y=this.getY(t),ot.z=this.getZ(t),ot.applyNormalMatrix(e),this.setXYZ(t,ot.x,ot.y,ot.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ot.x=this.getX(t),ot.y=this.getY(t),ot.z=this.getZ(t),ot.transformDirection(e),this.setXYZ(t,ot.x,ot.y,ot.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new He(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ci(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}ci.prototype.isInterleavedBufferAttribute=!0;class dl extends wt{constructor(e){super(),this.type="SpriteMaterial",this.color=new de(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}dl.prototype.isSpriteMaterial=!0;let Rr;const Ss=new A,Pr=new A,Ir=new A,Dr=new ne,Es=new ne,o0=new _e,ea=new A,Ts=new A,ta=new A,$f=new ne,fc=new ne,Jf=new ne;class pl extends ze{constructor(e){if(super(),this.type="Sprite",Rr===void 0){Rr=new Te;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new hr(t,5);Rr.setIndex([0,1,2,0,2,3]),Rr.setAttribute("position",new ci(n,3,0,!1)),Rr.setAttribute("uv",new ci(n,2,3,!1))}this.geometry=Rr,this.material=e!==void 0?e:new dl,this.center=new ne(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Pr.setFromMatrixScale(this.matrixWorld),o0.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ir.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Pr.multiplyScalar(-Ir.z);const n=this.material.rotation;let r,s;n!==0&&(s=Math.cos(n),r=Math.sin(n));const o=this.center;na(ea.set(-.5,-.5,0),Ir,o,Pr,r,s),na(Ts.set(.5,-.5,0),Ir,o,Pr,r,s),na(ta.set(.5,.5,0),Ir,o,Pr,r,s),$f.set(0,0),fc.set(1,0),Jf.set(1,1);let a=e.ray.intersectTriangle(ea,Ts,ta,!1,Ss);if(a===null&&(na(Ts.set(-.5,.5,0),Ir,o,Pr,r,s),fc.set(0,1),a=e.ray.intersectTriangle(ea,ta,Ts,!1,Ss),a===null))return;const l=e.ray.origin.distanceTo(Ss);l<e.near||l>e.far||t.push({distance:l,point:Ss.clone(),uv:ct.getUV(Ss,ea,Ts,ta,$f,fc,Jf,new ne),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}pl.prototype.isSprite=!0;function na(i,e,t,n,r,s){Dr.subVectors(i,t).addScalar(.5).multiply(n),r!==void 0?(Es.x=s*Dr.x-r*Dr.y,Es.y=r*Dr.x+s*Dr.y):Es.copy(Dr),i.copy(e),i.x+=Es.x,i.y+=Es.y,i.applyMatrix4(o0)}const ia=new A,jf=new A;class a0 extends ze{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,r=t.length;n<r;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,r;for(n=1,r=t.length;n<r&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){ia.setFromMatrixPosition(this.matrixWorld);const r=e.ray.origin.distanceTo(ia);this.getObjectForDistance(r).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){ia.setFromMatrixPosition(e.matrixWorld),jf.setFromMatrixPosition(this.matrixWorld);const n=ia.distanceTo(jf)/e.zoom;t[0].object.visible=!0;let r,s;for(r=1,s=t.length;r<s&&n>=t[r].distance;r++)t[r-1].object.visible=!1,t[r].object.visible=!0;for(this._currentLevel=r-1;r<s;r++)t[r].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let r=0,s=n.length;r<s;r++){const o=n[r];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const Zf=new A,Kf=new Ye,Qf=new Ye,hE=new A,ed=new _e;class ml extends dt{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new _e,this.bindMatrixInverse=new _e}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ye,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,r=this.geometry;Kf.fromBufferAttribute(r.attributes.skinIndex,e),Qf.fromBufferAttribute(r.attributes.skinWeight,e),Zf.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Qf.getComponent(s);if(o!==0){const a=Kf.getComponent(s);ed.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(hE.copy(Zf).applyMatrix4(ed),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}ml.prototype.isSkinnedMesh=!0;class gl extends ze{constructor(){super(),this.type="Bone"}}gl.prototype.isBone=!0;class Yi extends yt{constructor(e=null,t=1,n=1,r,s,o,a,l,c=ft,u=ft,h,f){super(null,o,a,l,c,u,r,s,h,f),this.image={data:e,width:t,height:n},this.magFilter=c,this.minFilter=u,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Yi.prototype.isDataTexture=!0;const td=new _e,fE=new _e;class yl{constructor(e=[],t=[]){this.uuid=$t(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new _e)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new _e;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:fE;td.multiplyMatrices(a,t[s]),td.toArray(n,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new yl(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Dg(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Yi(t,e,e,Tt,xn);return this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new gl),this.bones.push(o),this.boneInverses.push(new _e().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const o=t[r];e.bones.push(o.uuid);const a=n[r];e.boneInverses.push(a.toArray())}return e}}class Qi extends He{constructor(e,t,n,r=1){typeof n=="number"&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Qi.prototype.isInstancedBufferAttribute=!0;const nd=new _e,id=new _e,ra=[],As=new dt;class Yu extends dt{constructor(e,t,n){super(e,t),this.instanceMatrix=new Qi(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,r=this.count;if(As.geometry=this.geometry,As.material=this.material,As.material!==void 0)for(let s=0;s<r;s++){this.getMatrixAt(s,nd),id.multiplyMatrices(n,nd),As.matrixWorld=id,As.raycast(e,ra);for(let o=0,a=ra.length;o<a;o++){const l=ra[o];l.instanceId=s,l.object=this,t.push(l)}ra.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Qi(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Yu.prototype.isInstancedMesh=!0;class bt extends wt{constructor(e){super(),this.type="LineBasicMaterial",this.color=new de(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}bt.prototype.isLineBasicMaterial=!0;const rd=new A,sd=new A,od=new _e,dc=new xi,sa=new yi;class On extends ze{constructor(e=new Te,t=new bt){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)rd.fromBufferAttribute(t,r-1),sd.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=rd.distanceTo(sd);e.setAttribute("lineDistance",new xe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),sa.copy(n.boundingSphere),sa.applyMatrix4(r),sa.radius+=s,e.ray.intersectsSphere(sa)===!1)return;od.copy(r).invert(),dc.copy(e.ray).applyMatrix4(od);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new A,u=new A,h=new A,f=new A,d=this.isLineSegments?2:1;if(n.isBufferGeometry){const p=n.index,x=n.attributes.position;if(p!==null){const m=Math.max(0,o.start),g=Math.min(p.count,o.start+o.count);for(let _=m,v=g-1;_<v;_+=d){const S=p.getX(_),T=p.getX(_+1);if(c.fromBufferAttribute(x,S),u.fromBufferAttribute(x,T),dc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const R=e.ray.origin.distanceTo(f);R<e.near||R>e.far||t.push({distance:R,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}else{const m=Math.max(0,o.start),g=Math.min(x.count,o.start+o.count);for(let _=m,v=g-1;_<v;_+=d){if(c.fromBufferAttribute(x,_),u.fromBufferAttribute(x,_+1),dc.distanceSqToSegment(c,u,f,h)>l)continue;f.applyMatrix4(this.matrixWorld);const T=e.ray.origin.distanceTo(f);T<e.near||T>e.far||t.push({distance:T,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}On.prototype.isLine=!0;const ad=new A,ld=new A;class kt extends On{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let r=0,s=t.count;r<s;r+=2)ad.fromBufferAttribute(t,r),ld.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+ad.distanceTo(ld);e.setAttribute("lineDistance",new xe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}kt.prototype.isLineSegments=!0;class $u extends On{constructor(e,t){super(e,t),this.type="LineLoop"}}$u.prototype.isLineLoop=!0;class fr extends wt{constructor(e){super(),this.type="PointsMaterial",this.color=new de(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}fr.prototype.isPointsMaterial=!0;const cd=new _e,nu=new xi,oa=new yi,aa=new A;class wo extends ze{constructor(e=new Te,t=new fr){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),oa.copy(n.boundingSphere),oa.applyMatrix4(r),oa.radius+=s,e.ray.intersectsSphere(oa)===!1)return;cd.copy(r).invert(),nu.copy(e.ray).applyMatrix4(cd);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(c!==null){const f=Math.max(0,o.start),d=Math.min(c.count,o.start+o.count);for(let p=f,y=d;p<y;p++){const x=c.getX(p);aa.fromBufferAttribute(h,x),ud(aa,x,l,r,e,t,this)}}else{const f=Math.max(0,o.start),d=Math.min(h.count,o.start+o.count);for(let p=f,y=d;p<y;p++)aa.fromBufferAttribute(h,p),ud(aa,p,l,r,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}wo.prototype.isPoints=!0;function ud(i,e,t,n,r,s,o){const a=nu.distanceSqToPoint(i);if(a<t){const l=new A;nu.closestPointToPoint(i,l),l.applyMatrix4(n);const c=r.ray.origin.distanceTo(l);if(c<r.near||c>r.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}class l0 extends yt{constructor(e,t,n,r,s,o,a,l,c){super(e,t,n,r,s,o,a,l,c),this.format=a!==void 0?a:Wi,this.minFilter=o!==void 0?o:mt,this.magFilter=s!==void 0?s:mt,this.generateMipmaps=!1;const u=this;function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}l0.prototype.isVideoTexture=!0;class Ju extends yt{constructor(e,t,n,r,s,o,a,l,c,u,h,f){super(null,o,a,l,c,u,r,s,h,f),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}Ju.prototype.isCompressedTexture=!0;class c0 extends yt{constructor(e,t,n,r,s,o,a,l,c){super(e,t,n,r,s,o,a,l,c),this.needsUpdate=!0}}c0.prototype.isCanvasTexture=!0;class u0 extends yt{constructor(e,t,n,r,s,o,a,l,c,u){if(u=u!==void 0?u:qi,u!==qi&&u!==Jr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===qi&&(n=Zs),n===void 0&&u===Jr&&(n=Gr),super(null,r,s,o,a,l,u,n,c),this.image={width:e,height:t},this.magFilter=a!==void 0?a:ft,this.minFilter=l!==void 0?l:ft,this.flipY=!1,this.generateMipmaps=!1}}u0.prototype.isDepthTexture=!0;class Qr extends Te{constructor(e=1,t=8,n=0,r=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},t=Math.max(3,t);const s=[],o=[],a=[],l=[],c=new A,u=new ne;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,f=3;h<=t;h++,f+=3){const d=n+h/t*r;c.x=e*Math.cos(d),c.y=e*Math.sin(d),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[f]/e+1)/2,u.y=(o[f+1]/e+1)/2,l.push(u.x,u.y)}for(let h=1;h<=t;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new xe(o,3)),this.setAttribute("normal",new xe(a,3)),this.setAttribute("uv",new xe(l,2))}static fromJSON(e){return new Qr(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ui extends Te{constructor(e=1,t=1,n=1,r=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],h=[],f=[],d=[];let p=0;const y=[],x=n/2;let m=0;g(),o===!1&&(e>0&&_(!0),t>0&&_(!1)),this.setIndex(u),this.setAttribute("position",new xe(h,3)),this.setAttribute("normal",new xe(f,3)),this.setAttribute("uv",new xe(d,2));function g(){const v=new A,S=new A;let T=0;const b=(t-e)/n;for(let R=0;R<=s;R++){const H=[],F=R/s,P=F*(t-e)+e;for(let ee=0;ee<=r;ee++){const k=ee/r,W=k*l+a,J=Math.sin(W),V=Math.cos(W);S.x=P*J,S.y=-F*n+x,S.z=P*V,h.push(S.x,S.y,S.z),v.set(J,b,V).normalize(),f.push(v.x,v.y,v.z),d.push(k,1-F),H.push(p++)}y.push(H)}for(let R=0;R<r;R++)for(let H=0;H<s;H++){const F=y[H][R],P=y[H+1][R],ee=y[H+1][R+1],k=y[H][R+1];u.push(F,P,k),u.push(P,ee,k),T+=6}c.addGroup(m,T,0),m+=T}function _(v){const S=p,T=new ne,b=new A;let R=0;const H=v===!0?e:t,F=v===!0?1:-1;for(let ee=1;ee<=r;ee++)h.push(0,x*F,0),f.push(0,F,0),d.push(.5,.5),p++;const P=p;for(let ee=0;ee<=r;ee++){const W=ee/r*l+a,J=Math.cos(W),V=Math.sin(W);b.x=H*V,b.y=x*F,b.z=H*J,h.push(b.x,b.y,b.z),f.push(0,F,0),T.x=J*.5+.5,T.y=V*.5*F+.5,d.push(T.x,T.y),p++}for(let ee=0;ee<r;ee++){const k=S+ee,W=P+ee;v===!0?u.push(W,W+1,k):u.push(W+1,W,k),R+=3}c.addGroup(m,R,v===!0?1:2),m+=R}}static fromJSON(e){return new ui(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class es extends ui{constructor(e=1,t=1,n=8,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new es(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class bn extends Te{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];a(r),c(n),u(),this.setAttribute("position",new xe(s,3)),this.setAttribute("normal",new xe(s.slice(),3)),this.setAttribute("uv",new xe(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(g){const _=new A,v=new A,S=new A;for(let T=0;T<t.length;T+=3)d(t[T+0],_),d(t[T+1],v),d(t[T+2],S),l(_,v,S,g)}function l(g,_,v,S){const T=S+1,b=[];for(let R=0;R<=T;R++){b[R]=[];const H=g.clone().lerp(v,R/T),F=_.clone().lerp(v,R/T),P=T-R;for(let ee=0;ee<=P;ee++)ee===0&&R===T?b[R][ee]=H:b[R][ee]=H.clone().lerp(F,ee/P)}for(let R=0;R<T;R++)for(let H=0;H<2*(T-R)-1;H++){const F=Math.floor(H/2);H%2===0?(f(b[R][F+1]),f(b[R+1][F]),f(b[R][F])):(f(b[R][F+1]),f(b[R+1][F+1]),f(b[R+1][F]))}}function c(g){const _=new A;for(let v=0;v<s.length;v+=3)_.x=s[v+0],_.y=s[v+1],_.z=s[v+2],_.normalize().multiplyScalar(g),s[v+0]=_.x,s[v+1]=_.y,s[v+2]=_.z}function u(){const g=new A;for(let _=0;_<s.length;_+=3){g.x=s[_+0],g.y=s[_+1],g.z=s[_+2];const v=x(g)/2/Math.PI+.5,S=m(g)/Math.PI+.5;o.push(v,1-S)}p(),h()}function h(){for(let g=0;g<o.length;g+=6){const _=o[g+0],v=o[g+2],S=o[g+4],T=Math.max(_,v,S),b=Math.min(_,v,S);T>.9&&b<.1&&(_<.2&&(o[g+0]+=1),v<.2&&(o[g+2]+=1),S<.2&&(o[g+4]+=1))}}function f(g){s.push(g.x,g.y,g.z)}function d(g,_){const v=g*3;_.x=e[v+0],_.y=e[v+1],_.z=e[v+2]}function p(){const g=new A,_=new A,v=new A,S=new A,T=new ne,b=new ne,R=new ne;for(let H=0,F=0;H<s.length;H+=9,F+=6){g.set(s[H+0],s[H+1],s[H+2]),_.set(s[H+3],s[H+4],s[H+5]),v.set(s[H+6],s[H+7],s[H+8]),T.set(o[F+0],o[F+1]),b.set(o[F+2],o[F+3]),R.set(o[F+4],o[F+5]),S.copy(g).add(_).add(v).divideScalar(3);const P=x(S);y(T,F+0,g,P),y(b,F+2,_,P),y(R,F+4,v,P)}}function y(g,_,v,S){S<0&&g.x===1&&(o[_]=g.x-1),v.x===0&&v.z===0&&(o[_]=S/2/Math.PI+.5)}function x(g){return Math.atan2(g.z,-g.x)}function m(g){return Math.atan2(-g.y,Math.sqrt(g.x*g.x+g.z*g.z))}}static fromJSON(e){return new bn(e.vertices,e.indices,e.radius,e.details)}}class ts extends bn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ts(e.radius,e.detail)}}const la=new A,ca=new A,pc=new A,ua=new ct;class ju extends Te{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const r=Math.pow(10,4),s=Math.cos(Xi*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),f={},d=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:y,b:x,c:m}=ua;if(y.fromBufferAttribute(a,c[0]),x.fromBufferAttribute(a,c[1]),m.fromBufferAttribute(a,c[2]),ua.getNormal(pc),h[0]="".concat(Math.round(y.x*r),",").concat(Math.round(y.y*r),",").concat(Math.round(y.z*r)),h[1]="".concat(Math.round(x.x*r),",").concat(Math.round(x.y*r),",").concat(Math.round(x.z*r)),h[2]="".concat(Math.round(m.x*r),",").concat(Math.round(m.y*r),",").concat(Math.round(m.z*r)),!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let g=0;g<3;g++){const _=(g+1)%3,v=h[g],S=h[_],T=ua[u[g]],b=ua[u[_]],R="".concat(v,"_").concat(S),H="".concat(S,"_").concat(v);H in f&&f[H]?(pc.dot(f[H].normal)<=s&&(d.push(T.x,T.y,T.z),d.push(b.x,b.y,b.z)),f[H]=null):R in f||(f[R]={index0:c[g],index1:c[_],normal:pc.clone()})}}for(const p in f)if(f[p]){const{index0:y,index1:x}=f[p];la.fromBufferAttribute(a,y),ca.fromBufferAttribute(a,x),d.push(la.x,la.y,la.z),d.push(ca.x,ca.y,ca.z)}this.setAttribute("position",new xe(d,3))}}}class Jt{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,r=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let r=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(r=Math.floor(a+(l-a)/2),c=n[r]-o,c<0)a=r+1;else if(c>0)l=r-1;else{l=r;break}if(r=l,n[r]===o)return r/(s-1);const u=n[r],f=n[r+1]-u,d=(o-u)/f;return(r+d)/(s-1)}getTangent(e,t){let r=e-1e-4,s=e+1e-4;r<0&&(r=0),s>1&&(s=1);const o=this.getPoint(r),a=this.getPoint(s),l=t||(o.isVector2?new ne:new A);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new A,r=[],s=[],o=[],a=new A,l=new _e;for(let d=0;d<=e;d++){const p=d/e;r[d]=this.getTangentAt(p,new A)}s[0]=new A,o[0]=new A;let c=Number.MAX_VALUE;const u=Math.abs(r[0].x),h=Math.abs(r[0].y),f=Math.abs(r[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),f<=c&&n.set(0,0,1),a.crossVectors(r[0],n).normalize(),s[0].crossVectors(r[0],a),o[0].crossVectors(r[0],s[0]);for(let d=1;d<=e;d++){if(s[d]=s[d-1].clone(),o[d]=o[d-1].clone(),a.crossVectors(r[d-1],r[d]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(St(r[d-1].dot(r[d]),-1,1));s[d].applyMatrix4(l.makeRotationAxis(a,p))}o[d].crossVectors(r[d],s[d])}if(t===!0){let d=Math.acos(St(s[0].dot(s[e]),-1,1));d/=e,r[0].dot(a.crossVectors(s[0],s[e]))>0&&(d=-d);for(let p=1;p<=e;p++)s[p].applyMatrix4(l.makeRotationAxis(r[p],d*p)),o[p].crossVectors(r[p],s[p])}return{tangents:r,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class bo extends Jt{constructor(e=0,t=0,n=1,r=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new ne,r=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=r;for(;s>r;)s-=r;s<Number.EPSILON&&(o?s=0:s=r),this.aClockwise===!0&&!o&&(s===r?s=-r:s=s-r);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),f=l-this.aX,d=c-this.aY;l=f*u-d*h+this.aX,c=f*h+d*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}bo.prototype.isEllipseCurve=!0;class Zu extends bo{constructor(e,t,n,r,s,o){super(e,t,n,n,r,s,o),this.type="ArcCurve"}}Zu.prototype.isArcCurve=!0;function Ku(){let i=0,e=0,t=0,n=0;function r(s,o,a,l){i=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){r(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let f=(o-s)/c-(a-s)/(c+u)+(a-o)/u,d=(a-o)/u-(l-o)/(u+h)+(l-a)/h;f*=u,d*=u,r(o,a,f,d)},calc:function(s){const o=s*s,a=o*s;return i+e*s+t*o+n*a}}}const ha=new A,mc=new Ku,gc=new Ku,yc=new Ku;class Qu extends Jt{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,t=new A){const n=t,r=this.points,s=r.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=r[(a-1)%s]:(ha.subVectors(r[0],r[1]).add(r[0]),c=ha);const h=r[a%s],f=r[(a+1)%s];if(this.closed||a+2<s?u=r[(a+2)%s]:(ha.subVectors(r[s-1],r[s-2]).add(r[s-1]),u=ha),this.curveType==="centripetal"||this.curveType==="chordal"){const d=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),d),y=Math.pow(h.distanceToSquared(f),d),x=Math.pow(f.distanceToSquared(u),d);y<1e-4&&(y=1),p<1e-4&&(p=y),x<1e-4&&(x=y),mc.initNonuniformCatmullRom(c.x,h.x,f.x,u.x,p,y,x),gc.initNonuniformCatmullRom(c.y,h.y,f.y,u.y,p,y,x),yc.initNonuniformCatmullRom(c.z,h.z,f.z,u.z,p,y,x)}else this.curveType==="catmullrom"&&(mc.initCatmullRom(c.x,h.x,f.x,u.x,this.tension),gc.initCatmullRom(c.y,h.y,f.y,u.y,this.tension),yc.initCatmullRom(c.z,h.z,f.z,u.z,this.tension));return n.set(mc.calc(l),gc.calc(l),yc.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new A().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}Qu.prototype.isCatmullRomCurve3=!0;function hd(i,e,t,n,r){const s=(n-e)*.5,o=(r-t)*.5,a=i*i,l=i*a;return(2*t-2*n+s+o)*l+(-3*t+3*n-2*s-o)*a+s*i+t}function dE(i,e){const t=1-i;return t*t*e}function pE(i,e){return 2*(1-i)*i*e}function mE(i,e){return i*i*e}function Hs(i,e,t,n){return dE(i,e)+pE(i,t)+mE(i,n)}function gE(i,e){const t=1-i;return t*t*t*e}function yE(i,e){const t=1-i;return 3*t*t*i*e}function xE(i,e){return 3*(1-i)*i*i*e}function vE(i,e){return i*i*i*e}function Gs(i,e,t,n,r){return gE(i,e)+yE(i,t)+xE(i,n)+vE(i,r)}class xl extends Jt{constructor(e=new ne,t=new ne,n=new ne,r=new ne){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new ne){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Gs(e,r.x,s.x,o.x,a.x),Gs(e,r.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}xl.prototype.isCubicBezierCurve=!0;class eh extends Jt{constructor(e=new A,t=new A,n=new A,r=new A){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new A){const n=t,r=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Gs(e,r.x,s.x,o.x,a.x),Gs(e,r.y,s.y,o.y,a.y),Gs(e,r.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}eh.prototype.isCubicBezierCurve3=!0;class Mo extends Jt{constructor(e=new ne,t=new ne){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ne){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ne;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Mo.prototype.isLineCurve=!0;class h0 extends Jt{constructor(e=new A,t=new A){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new A){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class vl extends Jt{constructor(e=new ne,t=new ne,n=new ne){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ne){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(Hs(e,r.x,s.x,o.x),Hs(e,r.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}vl.prototype.isQuadraticBezierCurve=!0;class _l extends Jt{constructor(e=new A,t=new A,n=new A){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new A){const n=t,r=this.v0,s=this.v1,o=this.v2;return n.set(Hs(e,r.x,s.x,o.x),Hs(e,r.y,s.y,o.y),Hs(e,r.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}_l.prototype.isQuadraticBezierCurve3=!0;class wl extends Jt{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new ne){const n=t,r=this.points,s=(r.length-1)*e,o=Math.floor(s),a=s-o,l=r[o===0?o:o-1],c=r[o],u=r[o>r.length-2?r.length-1:o+1],h=r[o>r.length-3?r.length-1:o+2];return n.set(hd(a,l.x,c.x,u.x,h.x),hd(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const r=e.points[t];this.points.push(new ne().fromArray(r))}return this}}wl.prototype.isSplineCurve=!0;var th=Object.freeze({__proto__:null,ArcCurve:Zu,CatmullRomCurve3:Qu,CubicBezierCurve:xl,CubicBezierCurve3:eh,EllipseCurve:bo,LineCurve:Mo,LineCurve3:h0,QuadraticBezierCurve:vl,QuadraticBezierCurve3:_l,SplineCurve:wl});class f0 extends Jt{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Mo(t,e))}getPoint(e,t){const n=e*this.getLength(),r=this.getCurveLengths();let s=0;for(;s<r.length;){if(r[s]>=n){const o=r[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let r=0,s=this.curves;r<s.length;r++){const o=s[r],a=o&&o.isEllipseCurve?e*2:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const r=e.curves[t];this.curves.push(new th[r.type]().fromJSON(r))}return this}}class no extends f0{constructor(e){super(),this.type="Path",this.currentPoint=new ne,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Mo(this.currentPoint.clone(),new ne(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){const s=new vl(this.currentPoint.clone(),new ne(e,t),new ne(n,r));return this.curves.push(s),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,s,o){const a=new xl(this.currentPoint.clone(),new ne(e,t),new ne(n,r),new ne(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new wl(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+a,t+l,n,r,s,o),this}absarc(e,t,n,r,s,o){return this.absellipse(e,t,n,n,r,s,o),this}ellipse(e,t,n,r,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+c,t+u,n,r,s,o,a,l),this}absellipse(e,t,n,r,s,o,a,l){const c=new bo(e,t,n,r,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class vn extends no{constructor(e){super(e),this.uuid=$t(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const r=e.holes[t];this.holes.push(new no().fromJSON(r))}return this}}const _E={triangulate:function(i,e,t=2){const n=e&&e.length,r=n?e[0]*t:i.length;let s=d0(i,0,r,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,f,d;if(n&&(s=EE(i,e,s,t)),i.length>80*t){a=c=i[0],l=u=i[1];for(let p=t;p<r;p+=t)h=i[p],f=i[p+1],h<a&&(a=h),f<l&&(l=f),h>c&&(c=h),f>u&&(u=f);d=Math.max(c-a,u-l),d=d!==0?1/d:0}return io(s,o,t,a,l,d),o}};function d0(i,e,t,n,r){let s,o;if(r===BE(i,e,t,n)>0)for(s=e;s<t;s+=n)o=fd(s,i[s],i[s+1],o);else for(s=t-n;s>=e;s-=n)o=fd(s,i[s],i[s+1],o);return o&&bl(o,o.next)&&(so(o),o=o.next),o}function hi(i,e){if(!i)return i;e||(e=i);let t=i,n;do if(n=!1,!t.steiner&&(bl(t,t.next)||Qe(t.prev,t,t.next)===0)){if(so(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function io(i,e,t,n,r,s,o){if(!i)return;!o&&s&&RE(i,n,r,s);let a=i,l,c;for(;i.prev!==i.next;){if(l=i.prev,c=i.next,s?bE(i,n,r,s):wE(i)){e.push(l.i/t),e.push(i.i/t),e.push(c.i/t),so(i),i=c.next,a=c.next;continue}if(i=c,i===a){o?o===1?(i=ME(hi(i),e,t),io(i,e,t,n,r,s,2)):o===2&&SE(i,e,t,n,r,s):io(hi(i),e,t,n,r,s,1);break}}}function wE(i){const e=i.prev,t=i,n=i.next;if(Qe(e,t,n)>=0)return!1;let r=i.next.next;for(;r!==i.prev;){if(Br(e.x,e.y,t.x,t.y,n.x,n.y,r.x,r.y)&&Qe(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function bE(i,e,t,n){const r=i.prev,s=i,o=i.next;if(Qe(r,s,o)>=0)return!1;const a=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,u=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,h=iu(a,l,e,t,n),f=iu(c,u,e,t,n);let d=i.prevZ,p=i.nextZ;for(;d&&d.z>=h&&p&&p.z<=f;){if(d!==i.prev&&d!==i.next&&Br(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Qe(d.prev,d,d.next)>=0||(d=d.prevZ,p!==i.prev&&p!==i.next&&Br(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Qe(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;d&&d.z>=h;){if(d!==i.prev&&d!==i.next&&Br(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&Qe(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=f;){if(p!==i.prev&&p!==i.next&&Br(r.x,r.y,s.x,s.y,o.x,o.y,p.x,p.y)&&Qe(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function ME(i,e,t){let n=i;do{const r=n.prev,s=n.next.next;!bl(r,s)&&p0(r,n,n.next,s)&&ro(r,s)&&ro(s,r)&&(e.push(r.i/t),e.push(n.i/t),e.push(s.i/t),so(n),so(n.next),n=i=s),n=n.next}while(n!==i);return hi(n)}function SE(i,e,t,n,r,s){let o=i;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&DE(o,a)){let l=m0(o,a);o=hi(o,o.next),l=hi(l,l.next),io(o,e,t,n,r,s),io(l,e,t,n,r,s);return}a=a.next}o=o.next}while(o!==i)}function EE(i,e,t,n){const r=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*n,l=s<o-1?e[s+1]*n:i.length,c=d0(i,a,l,n,!1),c===c.next&&(c.steiner=!0),r.push(IE(c));for(r.sort(TE),s=0;s<r.length;s++)AE(r[s],t),t=hi(t,t.next);return t}function TE(i,e){return i.x-e.x}function AE(i,e){if(e=CE(i,e),e){const t=m0(e,i);hi(e,e.next),hi(t,t.next)}}function CE(i,e){let t=e;const n=i.x,r=i.y;let s=-1/0,o;do{if(r<=t.y&&r>=t.next.y&&t.next.y!==t.y){const f=t.x+(r-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(f<=n&&f>s){if(s=f,f===n){if(r===t.y)return t;if(r===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,l=o.x,c=o.y;let u=1/0,h;t=o;do n>=t.x&&t.x>=l&&n!==t.x&&Br(r<c?n:s,r,l,c,r<c?s:n,r,t.x,t.y)&&(h=Math.abs(r-t.y)/(n-t.x),ro(t,i)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&LE(o,t)))&&(o=t,u=h)),t=t.next;while(t!==a);return o}function LE(i,e){return Qe(i.prev,i,e.prev)<0&&Qe(e.next,i,i.next)<0}function RE(i,e,t,n){let r=i;do r.z===null&&(r.z=iu(r.x,r.y,e,t,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==i);r.prevZ.nextZ=null,r.prevZ=null,PE(r)}function PE(i){let e,t,n,r,s,o,a,l,c=1;do{for(t=i,i=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,!!n);e++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||t.z<=n.z)?(r=t,t=t.nextZ,a--):(r=n,n=n.nextZ,l--),s?s.nextZ=r:i=r,r.prevZ=s,s=r;t=n}s.nextZ=null,c*=2}while(o>1);return i}function iu(i,e,t,n,r){return i=32767*(i-t)*r,e=32767*(e-n)*r,i=(i|i<<8)&16711935,i=(i|i<<4)&252645135,i=(i|i<<2)&858993459,i=(i|i<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,i|e<<1}function IE(i){let e=i,t=i;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==i);return t}function Br(i,e,t,n,r,s,o,a){return(r-o)*(e-a)-(i-o)*(s-a)>=0&&(i-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(r-o)*(n-a)>=0}function DE(i,e){return i.next.i!==e.i&&i.prev.i!==e.i&&!FE(i,e)&&(ro(i,e)&&ro(e,i)&&NE(i,e)&&(Qe(i.prev,i,e.prev)||Qe(i,e.prev,e))||bl(i,e)&&Qe(i.prev,i,i.next)>0&&Qe(e.prev,e,e.next)>0)}function Qe(i,e,t){return(e.y-i.y)*(t.x-e.x)-(e.x-i.x)*(t.y-e.y)}function bl(i,e){return i.x===e.x&&i.y===e.y}function p0(i,e,t,n){const r=da(Qe(i,e,t)),s=da(Qe(i,e,n)),o=da(Qe(t,n,i)),a=da(Qe(t,n,e));return!!(r!==s&&o!==a||r===0&&fa(i,t,e)||s===0&&fa(i,n,e)||o===0&&fa(t,i,n)||a===0&&fa(t,e,n))}function fa(i,e,t){return e.x<=Math.max(i.x,t.x)&&e.x>=Math.min(i.x,t.x)&&e.y<=Math.max(i.y,t.y)&&e.y>=Math.min(i.y,t.y)}function da(i){return i>0?1:i<0?-1:0}function FE(i,e){let t=i;do{if(t.i!==i.i&&t.next.i!==i.i&&t.i!==e.i&&t.next.i!==e.i&&p0(t,t.next,i,e))return!0;t=t.next}while(t!==i);return!1}function ro(i,e){return Qe(i.prev,i,i.next)<0?Qe(i,e,i.next)>=0&&Qe(i,i.prev,e)>=0:Qe(i,e,i.prev)<0||Qe(i,i.next,e)<0}function NE(i,e){let t=i,n=!1;const r=(i.x+e.x)/2,s=(i.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&r<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==i);return n}function m0(i,e){const t=new ru(i.i,i.x,i.y),n=new ru(e.i,e.x,e.y),r=i.next,s=e.prev;return i.next=e,e.prev=i,t.next=r,r.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function fd(i,e,t,n){const r=new ru(i,e,t);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function so(i){i.next.prev=i.prev,i.prev.next=i.next,i.prevZ&&(i.prevZ.nextZ=i.nextZ),i.nextZ&&(i.nextZ.prevZ=i.prevZ)}function ru(i,e,t){this.i=i,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function BE(i,e,t,n){let r=0;for(let s=e,o=t-n;s<t;s+=n)r+=(i[o]-i[s])*(i[s+1]+i[o+1]),o=s;return r}class _n{static area(e){const t=e.length;let n=0;for(let r=t-1,s=0;s<t;r=s++)n+=e[r].x*e[s].y-e[s].x*e[r].y;return n*.5}static isClockWise(e){return _n.area(e)<0}static triangulateShape(e,t){const n=[],r=[],s=[];dd(e),pd(n,e);let o=e.length;t.forEach(dd);for(let l=0;l<t.length;l++)r.push(o),o+=t[l].length,pd(n,t[l]);const a=_E.triangulate(n,r);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function dd(i){const e=i.length;e>2&&i[e-1].equals(i[0])&&i.pop()}function pd(i,e){for(let t=0;t<e.length;t++)i.push(e[t].x),i.push(e[t].y)}class Mn extends Te{constructor(e=new vn([new ne(.5,.5),new ne(-.5,.5),new ne(-.5,-.5),new ne(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,r=[],s=[];for(let a=0,l=e.length;a<l;a++){const c=e[a];o(c)}this.setAttribute("position",new xe(r,3)),this.setAttribute("uv",new xe(s,2)),this.computeVertexNormals();function o(a){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let h=t.depth!==void 0?t.depth:1,f=t.bevelEnabled!==void 0?t.bevelEnabled:!0,d=t.bevelThickness!==void 0?t.bevelThickness:.2,p=t.bevelSize!==void 0?t.bevelSize:d-.1,y=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const m=t.extrudePath,g=t.UVGenerator!==void 0?t.UVGenerator:zE;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let _,v=!1,S,T,b,R;m&&(_=m.getSpacedPoints(u),v=!0,f=!1,S=m.computeFrenetFrames(u,!1),T=new A,b=new A,R=new A),f||(x=0,d=0,p=0,y=0);const H=a.extractPoints(c);let F=H.shape;const P=H.holes;if(!_n.isClockWise(F)){F=F.reverse();for(let K=0,E=P.length;K<E;K++){const C=P[K];_n.isClockWise(C)&&(P[K]=C.reverse())}}const k=_n.triangulateShape(F,P),W=F;for(let K=0,E=P.length;K<E;K++){const C=P[K];F=F.concat(C)}function J(K,E,C){return E||console.error("THREE.ExtrudeGeometry: vec does not exist"),E.clone().multiplyScalar(C).add(K)}const V=F.length,q=k.length;function ie(K,E,C){let N,z,M;const w=K.x-E.x,D=K.y-E.y,O=C.x-K.x,U=C.y-K.y,G=w*w+D*D,Q=w*U-D*O;if(Math.abs(Q)>Number.EPSILON){const te=Math.sqrt(G),se=Math.sqrt(O*O+U*U),oe=E.x-D/te,I=E.y+w/te,le=C.x-U/se,Y=C.y+O/se,fe=((le-oe)*U-(Y-I)*O)/(w*U-D*O);N=oe+w*fe-K.x,z=I+D*fe-K.y;const pe=N*N+z*z;if(pe<=2)return new ne(N,z);M=Math.sqrt(pe/2)}else{let te=!1;w>Number.EPSILON?O>Number.EPSILON&&(te=!0):w<-Number.EPSILON?O<-Number.EPSILON&&(te=!0):Math.sign(D)===Math.sign(U)&&(te=!0),te?(N=-D,z=w,M=Math.sqrt(G)):(N=w,z=D,M=Math.sqrt(G/2))}return new ne(N/M,z/M)}const me=[];for(let K=0,E=W.length,C=E-1,N=K+1;K<E;K++,C++,N++)C===E&&(C=0),N===E&&(N=0),me[K]=ie(W[K],W[C],W[N]);const we=[];let ue,Me=me.concat();for(let K=0,E=P.length;K<E;K++){const C=P[K];ue=[];for(let N=0,z=C.length,M=z-1,w=N+1;N<z;N++,M++,w++)M===z&&(M=0),w===z&&(w=0),ue[N]=ie(C[N],C[M],C[w]);we.push(ue),Me=Me.concat(ue)}for(let K=0;K<x;K++){const E=K/x,C=d*Math.cos(E*Math.PI/2),N=p*Math.sin(E*Math.PI/2)+y;for(let z=0,M=W.length;z<M;z++){const w=J(W[z],me[z],N);be(w.x,w.y,-C)}for(let z=0,M=P.length;z<M;z++){const w=P[z];ue=we[z];for(let D=0,O=w.length;D<O;D++){const U=J(w[D],ue[D],N);be(U.x,U.y,-C)}}}const ae=p+y;for(let K=0;K<V;K++){const E=f?J(F[K],Me[K],ae):F[K];v?(b.copy(S.normals[0]).multiplyScalar(E.x),T.copy(S.binormals[0]).multiplyScalar(E.y),R.copy(_[0]).add(b).add(T),be(R.x,R.y,R.z)):be(E.x,E.y,0)}for(let K=1;K<=u;K++)for(let E=0;E<V;E++){const C=f?J(F[E],Me[E],ae):F[E];v?(b.copy(S.normals[K]).multiplyScalar(C.x),T.copy(S.binormals[K]).multiplyScalar(C.y),R.copy(_[K]).add(b).add(T),be(R.x,R.y,R.z)):be(C.x,C.y,h/u*K)}for(let K=x-1;K>=0;K--){const E=K/x,C=d*Math.cos(E*Math.PI/2),N=p*Math.sin(E*Math.PI/2)+y;for(let z=0,M=W.length;z<M;z++){const w=J(W[z],me[z],N);be(w.x,w.y,h+C)}for(let z=0,M=P.length;z<M;z++){const w=P[z];ue=we[z];for(let D=0,O=w.length;D<O;D++){const U=J(w[D],ue[D],N);v?be(U.x,U.y+_[u-1].y,_[u-1].x+C):be(U.x,U.y,h+C)}}}ce(),ve();function ce(){const K=r.length/3;if(f){let E=0,C=V*E;for(let N=0;N<q;N++){const z=k[N];Ee(z[2]+C,z[1]+C,z[0]+C)}E=u+x*2,C=V*E;for(let N=0;N<q;N++){const z=k[N];Ee(z[0]+C,z[1]+C,z[2]+C)}}else{for(let E=0;E<q;E++){const C=k[E];Ee(C[2],C[1],C[0])}for(let E=0;E<q;E++){const C=k[E];Ee(C[0]+V*u,C[1]+V*u,C[2]+V*u)}}n.addGroup(K,r.length/3-K,0)}function ve(){const K=r.length/3;let E=0;Z(W,E),E+=W.length;for(let C=0,N=P.length;C<N;C++){const z=P[C];Z(z,E),E+=z.length}n.addGroup(K,r.length/3-K,1)}function Z(K,E){let C=K.length;for(;--C>=0;){const N=C;let z=C-1;z<0&&(z=K.length-1);for(let M=0,w=u+x*2;M<w;M++){const D=V*M,O=V*(M+1),U=E+N+D,G=E+z+D,Q=E+z+O,te=E+N+O;ge(U,G,Q,te)}}}function be(K,E,C){l.push(K),l.push(E),l.push(C)}function Ee(K,E,C){ye(K),ye(E),ye(C);const N=r.length/3,z=g.generateTopUV(n,r,N-3,N-2,N-1);Le(z[0]),Le(z[1]),Le(z[2])}function ge(K,E,C,N){ye(K),ye(E),ye(N),ye(E),ye(C),ye(N);const z=r.length/3,M=g.generateSideWallUV(n,r,z-6,z-3,z-2,z-1);Le(M[0]),Le(M[1]),Le(M[3]),Le(M[1]),Le(M[2]),Le(M[3])}function ye(K){r.push(l[K*3+0]),r.push(l[K*3+1]),r.push(l[K*3+2])}function Le(K){s.push(K.x),s.push(K.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return OE(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const r=e.options.extrudePath;return r!==void 0&&(e.options.extrudePath=new th[r.type]().fromJSON(r)),new Mn(n,e.options)}}const zE={generateTopUV:function(i,e,t,n,r){const s=e[t*3],o=e[t*3+1],a=e[n*3],l=e[n*3+1],c=e[r*3],u=e[r*3+1];return[new ne(s,o),new ne(a,l),new ne(c,u)]},generateSideWallUV:function(i,e,t,n,r,s){const o=e[t*3],a=e[t*3+1],l=e[t*3+2],c=e[n*3],u=e[n*3+1],h=e[n*3+2],f=e[r*3],d=e[r*3+1],p=e[r*3+2],y=e[s*3],x=e[s*3+1],m=e[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new ne(o,1-l),new ne(c,1-h),new ne(f,1-p),new ne(y,1-m)]:[new ne(a,1-l),new ne(u,1-h),new ne(d,1-p),new ne(x,1-m)]}};function OE(i,e,t){if(t.shapes=[],Array.isArray(i))for(let n=0,r=i.length;n<r;n++){const s=i[n];t.shapes.push(s.uuid)}else t.shapes.push(i.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class ns extends bn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ns(e.radius,e.detail)}}class is extends Te{constructor(e=[new ne(0,.5),new ne(.5,0),new ne(0,-.5)],t=12,n=0,r=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t),r=St(r,0,Math.PI*2);const s=[],o=[],a=[],l=1/t,c=new A,u=new ne;for(let h=0;h<=t;h++){const f=n+h*l*r,d=Math.sin(f),p=Math.cos(f);for(let y=0;y<=e.length-1;y++)c.x=e[y].x*d,c.y=e[y].y,c.z=e[y].x*p,o.push(c.x,c.y,c.z),u.x=h/t,u.y=y/(e.length-1),a.push(u.x,u.y)}for(let h=0;h<t;h++)for(let f=0;f<e.length-1;f++){const d=f+h*e.length,p=d,y=d+e.length,x=d+e.length+1,m=d+1;s.push(p,y,m),s.push(y,x,m)}if(this.setIndex(s),this.setAttribute("position",new xe(o,3)),this.setAttribute("uv",new xe(a,2)),this.computeVertexNormals(),r===Math.PI*2){const h=this.attributes.normal.array,f=new A,d=new A,p=new A,y=t*e.length*3;for(let x=0,m=0;x<e.length;x++,m+=3)f.x=h[m+0],f.y=h[m+1],f.z=h[m+2],d.x=h[y+m+0],d.y=h[y+m+1],d.z=h[y+m+2],p.addVectors(f,d).normalize(),h[m+0]=h[y+m+0]=p.x,h[m+1]=h[y+m+1]=p.y,h[m+2]=h[y+m+2]=p.z}}static fromJSON(e){return new is(e.points,e.segments,e.phiStart,e.phiLength)}}class er extends bn{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new er(e.radius,e.detail)}}class rs extends Te{constructor(e=.5,t=1,n=8,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:o},n=Math.max(3,n),r=Math.max(1,r);const a=[],l=[],c=[],u=[];let h=e;const f=(t-e)/r,d=new A,p=new ne;for(let y=0;y<=r;y++){for(let x=0;x<=n;x++){const m=s+x/n*o;d.x=h*Math.cos(m),d.y=h*Math.sin(m),l.push(d.x,d.y,d.z),c.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,u.push(p.x,p.y)}h+=f}for(let y=0;y<r;y++){const x=y*(n+1);for(let m=0;m<n;m++){const g=m+x,_=g,v=g+n+1,S=g+n+2,T=g+1;a.push(_,v,T),a.push(v,S,T)}}this.setIndex(a),this.setAttribute("position",new xe(l,3)),this.setAttribute("normal",new xe(c,3)),this.setAttribute("uv",new xe(u,2))}static fromJSON(e){return new rs(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class tr extends Te{constructor(e=new vn([new ne(0,.5),new ne(-.5,-.5),new ne(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],r=[],s=[],o=[];let a=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new xe(r,3)),this.setAttribute("normal",new xe(s,3)),this.setAttribute("uv",new xe(o,2));function c(u){const h=r.length/3,f=u.extractPoints(t);let d=f.shape;const p=f.holes;_n.isClockWise(d)===!1&&(d=d.reverse());for(let x=0,m=p.length;x<m;x++){const g=p[x];_n.isClockWise(g)===!0&&(p[x]=g.reverse())}const y=_n.triangulateShape(d,p);for(let x=0,m=p.length;x<m;x++){const g=p[x];d=d.concat(g)}for(let x=0,m=d.length;x<m;x++){const g=d[x];r.push(g.x,g.y,0),s.push(0,0,1),o.push(g.x,g.y)}for(let x=0,m=y.length;x<m;x++){const g=y[x],_=g[0]+h,v=g[1]+h,S=g[2]+h;n.push(_,v,S),l+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return UE(t,e)}static fromJSON(e,t){const n=[];for(let r=0,s=e.shapes.length;r<s;r++){const o=t[e.shapes[r]];n.push(o)}return new tr(n,e.curveSegments)}}function UE(i,e){if(e.shapes=[],Array.isArray(i))for(let t=0,n=i.length;t<n;t++){const r=i[t];e.shapes.push(r.uuid)}else e.shapes.push(i.uuid);return e}class nr extends Te{constructor(e=1,t=32,n=16,r=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new A,f=new A,d=[],p=[],y=[],x=[];for(let m=0;m<=n;m++){const g=[],_=m/n;let v=0;m==0&&o==0?v=.5/t:m==n&&l==Math.PI&&(v=-.5/t);for(let S=0;S<=t;S++){const T=S/t;h.x=-e*Math.cos(r+T*s)*Math.sin(o+_*a),h.y=e*Math.cos(o+_*a),h.z=e*Math.sin(r+T*s)*Math.sin(o+_*a),p.push(h.x,h.y,h.z),f.copy(h).normalize(),y.push(f.x,f.y,f.z),x.push(T+v,1-_),g.push(c++)}u.push(g)}for(let m=0;m<n;m++)for(let g=0;g<t;g++){const _=u[m][g+1],v=u[m][g],S=u[m+1][g],T=u[m+1][g+1];(m!==0||o>0)&&d.push(_,v,T),(m!==n-1||l<Math.PI)&&d.push(v,S,T)}this.setIndex(d),this.setAttribute("position",new xe(p,3)),this.setAttribute("normal",new xe(y,3)),this.setAttribute("uv",new xe(x,2))}static fromJSON(e){return new nr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ss extends bn{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ss(e.radius,e.detail)}}class os extends Te{constructor(e=1,t=.4,n=8,r=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:s},n=Math.floor(n),r=Math.floor(r);const o=[],a=[],l=[],c=[],u=new A,h=new A,f=new A;for(let d=0;d<=n;d++)for(let p=0;p<=r;p++){const y=p/r*s,x=d/n*Math.PI*2;h.x=(e+t*Math.cos(x))*Math.cos(y),h.y=(e+t*Math.cos(x))*Math.sin(y),h.z=t*Math.sin(x),a.push(h.x,h.y,h.z),u.x=e*Math.cos(y),u.y=e*Math.sin(y),f.subVectors(h,u).normalize(),l.push(f.x,f.y,f.z),c.push(p/r),c.push(d/n)}for(let d=1;d<=n;d++)for(let p=1;p<=r;p++){const y=(r+1)*d+p-1,x=(r+1)*(d-1)+p-1,m=(r+1)*(d-1)+p,g=(r+1)*d+p;o.push(y,x,g),o.push(x,m,g)}this.setIndex(o),this.setAttribute("position",new xe(a,3)),this.setAttribute("normal",new xe(l,3)),this.setAttribute("uv",new xe(c,2))}static fromJSON(e){return new os(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class as extends Te{constructor(e=1,t=.4,n=64,r=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:s,q:o},n=Math.floor(n),r=Math.floor(r);const a=[],l=[],c=[],u=[],h=new A,f=new A,d=new A,p=new A,y=new A,x=new A,m=new A;for(let _=0;_<=n;++_){const v=_/n*s*Math.PI*2;g(v,s,o,e,d),g(v+.01,s,o,e,p),x.subVectors(p,d),m.addVectors(p,d),y.crossVectors(x,m),m.crossVectors(y,x),y.normalize(),m.normalize();for(let S=0;S<=r;++S){const T=S/r*Math.PI*2,b=-t*Math.cos(T),R=t*Math.sin(T);h.x=d.x+(b*m.x+R*y.x),h.y=d.y+(b*m.y+R*y.y),h.z=d.z+(b*m.z+R*y.z),l.push(h.x,h.y,h.z),f.subVectors(h,d).normalize(),c.push(f.x,f.y,f.z),u.push(_/n),u.push(S/r)}}for(let _=1;_<=n;_++)for(let v=1;v<=r;v++){const S=(r+1)*(_-1)+(v-1),T=(r+1)*_+(v-1),b=(r+1)*_+v,R=(r+1)*(_-1)+v;a.push(S,T,R),a.push(T,b,R)}this.setIndex(a),this.setAttribute("position",new xe(l,3)),this.setAttribute("normal",new xe(c,3)),this.setAttribute("uv",new xe(u,2));function g(_,v,S,T,b){const R=Math.cos(_),H=Math.sin(_),F=S/v*_,P=Math.cos(F);b.x=T*(2+P)*.5*R,b.y=T*(2+P)*H*.5,b.z=T*Math.sin(F)*.5}}static fromJSON(e){return new as(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class ls extends Te{constructor(e=new _l(new A(-1,-1,0),new A(-1,1,0),new A(1,1,0)),t=64,n=1,r=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:r,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new A,l=new A,c=new ne;let u=new A;const h=[],f=[],d=[],p=[];y(),this.setIndex(p),this.setAttribute("position",new xe(h,3)),this.setAttribute("normal",new xe(f,3)),this.setAttribute("uv",new xe(d,2));function y(){for(let _=0;_<t;_++)x(_);x(s===!1?t:0),g(),m()}function x(_){u=e.getPointAt(_/t,u);const v=o.normals[_],S=o.binormals[_];for(let T=0;T<=r;T++){const b=T/r*Math.PI*2,R=Math.sin(b),H=-Math.cos(b);l.x=H*v.x+R*S.x,l.y=H*v.y+R*S.y,l.z=H*v.z+R*S.z,l.normalize(),f.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function m(){for(let _=1;_<=t;_++)for(let v=1;v<=r;v++){const S=(r+1)*(_-1)+(v-1),T=(r+1)*_+(v-1),b=(r+1)*_+v,R=(r+1)*(_-1)+v;p.push(S,T,R),p.push(T,b,R)}}function g(){for(let _=0;_<=t;_++)for(let v=0;v<=r;v++)c.x=_/t,c.y=v/r,d.push(c.x,c.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ls(new th[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class nh extends Te{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,r=new A,s=new A;if(e.index!==null){const o=e.attributes.position,a=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],f=h.start,d=h.count;for(let p=f,y=f+d;p<y;p+=3)for(let x=0;x<3;x++){const m=a.getX(p+x),g=a.getX(p+(x+1)%3);r.fromBufferAttribute(o,m),s.fromBufferAttribute(o,g),md(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;r.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),md(r,s,n)===!0&&(t.push(r.x,r.y,r.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new xe(t,3))}}}function md(i,e,t){const n="".concat(i.x,",").concat(i.y,",").concat(i.z,"-").concat(e.x,",").concat(e.y,",").concat(e.z),r="".concat(e.x,",").concat(e.y,",").concat(e.z,"-").concat(i.x,",").concat(i.y,",").concat(i.z);return t.has(n)===!0||t.has(r)===!0?!1:(t.add(n,r),!0)}var gd=Object.freeze({__proto__:null,BoxGeometry:Bn,BoxBufferGeometry:Bn,CircleGeometry:Qr,CircleBufferGeometry:Qr,ConeGeometry:es,ConeBufferGeometry:es,CylinderGeometry:ui,CylinderBufferGeometry:ui,DodecahedronGeometry:ts,DodecahedronBufferGeometry:ts,EdgesGeometry:ju,ExtrudeGeometry:Mn,ExtrudeBufferGeometry:Mn,IcosahedronGeometry:ns,IcosahedronBufferGeometry:ns,LatheGeometry:is,LatheBufferGeometry:is,OctahedronGeometry:er,OctahedronBufferGeometry:er,PlaneGeometry:Ki,PlaneBufferGeometry:Ki,PolyhedronGeometry:bn,PolyhedronBufferGeometry:bn,RingGeometry:rs,RingBufferGeometry:rs,ShapeGeometry:tr,ShapeBufferGeometry:tr,SphereGeometry:nr,SphereBufferGeometry:nr,TetrahedronGeometry:ss,TetrahedronBufferGeometry:ss,TorusGeometry:os,TorusBufferGeometry:os,TorusKnotGeometry:as,TorusKnotBufferGeometry:as,TubeGeometry:ls,TubeBufferGeometry:ls,WireframeGeometry:nh});class ih extends wt{constructor(e){super(),this.type="ShadowMaterial",this.color=new de(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}ih.prototype.isShadowMaterial=!0;class Ml extends wt{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new de(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Ml.prototype.isMeshStandardMaterial=!0;class rh extends Ml{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ne(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return St(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new de(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new de(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new de(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}rh.prototype.isMeshPhysicalMaterial=!0;class sh extends wt{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new de(16777215),this.specular=new de(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=po,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}sh.prototype.isMeshPhongMaterial=!0;class oh extends wt{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new de(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}oh.prototype.isMeshToonMaterial=!0;class ah extends wt{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}ah.prototype.isMeshNormalMaterial=!0;class lh extends wt{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new de(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=po,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}lh.prototype.isMeshLambertMaterial=!0;class ch extends wt{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new de(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=lr,this.normalScale=new ne(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}ch.prototype.isMeshMatcapMaterial=!0;class uh extends bt{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}uh.prototype.isLineDashedMaterial=!0;var HE=Object.freeze({__proto__:null,ShadowMaterial:ih,SpriteMaterial:dl,RawShaderMaterial:fs,ShaderMaterial:zn,PointsMaterial:fr,MeshPhysicalMaterial:rh,MeshStandardMaterial:Ml,MeshPhongMaterial:sh,MeshToonMaterial:oh,MeshNormalMaterial:ah,MeshLambertMaterial:lh,MeshDepthMaterial:ul,MeshDistanceMaterial:hl,MeshBasicMaterial:Gn,MeshMatcapMaterial:ch,LineDashedMaterial:uh,LineBasicMaterial:bt,Material:wt});const Ze={arraySlice:function(i,e,t){return Ze.isTypedArray(i)?new i.constructor(i.subarray(e,t!==void 0?t:i.length)):i.slice(e,t)},convertArray:function(i,e,t){return!i||!t&&i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)},isTypedArray:function(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)},getKeyframeOrder:function(i){function e(r,s){return i[r]-i[s]}const t=i.length,n=new Array(t);for(let r=0;r!==t;++r)n[r]=r;return n.sort(e),n},sortedArray:function(i,e,t){const n=i.length,r=new i.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)r[o++]=i[a+l]}return r},flattenJSON:function(i,e,t,n){let r=1,s=i[0];for(;s!==void 0&&s[n]===void 0;)s=i[r++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=i[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=i[r++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=i[r++];while(s!==void 0)},subclip:function(i,e,t,n,r=30){const s=i.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],f=[];for(let d=0;d<c.times.length;++d){const p=c.times[d]*r;if(!(p<t||p>=n)){h.push(c.times[d]);for(let y=0;y<u;++y)f.push(c.values[d*u+y])}}h.length!==0&&(c.times=Ze.convertArray(h,c.times.constructor),c.values=Ze.convertArray(f,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(i,e=0,t=i,n=30){n<=0&&(n=30);const r=t.tracks.length,s=e/n;for(let o=0;o<r;++o){const a=t.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=i.tracks.find(function(m){return m.name===a.name&&m.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let f=0;const d=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=d/3);const p=a.times.length-1;let y;if(s<=a.times[0]){const m=u,g=h-u;y=Ze.arraySlice(a.values,m,g)}else if(s>=a.times[p]){const m=p*h+u,g=m+h-u;y=Ze.arraySlice(a.values,m,g)}else{const m=a.createInterpolant(),g=u,_=h-u;m.evaluate(s),y=Ze.arraySlice(m.resultBuffer,g,_)}l==="quaternion"&&new At().fromArray(y).normalize().conjugate().toArray(y);const x=c.times.length;for(let m=0;m<x;++m){const g=m*d+f;if(l==="quaternion")At.multiplyQuaternionsFlat(c.values,g,y,0,c.values,g);else{const _=d-f*2;for(let v=0;v<_;++v)c.values[g+v]-=y[v]}}}return i.blendMode=Bu,i}};class Un{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<r)){for(let a=n+2;;){if(r===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=r,r=t[++n],e<r)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===l)break;if(r=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(r=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r;for(let o=0;o!==r;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Un.prototype.beforeStart_=Un.prototype.copySampleValue_;Un.prototype.afterEnd_=Un.prototype.copySampleValue_;class g0 extends Un{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Oi,endingEnd:Oi}}intervalChanged_(e,t,n){const r=this.parameterPositions;let s=e-2,o=e+1,a=r[s],l=r[o];if(a===void 0)switch(this.getSettings_().endingStart){case Ui:s=e,a=2*t-n;break;case eo:s=r.length-2,a=t+r[s]-r[s+1];break;default:s=e,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ui:o=e,l=2*n-t;break;case eo:o=1,l=n+r[1]-r[0];break;default:o=e-1,l=t}const c=(n-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,f=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),y=p*p,x=y*p,m=-f*x+2*f*y-f*p,g=(1+f)*x+(-1.5-2*f)*y+(-.5+f)*p+1,_=(-1-d)*x+(1.5+d)*y+.5*p,v=d*x-d*y;for(let S=0;S!==a;++S)s[S]=m*o[u+S]+g*o[c+S]+_*o[l+S]+v*o[h+S];return s}}class hh extends Un{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(r-t),h=1-u;for(let f=0;f!==a;++f)s[f]=o[c+f]*h+o[l+f]*u;return s}}class y0 extends Un{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class fn{constructor(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Ze.convertArray(t,this.TimeBufferType),this.values=Ze.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Ze.convertArray(e.times,Array),values:Ze.convertArray(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new y0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new hh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new g0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ks:t=this.InterpolantFactoryMethodDiscrete;break;case Qs:t=this.InterpolantFactoryMethodLinear;break;case Aa:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ks;case this.InterpolantFactoryMethodLinear:return Qs;case this.InterpolantFactoryMethodSmooth:return Aa}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let s=0,o=r-1;for(;s!==r&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==r){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=Ze.arraySlice(n,s,o),this.values=Ze.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(r!==void 0&&Ze.isTypedArray(r))for(let a=0,l=r.length;a!==l;++a){const c=r[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=Ze.arraySlice(this.times),t=Ze.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===Aa,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(r)l=!0;else{const h=a*n,f=h-n,d=h+n;for(let p=0;p!==n;++p){const y=t[h+p];if(y!==t[f+p]||y!==t[d+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,f=o*n;for(let d=0;d!==n;++d)t[f+d]=t[h+d]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=Ze.arraySlice(e,0,o),this.values=Ze.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=Ze.arraySlice(this.times,0),t=Ze.arraySlice(this.values,0),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}fn.prototype.TimeBufferType=Float32Array;fn.prototype.ValueBufferType=Float32Array;fn.prototype.DefaultInterpolation=Qs;class dr extends fn{}dr.prototype.ValueTypeName="bool";dr.prototype.ValueBufferType=Array;dr.prototype.DefaultInterpolation=Ks;dr.prototype.InterpolantFactoryMethodLinear=void 0;dr.prototype.InterpolantFactoryMethodSmooth=void 0;class fh extends fn{}fh.prototype.ValueTypeName="color";class oo extends fn{}oo.prototype.ValueTypeName="number";class x0 extends Un{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(r-t);let c=e*a;for(let u=c+a;c!==u;c+=4)At.slerpFlat(s,0,o,c-a,o,c,l);return s}}class ps extends fn{InterpolantFactoryMethodLinear(e){return new x0(this.times,this.values,this.getValueSize(),e)}}ps.prototype.ValueTypeName="quaternion";ps.prototype.DefaultInterpolation=Qs;ps.prototype.InterpolantFactoryMethodSmooth=void 0;class pr extends fn{}pr.prototype.ValueTypeName="string";pr.prototype.ValueBufferType=Array;pr.prototype.DefaultInterpolation=Ks;pr.prototype.InterpolantFactoryMethodLinear=void 0;pr.prototype.InterpolantFactoryMethodSmooth=void 0;class ao extends fn{}ao.prototype.ValueTypeName="vector";class lo{constructor(e,t=-1,n,r=tl){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=$t(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(kE(n[o]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(fn.toJSON(n[s]));return r}static CreateFromMorphTargetSequence(e,t,n,r){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=Ze.getKeyframeOrder(l);l=Ze.sortedArray(l,1,u),c=Ze.sortedArray(c,1,u),!r&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new oo(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const r=e;n=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let f=r[h];f||(r[h]=f=[]),f.push(c)}}const o=[];for(const a in r)o.push(this.CreateFromMorphTargetSequence(a,r[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,f,d,p,y){if(d.length!==0){const x=[],m=[];Ze.flattenJSON(d,x,m,p),x.length!==0&&y.push(new h(f,x,m))}},r=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const f=c[h].keys;if(!(!f||f.length===0))if(f[0].morphTargets){const d={};let p;for(p=0;p<f.length;p++)if(f[p].morphTargets)for(let y=0;y<f[p].morphTargets.length;y++)d[f[p].morphTargets[y]]=-1;for(const y in d){const x=[],m=[];for(let g=0;g!==f[p].morphTargets.length;++g){const _=f[p];x.push(_.time),m.push(_.morphTarget===y?1:0)}r.push(new oo(".morphTargetInfluence["+y+"]",x,m))}l=d.length*(o||1)}else{const d=".bones["+t[h].name+"]";n(ao,d+".position",f,"pos",r),n(ps,d+".quaternion",f,"rot",r),n(ao,d+".scale",f,"scl",r)}}return r.length===0?null:new this(s,l,r,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,r=e.length;n!==r;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function GE(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return oo;case"vector":case"vector2":case"vector3":case"vector4":return ao;case"color":return fh;case"quaternion":return ps;case"bool":case"boolean":return dr;case"string":return pr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function kE(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=GE(i.type);if(i.times===void 0){const t=[],n=[];Ze.flattenJSON(i.keys,t,n,"value"),i.times=t,i.values=n}return e.parse!==void 0?e.parse(i):new e(i.name,i.times,i.values,i.interpolation)}const ir={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class dh{constructor(e,t,n){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,f=c.length;h<f;h+=2){const d=c[h],p=c[h+1];if(d.global&&(d.lastIndex=0),d.test(u))return p}return null}}}const v0=new dh;class Bt{constructor(e){this.manager=e!==void 0?e:v0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Pn={};class Sn extends Bt{constructor(e){super(e)}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ir.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Pn[e]!==void 0){Pn[e].push({onLoad:t,onProgress:n,onError:r});return}Pn[e]=[],Pn[e].push({onLoad:t,onProgress:n,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(o).then(a=>{if(a.status===200||a.status===0){a.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received.");const l=Pn[e],c=a.body.getReader(),u=a.headers.get("Content-Length"),h=u?parseInt(u):0,f=h!==0;let d=0;return new ReadableStream({start(p){y();function y(){c.read().then(({done:x,value:m})=>{if(x)p.close();else{d+=m.byteLength;const g=new ProgressEvent("progress",{lengthComputable:f,loaded:d,total:h});for(let _=0,v=l.length;_<v;_++){const S=l[_];S.onProgress&&S.onProgress(g)}p.enqueue(m),y()}})}}})}else throw Error('fetch for "'.concat(a.url,'" responded with ').concat(a.status,": ").concat(a.statusText))}).then(a=>{const l=new Response(a);switch(this.responseType){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(c=>new DOMParser().parseFromString(c,this.mimeType));case"json":return l.json();default:return l.text()}}).then(a=>{ir.add(e,a);const l=Pn[e];delete Pn[e];for(let c=0,u=l.length;c<u;c++){const h=l[c];h.onLoad&&h.onLoad(a)}this.manager.itemEnd(e)}).catch(a=>{const l=Pn[e];delete Pn[e];for(let c=0,u=l.length;c<u;c++){const h=l[c];h.onError&&h.onError(a)}this.manager.itemError(e),this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class VE extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new Sn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t=[];for(let n=0;n<e.length;n++){const r=lo.parse(e[n]);t.push(r)}return t}}class WE extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=this,o=[],a=new Ju,l=new Sn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(e[h],function(f){const d=s.parse(f,!0);o[h]={width:d.width,height:d.height,format:d.format,mipmaps:d.mipmaps},c+=1,c===6&&(d.mipmapCount===1&&(a.minFilter=mt),a.image=o,a.format=d.format,a.needsUpdate=!0,t&&t(a))},n,r)}if(Array.isArray(e))for(let h=0,f=e.length;h<f;++h)u(h);else l.load(e,function(h){const f=s.parse(h,!0);if(f.isCubemap){const d=f.mipmaps.length/f.mipmapCount;for(let p=0;p<d;p++){o[p]={mipmaps:[]};for(let y=0;y<f.mipmapCount;y++)o[p].mipmaps.push(f.mipmaps[p*f.mipmapCount+y]),o[p].format=f.format,o[p].width=f.width,o[p].height=f.height}a.image=o}else a.image.width=f.width,a.image.height=f.height,a.mipmaps=f.mipmaps;f.mipmapCount===1&&(a.minFilter=mt),a.format=f.format,a.needsUpdate=!0,t&&t(a)},n,r);return a}}class co extends Bt{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=ir.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=rl("img");function l(){u(),ir.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(h){u(),r&&r(h),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class _0 extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=new hs,o=new co(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,r)}for(let c=0;c<e.length;++c)l(c);return s}}class w0 extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new Yi,a=new Sn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(l){const c=s.parse(l);c&&(c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:Et,o.wrapT=c.wrapT!==void 0?c.wrapT:Et,o.magFilter=c.magFilter!==void 0?c.magFilter:mt,o.minFilter=c.minFilter!==void 0?c.minFilter:mt,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.encoding!==void 0&&(o.encoding=c.encoding),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=ar),c.mipmapCount===1&&(o.minFilter=mt),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,t&&t(o,c))},n,r),o}}class b0 extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=new yt,o=new co(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class hn extends ze{constructor(e,t=1){super(),this.type="Light",this.color=new de(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}hn.prototype.isLight=!0;class ph extends hn{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(ze.DefaultUp),this.updateMatrix(),this.groundColor=new de(t)}copy(e){return hn.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}ph.prototype.isHemisphereLight=!0;const yd=new _e,xd=new A,vd=new A;class mh{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ne(512,512),this.map=null,this.mapPass=null,this.matrix=new _e,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new yo,this._frameExtents=new ne(1,1),this._viewportCount=1,this._viewports=[new Ye(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;xd.setFromMatrixPosition(e.matrixWorld),t.position.copy(xd),vd.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(vd),t.updateMatrixWorld(),yd.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yd),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class M0 extends mh{constructor(){super(new vt(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=to*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}M0.prototype.isSpotLightShadow=!0;class gh extends hn{constructor(e,t,n=0,r=Math.PI/3,s=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(ze.DefaultUp),this.updateMatrix(),this.target=new ze,this.distance=n,this.angle=r,this.penumbra=s,this.decay=o,this.shadow=new M0}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}gh.prototype.isSpotLight=!0;const _d=new _e,Cs=new A,xc=new A;class S0 extends mh{constructor(){super(new vt(90,1,.5,500)),this._frameExtents=new ne(4,2),this._viewportCount=6,this._viewports=[new Ye(2,1,1,1),new Ye(0,1,1,1),new Ye(3,1,1,1),new Ye(1,1,1,1),new Ye(3,0,1,1),new Ye(1,0,1,1)],this._cubeDirections=[new A(1,0,0),new A(-1,0,0),new A(0,0,1),new A(0,0,-1),new A(0,1,0),new A(0,-1,0)],this._cubeUps=[new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,1,0),new A(0,0,1),new A(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Cs.setFromMatrixPosition(e.matrixWorld),n.position.copy(Cs),xc.copy(n.position),xc.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(xc),n.updateMatrixWorld(),r.makeTranslation(-Cs.x,-Cs.y,-Cs.z),_d.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(_d)}}S0.prototype.isPointLightShadow=!0;class yh extends hn{constructor(e,t,n=0,r=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new S0}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}yh.prototype.isPointLight=!0;class E0 extends mh{constructor(){super(new xo(-5,5,5,-5,.5,500))}}E0.prototype.isDirectionalLightShadow=!0;class xh extends hn{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(ze.DefaultUp),this.updateMatrix(),this.target=new ze,this.shadow=new E0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}xh.prototype.isDirectionalLight=!0;class vh extends hn{constructor(e,t){super(e,t),this.type="AmbientLight"}}vh.prototype.isAmbientLight=!0;class _h extends hn{constructor(e,t,n=10,r=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}_h.prototype.isRectAreaLight=!0;class wh{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new A)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*r),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*r)),t.addScaledVector(o[5],1.092548*(r*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){const n=e.x,r=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*r),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*r),t.addScaledVector(o[5],2*.429043*r*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(e,t+r*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(e,t+r*3);return e}static getBasisAt(e,t){const n=e.x,r=e.y,s=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-r*r)}}wh.prototype.isSphericalHarmonics3=!0;class So extends hn{constructor(e=new wh,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}So.prototype.isLightProbe=!0;class T0 extends Bt{constructor(e){super(e),this.textures={}}load(e,t,n,r){const s=this,o=new Sn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const r=new HE[e.type];if(e.uuid!==void 0&&(r.uuid=e.uuid),e.name!==void 0&&(r.name=e.name),e.color!==void 0&&r.color!==void 0&&r.color.setHex(e.color),e.roughness!==void 0&&(r.roughness=e.roughness),e.metalness!==void 0&&(r.metalness=e.metalness),e.sheen!==void 0&&(r.sheen=e.sheen),e.sheenColor!==void 0&&(r.sheenColor=new de().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(r.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&r.emissive!==void 0&&r.emissive.setHex(e.emissive),e.specular!==void 0&&r.specular!==void 0&&r.specular.setHex(e.specular),e.specularIntensity!==void 0&&(r.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&r.specularColor!==void 0&&r.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(r.shininess=e.shininess),e.clearcoat!==void 0&&(r.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=e.clearcoatRoughness),e.transmission!==void 0&&(r.transmission=e.transmission),e.thickness!==void 0&&(r.thickness=e.thickness),e.attenuationDistance!==void 0&&(r.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&r.attenuationColor!==void 0&&r.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(r.fog=e.fog),e.flatShading!==void 0&&(r.flatShading=e.flatShading),e.blending!==void 0&&(r.blending=e.blending),e.combine!==void 0&&(r.combine=e.combine),e.side!==void 0&&(r.side=e.side),e.shadowSide!==void 0&&(r.shadowSide=e.shadowSide),e.opacity!==void 0&&(r.opacity=e.opacity),e.format!==void 0&&(r.format=e.format),e.transparent!==void 0&&(r.transparent=e.transparent),e.alphaTest!==void 0&&(r.alphaTest=e.alphaTest),e.depthTest!==void 0&&(r.depthTest=e.depthTest),e.depthWrite!==void 0&&(r.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(r.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(r.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(r.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(r.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(r.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(r.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(r.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(r.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(r.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(r.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(r.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(r.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(r.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(r.rotation=e.rotation),e.linewidth!==1&&(r.linewidth=e.linewidth),e.dashSize!==void 0&&(r.dashSize=e.dashSize),e.gapSize!==void 0&&(r.gapSize=e.gapSize),e.scale!==void 0&&(r.scale=e.scale),e.polygonOffset!==void 0&&(r.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(r.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(r.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(r.dithering=e.dithering),e.alphaToCoverage!==void 0&&(r.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(r.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(r.visible=e.visible),e.toneMapped!==void 0&&(r.toneMapped=e.toneMapped),e.userData!==void 0&&(r.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(r.uniforms[s]={},o.type){case"t":r.uniforms[s].value=n(o.value);break;case"c":r.uniforms[s].value=new de().setHex(o.value);break;case"v2":r.uniforms[s].value=new ne().fromArray(o.value);break;case"v3":r.uniforms[s].value=new A().fromArray(o.value);break;case"v4":r.uniforms[s].value=new Ye().fromArray(o.value);break;case"m3":r.uniforms[s].value=new gt().fromArray(o.value);break;case"m4":r.uniforms[s].value=new _e().fromArray(o.value);break;default:r.uniforms[s].value=o.value}}if(e.defines!==void 0&&(r.defines=e.defines),e.vertexShader!==void 0&&(r.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(r.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const s in e.extensions)r.extensions[s]=e.extensions[s];if(e.shading!==void 0&&(r.flatShading=e.shading===1),e.size!==void 0&&(r.size=e.size),e.sizeAttenuation!==void 0&&(r.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(r.map=n(e.map)),e.matcap!==void 0&&(r.matcap=n(e.matcap)),e.alphaMap!==void 0&&(r.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(r.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(r.bumpScale=e.bumpScale),e.normalMap!==void 0&&(r.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(r.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),r.normalScale=new ne().fromArray(s)}return e.displacementMap!==void 0&&(r.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(r.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(r.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(r.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(r.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(r.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(r.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(r.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(r.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(r.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(r.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(r.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(r.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(r.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(r.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(r.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(r.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(r.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(r.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(r.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(r.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(r.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(r.clearcoatNormalScale=new ne().fromArray(e.clearcoatNormalScale)),e.transmissionMap!==void 0&&(r.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(r.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(r.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(r.sheenRoughnessMap=n(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}}class Ua{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,r=e.length;n<r;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(n){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class bh extends Te{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}bh.prototype.isInstancedBufferGeometry=!0;class A0 extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new Sn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}parse(e){const t={},n={};function r(d,p){if(t[p]!==void 0)return t[p];const x=d.interleavedBuffers[p],m=s(d,x.buffer),g=Nr(x.type,m),_=new hr(g,x.stride);return _.uuid=x.uuid,t[p]=_,_}function s(d,p){if(n[p]!==void 0)return n[p];const x=d.arrayBuffers[p],m=new Uint32Array(x).buffer;return n[p]=m,m}const o=e.isInstancedBufferGeometry?new bh:new Te,a=e.data.index;if(a!==void 0){const d=Nr(a.type,a.array);o.setIndex(new He(d,1))}const l=e.data.attributes;for(const d in l){const p=l[d];let y;if(p.isInterleavedBufferAttribute){const x=r(e.data,p.data);y=new ci(x,p.itemSize,p.offset,p.normalized)}else{const x=Nr(p.type,p.array),m=p.isInstancedBufferAttribute?Qi:He;y=new m(x,p.itemSize,p.normalized)}p.name!==void 0&&(y.name=p.name),p.usage!==void 0&&y.setUsage(p.usage),p.updateRange!==void 0&&(y.updateRange.offset=p.updateRange.offset,y.updateRange.count=p.updateRange.count),o.setAttribute(d,y)}const c=e.data.morphAttributes;if(c)for(const d in c){const p=c[d],y=[];for(let x=0,m=p.length;x<m;x++){const g=p[x];let _;if(g.isInterleavedBufferAttribute){const v=r(e.data,g.data);_=new ci(v,g.itemSize,g.offset,g.normalized)}else{const v=Nr(g.type,g.array);_=new He(v,g.itemSize,g.normalized)}g.name!==void 0&&(_.name=g.name),y.push(_)}o.morphAttributes[d]=y}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(let d=0,p=h.length;d!==p;++d){const y=h[d];o.addGroup(y.start,y.count,y.materialIndex)}const f=e.data.boundingSphere;if(f!==void 0){const d=new A;f.center!==void 0&&d.fromArray(f.center),o.boundingSphere=new yi(d,f.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class qE extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=this,o=this.path===""?Ua.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Sn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(h){r!==void 0&&r(h),console.error("THREE:ObjectLoader: Can't parse "+e+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(c,t)},n,r)}async loadAsync(e,t){const n=this,r=this.path===""?Ua.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const s=new Sn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,r),o=this.parseImages(e.images,function(){t!==void 0&&t(c)}),a=this.parseTextures(e.textures,o),l=this.parseMaterials(e.materials,a),c=this.parseObject(e.object,s,l,a,n),u=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,u),t!==void 0){let h=!1;for(const f in o)if(o[f]instanceof HTMLImageElement){h=!0;break}h===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),l=this.parseObject(e.object,r,a,o,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,r=e.length;n<r;n++){const s=new vn().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},r={};if(t.traverse(function(s){s.isBone&&(r[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new yl().fromJSON(e[s],r);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const r=new A0;for(let s=0,o=e.length;s<o;s++){let a;const l=e[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=r.parse(l);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:l.type in gd?a=gd[l.type].fromJSON(l,t):console.warn('THREE.ObjectLoader: Unsupported geometry type "'.concat(l.type,'"'))}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),a.isBufferGeometry===!0&&l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(e,t){const n={},r={};if(e!==void 0){const s=new T0;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const l=e[o];if(l.type==="MultiMaterial"){const c=[];for(let u=0;u<l.materials.length;u++){const h=l.materials[u];n[h.uuid]===void 0&&(n[h.uuid]=s.parse(h)),c.push(n[h.uuid])}r[l.uuid]=c}else n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),r[l.uuid]=n[l.uuid]}}return r}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const r=e[n],s=lo.parse(r);t[s.uuid]=s}return t}parseImages(e,t){const n=this,r={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:Nr(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){const l=new dh(t);s=new co(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=e.length;c<u;c++){const h=e[c],f=h.url;if(Array.isArray(f)){r[h.uuid]=[];for(let d=0,p=f.length;d<p;d++){const y=f[d],x=a(y);x!==null&&(x instanceof HTMLImageElement?r[h.uuid].push(x):r[h.uuid].push(new Yi(x.data,x.width,x.height)))}}else{const d=a(h.url);d!==null&&(r[h.uuid]=d)}}}return r}async parseImagesAsync(e){const t=this,n={};let r;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await r.loadAsync(l)}else return o.data?{data:Nr(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){r=new co(this.manager),r.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const l=e[o],c=l.url;if(Array.isArray(c)){n[l.uuid]=[];for(let u=0,h=c.length;u<h;u++){const f=c[u],d=await s(f);d!==null&&(d instanceof HTMLImageElement?n[l.uuid].push(d):n[l.uuid].push(new Yi(d.data,d.width,d.height)))}}else{const u=await s(l.url);u!==null&&(n[l.uuid]=u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const r={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);let l;const c=t[a.image];Array.isArray(c)?(l=new hs(c),c.length===6&&(l.needsUpdate=!0)):(c&&c.data?l=new Yi(c.data,c.width,c.height):l=new yt(c),c&&(l.needsUpdate=!0)),l.uuid=a.uuid,a.name!==void 0&&(l.name=a.name),a.mapping!==void 0&&(l.mapping=n(a.mapping,XE)),a.offset!==void 0&&l.offset.fromArray(a.offset),a.repeat!==void 0&&l.repeat.fromArray(a.repeat),a.center!==void 0&&l.center.fromArray(a.center),a.rotation!==void 0&&(l.rotation=a.rotation),a.wrap!==void 0&&(l.wrapS=n(a.wrap[0],wd),l.wrapT=n(a.wrap[1],wd)),a.format!==void 0&&(l.format=a.format),a.type!==void 0&&(l.type=a.type),a.encoding!==void 0&&(l.encoding=a.encoding),a.minFilter!==void 0&&(l.minFilter=n(a.minFilter,bd)),a.magFilter!==void 0&&(l.magFilter=n(a.magFilter,bd)),a.anisotropy!==void 0&&(l.anisotropy=a.anisotropy),a.flipY!==void 0&&(l.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(l.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(l.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(l.userData=a.userData),r[a.uuid]=l}return r}parseObject(e,t,n,r,s){let o;function a(f){return t[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",f),t[f]}function l(f){if(f!==void 0){if(Array.isArray(f)){const d=[];for(let p=0,y=f.length;p<y;p++){const x=f[p];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),d.push(n[x])}return d}return n[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",f),n[f]}}function c(f){return r[f]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",f),r[f]}let u,h;switch(e.type){case"Scene":o=new fl,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new de(e.background):o.background=c(e.background)),e.environment!==void 0&&(o.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new _o(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new vo(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new vt(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new xo(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new vh(e.color,e.intensity);break;case"DirectionalLight":o=new xh(e.color,e.intensity);break;case"PointLight":o=new yh(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new _h(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new gh(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new ph(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new So().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),h=l(e.material),o=new ml(u,h),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),h=l(e.material),o=new dt(u,h);break;case"InstancedMesh":u=a(e.geometry),h=l(e.material);const f=e.count,d=e.instanceMatrix,p=e.instanceColor;o=new Yu(u,h,f),o.instanceMatrix=new Qi(new Float32Array(d.array),16),p!==void 0&&(o.instanceColor=new Qi(new Float32Array(p.array),p.itemSize));break;case"LOD":o=new a0;break;case"Line":o=new On(a(e.geometry),l(e.material));break;case"LineLoop":o=new $u(a(e.geometry),l(e.material));break;case"LineSegments":o=new kt(a(e.geometry),l(e.material));break;case"PointCloud":case"Points":o=new wo(a(e.geometry),l(e.material));break;case"Sprite":o=new pl(l(e.material));break;case"Group":o=new Hi;break;case"Bone":o=new gl;break;default:o=new ze}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const f=e.children;for(let d=0;d<f.length;d++)o.add(this.parseObject(f[d],t,n,r,s))}if(e.animations!==void 0){const f=e.animations;for(let d=0;d<f.length;d++){const p=f[d];o.animations.push(s[p])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const f=e.levels;for(let d=0;d<f.length;d++){const p=f[d],y=o.getObjectByProperty("uuid",p.object);y!==void 0&&o.addLevel(y,p.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const r=t[n.skeleton];r===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(r,n.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const XE={UVMapping:el,CubeReflectionMapping:sr,CubeRefractionMapping:or,EquirectangularReflectionMapping:Ys,EquirectangularRefractionMapping:$s,CubeUVReflectionMapping:us,CubeUVRefractionMapping:mo},wd={RepeatWrapping:Js,ClampToEdgeWrapping:Et,MirroredRepeatWrapping:js},bd={NearestFilter:ft,NearestMipmapNearestFilter:za,NearestMipmapLinearFilter:Oa,LinearFilter:mt,LinearMipmapNearestFilter:Nu,LinearMipmapLinearFilter:ar};class C0 extends Bt{constructor(e){super(e),typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=ir.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){ir.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){r&&r(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}C0.prototype.isImageBitmapLoader=!0;let pa;const Mh={getContext:function(){return pa===void 0&&(pa=new(window.AudioContext||window.webkitAudioContext)),pa},setContext:function(i){pa=i}};class L0 extends Bt{constructor(e){super(e)}load(e,t,n,r){const s=this,o=new Sn(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);Mh.getContext().decodeAudioData(l,function(u){t(u)})}catch(l){r?r(l):console.error(l),s.manager.itemError(e)}},n,r)}}class R0 extends So{constructor(e,t,n=1){super(void 0,n);const r=new de().set(e),s=new de().set(t),o=new A(r.r,r.g,r.b),a=new A(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}R0.prototype.isHemisphereLightProbe=!0;class P0 extends So{constructor(e,t=1){super(void 0,t);const n=new de().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}P0.prototype.isAmbientLightProbe=!0;const Md=new _e,Sd=new _e;class YE{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new vt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new vt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const r=e.projectionMatrix.clone(),s=t.eyeSep/2,o=s*t.near/t.focus,a=t.near*Math.tan(Xi*t.fov*.5)/t.zoom;let l,c;Sd.elements[12]=-s,Md.elements[12]=s,l=-a*t.aspect+o,c=a*t.aspect+o,r.elements[0]=2*t.near/(c-l),r.elements[8]=(c+l)/(c-l),this.cameraL.projectionMatrix.copy(r),l=-a*t.aspect-o,c=a*t.aspect-o,r.elements[0]=2*t.near/(c-l),r.elements[8]=(c+l)/(c-l),this.cameraR.projectionMatrix.copy(r)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Sd),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Md)}}class I0{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Ed(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Ed();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Ed(){return(typeof performance>"u"?Date:performance).now()}const Ri=new A,Td=new At,$E=new A,Pi=new A;class JE extends ze{constructor(){super(),this.type="AudioListener",this.context=Mh.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new I0}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Ri,Td,$E),Pi.set(0,0,-1).applyQuaternion(Td),t.positionX){const r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Ri.x,r),t.positionY.linearRampToValueAtTime(Ri.y,r),t.positionZ.linearRampToValueAtTime(Ri.z,r),t.forwardX.linearRampToValueAtTime(Pi.x,r),t.forwardY.linearRampToValueAtTime(Pi.y,r),t.forwardZ.linearRampToValueAtTime(Pi.z,r),t.upX.linearRampToValueAtTime(n.x,r),t.upY.linearRampToValueAtTime(n.y,r),t.upZ.linearRampToValueAtTime(n.z,r)}else t.setPosition(Ri.x,Ri.y,Ri.z),t.setOrientation(Pi.x,Pi.y,Pi.z,n.x,n.y,n.z)}}class Sh extends ze{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Ii=new A,Ad=new At,jE=new A,Di=new A;class ZE extends Sh{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ii,Ad,jE),Di.set(0,0,1).applyQuaternion(Ad);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ii.x,n),t.positionY.linearRampToValueAtTime(Ii.y,n),t.positionZ.linearRampToValueAtTime(Ii.z,n),t.orientationX.linearRampToValueAtTime(Di.x,n),t.orientationY.linearRampToValueAtTime(Di.y,n),t.orientationZ.linearRampToValueAtTime(Di.z,n)}else t.setPosition(Ii.x,Ii.y,Ii.z),t.setOrientation(Di.x,Di.y,Di.z)}}class D0{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class F0{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,s,o;switch(t){case"quaternion":r=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":r=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:r=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,s=e*r+r;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==r;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,r)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,r=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,r=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=t*this._origIndex;this._mixBufferRegion(n,r,l,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,r);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,r=n*this._origIndex;e.getValue(t,r);for(let s=n,o=r;s!==o;++s)t[s]=t[r+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,r,s){if(r>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,r){At.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,s){const o=this._workIndex*s;At.multiplyQuaternionsFlat(e,o,e,t,e,n),At.slerpFlat(e,t,e,t,e,o,r)}_lerp(e,t,n,r,s){const o=1-r;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*r}}_lerpAdditive(e,t,n,r,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*r}}}const Eh="\\[\\]\\.:\\/",KE=new RegExp("["+Eh+"]","g"),Th="[^"+Eh+"]",QE="[^"+Eh.replace("\\.","")+"]",eT=/((?:WC+[\/:])*)/.source.replace("WC",Th),tT=/(WCOD+)?/.source.replace("WCOD",QE),nT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Th),iT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Th),rT=new RegExp("^"+eT+tT+nT+iT+"$"),sT=["material","materials","bones"];class oT{constructor(e,t,n){const r=n||ke.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class ke{constructor(e,t,n){this.path=t,this.parsedPath=n||ke.parseTrackName(t),this.node=ke.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new ke.Composite(e,t,n):new ke(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(KE,"")}static parseTrackName(e){const t=rT.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=n.nodeName.substring(r+1);sT.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(!t||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=n(a.children);if(l)return l}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=ke.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[r];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ke.Composite=oT;ke.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};ke.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};ke.prototype.GetterByBindingType=[ke.prototype._getValue_direct,ke.prototype._getValue_array,ke.prototype._getValue_arrayElement,ke.prototype._getValue_toArray];ke.prototype.SetterByBindingTypeAndVersioning=[[ke.prototype._setValue_direct,ke.prototype._setValue_direct_setNeedsUpdate,ke.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ke.prototype._setValue_array,ke.prototype._setValue_array_setNeedsUpdate,ke.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ke.prototype._setValue_arrayElement,ke.prototype._setValue_arrayElement_setNeedsUpdate,ke.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ke.prototype._setValue_fromArray,ke.prototype._setValue_fromArray_setNeedsUpdate,ke.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class N0{constructor(){this.uuid=$t(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,r=arguments.length;n!==r;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,r=this._parsedPaths,s=this._bindings,o=s.length;let a,l=e.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const f=arguments[u],d=f.uuid;let p=t[d];if(p===void 0){p=l++,t[d]=p,e.push(f);for(let y=0,x=o;y!==x;++y)s[y].push(new ke(f,n[y],r[y]))}else if(p<c){a=e[p];const y=--c,x=e[y];t[x.uuid]=p,e[p]=x,t[d]=y,e[y]=f;for(let m=0,g=o;m!==g;++m){const _=s[m],v=_[y];let S=_[p];_[p]=v,S===void 0&&(S=new ke(f,n[m],r[m])),_[y]=S}}else e[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=t[c];if(u!==void 0&&u>=s){const h=s++,f=e[h];t[f.uuid]=u,e[u]=f,t[c]=h,e[h]=l;for(let d=0,p=r;d!==p;++d){const y=n[d],x=y[h],m=y[u];y[u]=x,y[h]=m}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,r=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=t[u];if(h!==void 0)if(delete t[u],h<s){const f=--s,d=e[f],p=--o,y=e[p];t[d.uuid]=h,e[h]=d,t[y.uuid]=f,e[f]=y,e.pop();for(let x=0,m=r;x!==m;++x){const g=n[x],_=g[f],v=g[p];g[h]=_,g[f]=v,g.pop()}}else{const f=--o,d=e[f];f>0&&(t[d.uuid]=h),e[h]=d,e.pop();for(let p=0,y=r;p!==y;++p){const x=n[p];x[h]=x[f],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let r=n[e];const s=this._bindings;if(r!==void 0)return s[r];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);r=s.length,n[e]=r,o.push(e),a.push(t),s.push(h);for(let f=u,d=l.length;f!==d;++f){const p=l[f];h[f]=new ke(p,e,t)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const r=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=e[a];t[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),r[n]=r[a],r.pop()}}}N0.prototype.isAnimationObjectGroup=!0;class aT{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:Oi,endingEnd:Oi};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Eg,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const r=this._clip.duration,s=e._clip.duration,o=s/r,a=r/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,s=r.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=r._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const l=(e-s)*n;if(l<0||n===0)return;this._startTime=null,t=n*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Bu:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case tl:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(r,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let r=this.time+e,s=this._loopCount;const o=n===Tg;if(e===0)return s===-1?r:o&&(s&1)===1?t-r:r;if(n===Sg){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),r>=t||r<0){const a=Math.floor(r/t);r-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=r;if(o&&(s&1)===1)return t-r}return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=Ui,r.endingEnd=Ui):(e?r.endingStart=this.zeroSlopeAtStart?Ui:Oi:r.endingStart=eo,t?r.endingEnd=this.zeroSlopeAtEnd?Ui:Oi:r.endingEnd=eo)}_scheduleFading(e,t,n){const r=this._mixer,s=r.time;let o=this._weightInterpolant;o===null&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}class B0 extends gi{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,r=e._clip.tracks,s=r.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const f=r[h],d=f.name;let p=u[d];if(p!==void 0)o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,d));continue}const y=t&&t._propertyBindings[h].binding.parsedPath;p=new F0(ke.create(n,d,y),f.ValueTypeName,f.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,d),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,r=e._clip.uuid,s=this._actionsByClip[r];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,r,n)}const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=r.length,r.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null;const h=a.actionByRoot,f=(e._localRoot||this._root).uuid;delete h[f],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,r=t.length;n!==r;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,s=this._bindings;let o=r[t];o===void 0&&(o={},r[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[r],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,s=t[r];e._cacheIndex=r,t[r]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new hh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,s=t[r];e.__cacheIndex=r,t[r]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const r=t||this._root,s=r.uuid;let o=typeof e=="string"?lo.findByName(r,e):e;const a=o!==null?o.uuid:e,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=tl),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new aT(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,r=n.uuid,s=typeof e=="string"?lo.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[r]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,r=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(r,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,r=this._actionsByClip,s=r[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete r[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const r=this._bindingsByRootAndName,s=r[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}B0.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Sl{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Sl(this.value.clone===void 0?this.value:this.value.clone())}}class z0 extends hr{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}z0.prototype.isInstancedInterleavedBuffer=!0;class O0{constructor(e,t,n,r,s){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}O0.prototype.isGLBufferAttribute=!0;class lT{constructor(e,t,n=0,r=1/0){this.ray=new xi(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new ku,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return su(e,this,n,t),n.sort(Cd),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)su(e[r],this,n,t);return n.sort(Cd),n}}function Cd(i,e){return i.distance-e.distance}function su(i,e,t,n){if(i.layers.test(e.layers)&&i.raycast(e,t),n===!0){const r=i.children;for(let s=0,o=r.length;s<o;s++)su(r[s],e,t,!0)}}class cT{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(St(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class uT{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Ld=new ne;class ms{constructor(e=new ne(1/0,1/0),t=new ne(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ld.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ld.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}ms.prototype.isBox2=!0;const Rd=new A,ma=new A;class U0{constructor(e=new A,t=new A){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Rd.subVectors(e,this.start),ma.subVectors(this.end,this.start);const n=ma.dot(ma);let s=ma.dot(Rd)/n;return t&&(s=St(s,0,1)),s}closestPointToPoint(e,t,n){const r=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Pd=new A;class hT extends ze{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Te,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;r.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new xe(r,3));const s=new bt({fog:!1,toneMapped:!1});this.cone=new kt(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Pd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Pd),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Zn=new A,ga=new _e,vc=new _e;class H0 extends kt{constructor(e){const t=G0(e),n=new Te,r=[],s=[],o=new de(0,0,1),a=new de(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new xe(r,3)),n.setAttribute("color",new xe(s,3));const l=new bt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,r=n.getAttribute("position");vc.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(ga.multiplyMatrices(vc,a.matrixWorld),Zn.setFromMatrixPosition(ga),r.setXYZ(o,Zn.x,Zn.y,Zn.z),ga.multiplyMatrices(vc,a.parent.matrixWorld),Zn.setFromMatrixPosition(ga),r.setXYZ(o+1,Zn.x,Zn.y,Zn.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function G0(i){const e=[];i&&i.isBone&&e.push(i);for(let t=0;t<i.children.length;t++)e.push.apply(e,G0(i.children[t]));return e}class fT extends dt{constructor(e,t,n){const r=new nr(t,4,2),s=new Gn({wireframe:!0,fog:!1,toneMapped:!1});super(r,s),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const dT=new A,Id=new de,Dd=new de;class pT extends ze{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new er(t);r.rotateY(Math.PI*.5),this.material=new Gn({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=r.getAttribute("position"),o=new Float32Array(s.count*3);r.setAttribute("color",new He(o,3)),this.add(new dt(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Id.copy(this.light.color),Dd.copy(this.light.groundColor);for(let n=0,r=t.count;n<r;n++){const s=n<r/2?Id:Dd;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(dT.setFromMatrixPosition(this.light.matrixWorld).negate())}}class k0 extends kt{constructor(e=10,t=10,n=4473924,r=8947848){n=new de(n),r=new de(r);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let f=0,d=0,p=-a;f<=t;f++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const y=f===s?n:r;y.toArray(c,d),d+=3,y.toArray(c,d),d+=3,y.toArray(c,d),d+=3,y.toArray(c,d),d+=3}const u=new Te;u.setAttribute("position",new xe(l,3)),u.setAttribute("color",new xe(c,3));const h=new bt({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}}class mT extends kt{constructor(e=10,t=16,n=8,r=64,s=4473924,o=8947848){s=new de(s),o=new de(o);const a=[],l=[];for(let h=0;h<=t;h++){const f=h/t*(Math.PI*2),d=Math.sin(f)*e,p=Math.cos(f)*e;a.push(0,0,0),a.push(d,0,p);const y=h&1?s:o;l.push(y.r,y.g,y.b),l.push(y.r,y.g,y.b)}for(let h=0;h<=n;h++){const f=h&1?s:o,d=e-e/n*h;for(let p=0;p<r;p++){let y=p/r*(Math.PI*2),x=Math.sin(y)*d,m=Math.cos(y)*d;a.push(x,0,m),l.push(f.r,f.g,f.b),y=(p+1)/r*(Math.PI*2),x=Math.sin(y)*d,m=Math.cos(y)*d,a.push(x,0,m),l.push(f.r,f.g,f.b)}}const c=new Te;c.setAttribute("position",new xe(a,3)),c.setAttribute("color",new xe(l,3));const u=new bt({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}}const Fd=new A,ya=new A,Nd=new A;class gT extends ze{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let r=new Te;r.setAttribute("position",new xe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new bt({fog:!1,toneMapped:!1});this.lightPlane=new On(r,s),this.add(this.lightPlane),r=new Te,r.setAttribute("position",new xe([0,0,0,0,0,1],3)),this.targetLine=new On(r,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Fd.setFromMatrixPosition(this.light.matrixWorld),ya.setFromMatrixPosition(this.light.target.matrixWorld),Nd.subVectors(ya,Fd),this.lightPlane.lookAt(ya),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(ya),this.targetLine.scale.z=Nd.length()}}const xa=new A,rt=new go;class yT extends kt{constructor(e){const t=new Te,n=new bt({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],s=[],o={},a=new de(16755200),l=new de(16711680),c=new de(43775),u=new de(16777215),h=new de(3355443);f("n1","n2",a),f("n2","n4",a),f("n4","n3",a),f("n3","n1",a),f("f1","f2",a),f("f2","f4",a),f("f4","f3",a),f("f3","f1",a),f("n1","f1",a),f("n2","f2",a),f("n3","f3",a),f("n4","f4",a),f("p","n1",l),f("p","n2",l),f("p","n3",l),f("p","n4",l),f("u1","u2",c),f("u2","u3",c),f("u3","u1",c),f("c","t",u),f("p","c",h),f("cn1","cn2",h),f("cn3","cn4",h),f("cf1","cf2",h),f("cf3","cf4",h);function f(p,y,x){d(p,x),d(y,x)}function d(p,y){r.push(0,0,0),s.push(y.r,y.g,y.b),o[p]===void 0&&(o[p]=[]),o[p].push(r.length/3-1)}t.setAttribute("position",new xe(r,3)),t.setAttribute("color",new xe(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap,n=1,r=1;rt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),at("c",t,e,rt,0,0,-1),at("t",t,e,rt,0,0,1),at("n1",t,e,rt,-n,-r,-1),at("n2",t,e,rt,n,-r,-1),at("n3",t,e,rt,-n,r,-1),at("n4",t,e,rt,n,r,-1),at("f1",t,e,rt,-n,-r,1),at("f2",t,e,rt,n,-r,1),at("f3",t,e,rt,-n,r,1),at("f4",t,e,rt,n,r,1),at("u1",t,e,rt,n*.7,r*1.1,-1),at("u2",t,e,rt,-n*.7,r*1.1,-1),at("u3",t,e,rt,0,r*2,-1),at("cf1",t,e,rt,-n,0,1),at("cf2",t,e,rt,n,0,1),at("cf3",t,e,rt,0,-r,1),at("cf4",t,e,rt,0,r,1),at("cn1",t,e,rt,-n,0,-1),at("cn2",t,e,rt,n,0,-1),at("cn3",t,e,rt,0,-r,-1),at("cn4",t,e,rt,0,r,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function at(i,e,t,n,r,s,o){xa.set(r,s,o).unproject(n);const a=e[i];if(a!==void 0){const l=t.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],xa.x,xa.y,xa.z)}}const va=new Zt;class V0 extends kt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(8*3),s=new Te;s.setIndex(new He(n,1)),s.setAttribute("position",new He(r,3)),super(s,new bt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&va.setFromObject(this.object),va.isEmpty())return;const t=va.min,n=va.max,r=this.geometry.attributes.position,s=r.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return kt.prototype.copy.call(this,e),this.object=e.object,this}}class xT extends kt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Te;s.setIndex(new He(n,1)),s.setAttribute("position",new xe(r,3)),super(s,new bt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class vT extends On{constructor(e,t=1,n=16776960){const r=n,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new Te;o.setAttribute("position",new xe(s,3)),o.computeBoundingSphere(),super(o,new bt({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],l=new Te;l.setAttribute("position",new xe(a,3)),l.computeBoundingSphere(),this.add(new dt(l,new Gn({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?lt:ji,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const Bd=new A;let _a,_c;class _T extends ze{constructor(e=new A(0,0,1),t=new A(0,0,0),n=1,r=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",_a===void 0&&(_a=new Te,_a.setAttribute("position",new xe([0,0,0,0,1,0],3)),_c=new ui(0,.5,1,5,1),_c.translate(0,-.5,0)),this.position.copy(t),this.line=new On(_a,new bt({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new dt(_c,new Gn({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Bd.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Bd,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class W0 extends kt{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],r=new Te;r.setAttribute("position",new xe(t,3)),r.setAttribute("color",new xe(n,3));const s=new bt({vertexColors:!0,toneMapped:!1});super(r,s),this.type="AxesHelper"}setColors(e,t,n){const r=new de,s=this.geometry.attributes.color.array;return r.set(e),r.toArray(s,0),r.toArray(s,3),r.set(t),r.toArray(s,6),r.toArray(s,9),r.set(n),r.toArray(s,12),r.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class wT{constructor(){this.type="ShapePath",this.color=new de,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new no,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,s,o){return this.currentPath.bezierCurveTo(e,t,n,r,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(g){const _=[];for(let v=0,S=g.length;v<S;v++){const T=g[v],b=new vn;b.curves=T.curves,_.push(b)}return _}function r(g,_){const v=_.length;let S=!1;for(let T=v-1,b=0;b<v;T=b++){let R=_[T],H=_[b],F=H.x-R.x,P=H.y-R.y;if(Math.abs(P)>Number.EPSILON){if(P<0&&(R=_[b],F=-F,H=_[T],P=-P),g.y<R.y||g.y>H.y)continue;if(g.y===R.y){if(g.x===R.x)return!0}else{const ee=P*(g.x-R.x)-F*(g.y-R.y);if(ee===0)return!0;if(ee<0)continue;S=!S}}else{if(g.y!==R.y)continue;if(H.x<=g.x&&g.x<=R.x||R.x<=g.x&&g.x<=H.x)return!0}}return S}const s=_n.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let a,l,c;const u=[];if(o.length===1)return l=o[0],c=new vn,c.curves=l.curves,u.push(c),u;let h=!s(o[0].getPoints());h=e?!h:h;const f=[],d=[];let p=[],y=0,x;d[y]=void 0,p[y]=[];for(let g=0,_=o.length;g<_;g++)l=o[g],x=l.getPoints(),a=s(x),a=e?!a:a,a?(!h&&d[y]&&y++,d[y]={s:new vn,p:x},d[y].s.curves=l.curves,h&&y++,p[y]=[]):p[y].push({h:l,p:x[0]});if(!d[0])return n(o);if(d.length>1){let g=!1;const _=[];for(let v=0,S=d.length;v<S;v++)f[v]=[];for(let v=0,S=d.length;v<S;v++){const T=p[v];for(let b=0;b<T.length;b++){const R=T[b];let H=!0;for(let F=0;F<d.length;F++)r(R.p,d[F].p)&&(v!==F&&_.push({froms:v,tos:F,hole:b}),H?(H=!1,f[F].push(R)):g=!0);H&&f[v].push(R)}}_.length>0&&(g||(p=f))}let m;for(let g=0,_=d.length;g<_;g++){c=d[g].s,u.push(c),m=p[g];for(let v=0,S=m.length;v<S;v++)c.holes.push(m[v].h)}return u}}const q0=new Float32Array(1),bT=new Int32Array(q0.buffer);class MT{static toHalfFloat(e){e>65504&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),e=65504),q0[0]=e;const t=bT[0];let n=t>>16&32768,r=t>>12&2047;const s=t>>23&255;return s<103?n:s>142?(n|=31744,n|=(s==255?0:1)&&t&8388607,n):s<113?(r|=2048,n|=(r>>114-s)+(r>>113-s&1),n):(n|=s-112<<10|r>>1,n+=r&1,n)}}const ST=0,ET=1,TT=0,AT=1,CT=2;function LT(i){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),i}function RT(i=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),i.isMultiMaterial=!0,i.materials=i,i.clone=function(){return i.slice()},i}function PT(i,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new wo(i,e)}function IT(i){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new pl(i)}function DT(i,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new wo(i,e)}function FT(i){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new fr(i)}function NT(i){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new fr(i)}function BT(i){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new fr(i)}function zT(i,e,t){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new A(i,e,t)}function OT(i,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new He(i,e).setUsage(Zr)}function UT(i,e){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Og(i,e)}function HT(i,e){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Ug(i,e)}function GT(i,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Hg(i,e)}function kT(i,e){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Gg(i,e)}function VT(i,e){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new sl(i,e)}function WT(i,e){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new kg(i,e)}function qT(i,e){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new ol(i,e)}function XT(i,e){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new xe(i,e)}function YT(i,e){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Wg(i,e)}Jt.create=function(i,e){return console.log("THREE.Curve.create() has been deprecated"),i.prototype=Object.create(Jt.prototype),i.prototype.constructor=i,i.prototype.getPoint=e,i};no.prototype.fromPoints=function(i){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(i)};function $T(i){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new W0(i)}function JT(i,e){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new V0(i,e)}function jT(i,e){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new kt(new ju(i.geometry),new bt({color:e!==void 0?e:16777215}))}k0.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};H0.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function ZT(i,e){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new kt(new nh(i.geometry),new bt({color:e!==void 0?e:16777215}))}Bt.prototype.extractUrlBase=function(i){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ua.extractUrlBase(i)};Bt.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function KT(i){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Sn(i)}function QT(i){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new w0(i)}ms.prototype.center=function(i){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(i)};ms.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()};ms.prototype.isIntersectionBox=function(i){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(i)};ms.prototype.size=function(i){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(i)};Zt.prototype.center=function(i){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(i)};Zt.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Zt.prototype.isIntersectionBox=function(i){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(i)};Zt.prototype.isIntersectionSphere=function(i){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(i)};Zt.prototype.size=function(i){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(i)};yi.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};yo.prototype.setFromMatrix=function(i){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(i)};U0.prototype.center=function(i){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(i)};gt.prototype.flattenToArrayOffset=function(i,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(i,e)};gt.prototype.multiplyVector3=function(i){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),i.applyMatrix3(this)};gt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};gt.prototype.applyToBufferAttribute=function(i){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),i.applyMatrix3(this)};gt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};gt.prototype.getInverse=function(i){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(i).invert()};_e.prototype.extractPosition=function(i){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(i)};_e.prototype.flattenToArrayOffset=function(i,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(i,e)};_e.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new A().setFromMatrixColumn(this,3)};_e.prototype.setRotationFromQuaternion=function(i){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(i)};_e.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};_e.prototype.multiplyVector3=function(i){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};_e.prototype.multiplyVector4=function(i){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};_e.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};_e.prototype.rotateAxis=function(i){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),i.transformDirection(this)};_e.prototype.crossVector=function(i){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};_e.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};_e.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};_e.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};_e.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};_e.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};_e.prototype.applyToBufferAttribute=function(i){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),i.applyMatrix4(this)};_e.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};_e.prototype.makeFrustum=function(i,e,t,n,r,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(i,e,n,t,r,s)};_e.prototype.getInverse=function(i){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(i).invert()};gn.prototype.isIntersectionLine=function(i){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(i)};At.prototype.multiplyVector3=function(i){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),i.applyQuaternion(this)};At.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};xi.prototype.isIntersectionBox=function(i){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(i)};xi.prototype.isIntersectionPlane=function(i){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(i)};xi.prototype.isIntersectionSphere=function(i){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(i)};ct.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};ct.prototype.barycoordFromPoint=function(i,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(i,e)};ct.prototype.midpoint=function(i){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(i)};ct.prototypenormal=function(i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(i)};ct.prototype.plane=function(i){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(i)};ct.barycoordFromPoint=function(i,e,t,n,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ct.getBarycoord(i,e,t,n,r)};ct.normal=function(i,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ct.getNormal(i,e,t,n)};vn.prototype.extractAllPoints=function(i){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(i)};vn.prototype.extrude=function(i){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Mn(this,i)};vn.prototype.makeGeometry=function(i){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new tr(this,i)};ne.prototype.fromAttribute=function(i,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,e,t)};ne.prototype.distanceToManhattan=function(i){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(i)};ne.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};A.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};A.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};A.prototype.getPositionFromMatrix=function(i){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(i)};A.prototype.getScaleFromMatrix=function(i){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(i)};A.prototype.getColumnFromMatrix=function(i,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,i)};A.prototype.applyProjection=function(i){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(i)};A.prototype.fromAttribute=function(i,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,e,t)};A.prototype.distanceToManhattan=function(i){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(i)};A.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Ye.prototype.fromAttribute=function(i,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(i,e,t)};Ye.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};ze.prototype.getChildByName=function(i){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(i)};ze.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};ze.prototype.translate=function(i,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,i)};ze.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};ze.prototype.applyMatrix=function(i){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(i)};Object.defineProperties(ze.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(i){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=i}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});dt.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(dt.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Ag},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});ml.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};vt.prototype.setLens=function(i,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(i)};Object.defineProperties(hn.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(i){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=i}},shadowCameraLeft:{set:function(i){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=i}},shadowCameraRight:{set:function(i){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=i}},shadowCameraTop:{set:function(i){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=i}},shadowCameraBottom:{set:function(i){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=i}},shadowCameraNear:{set:function(i){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=i}},shadowCameraFar:{set:function(i){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=i}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(i){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=i}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(i){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=i}},shadowMapHeight:{set:function(i){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=i}}});Object.defineProperties(He.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Zr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Zr)}}});He.prototype.setDynamic=function(i){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(i===!0?Zr:jr),this};He.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},He.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Te.prototype.addIndex=function(i){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(i)};Te.prototype.addAttribute=function(i,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(i,new He(arguments[1],arguments[2]))):i==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(i,e)};Te.prototype.addDrawCall=function(i,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(i,e)};Te.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Te.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Te.prototype.removeAttribute=function(i){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(i)};Te.prototype.applyMatrix=function(i){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(i)};Object.defineProperties(Te.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});hr.prototype.setDynamic=function(i){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(i===!0?Zr:jr),this};hr.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Mn.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Mn.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Mn.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};fl.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Sl.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this};Object.defineProperties(wt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new de}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(i){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===Iu}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(i){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=i}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(zn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(i){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=i}}});$e.prototype.clearTarget=function(i,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(i),this.clear(e,t,n)};$e.prototype.animate=function(i){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(i)};$e.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};$e.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};$e.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};$e.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};$e.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};$e.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};$e.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};$e.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};$e.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};$e.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};$e.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};$e.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};$e.prototype.enableScissorTest=function(i){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(i)};$e.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};$e.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};$e.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};$e.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};$e.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};$e.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};$e.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};$e.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};$e.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};$e.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties($e.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(i){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=i}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(i){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=i}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(i){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=i===!0?mi:Ct}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(i0.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function eA(i,e,t){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new ll(i,t)}Object.defineProperties(un.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(i){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=i}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(i){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=i}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(i){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=i}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(i){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=i}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(i){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=i}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(i){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=i}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(i){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=i}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(i){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=i}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(i){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=i}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(i){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=i}}});Sh.prototype.load=function(i){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new L0().load(i,function(n){e.setBuffer(n)}),this};D0.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};al.prototype.updateCubeMap=function(i,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(i,e)};al.prototype.clear=function(i,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(i,e,t,n)};cr.crossOrigin=void 0;cr.loadTexture=function(i,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const r=new b0;r.setCrossOrigin(this.crossOrigin);const s=r.load(i,t,void 0,n);return e&&(s.mapping=e),s};cr.loadTextureCube=function(i,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const r=new _0;r.setCrossOrigin(this.crossOrigin);const s=r.load(i,t,void 0,n);return e&&(s.mapping=e),s};cr.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};cr.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function tA(){console.error("THREE.CanvasRenderer has been removed")}function nA(){console.error("THREE.JSONLoader has been removed.")}const iA={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function rA(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}function sA(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new Te}function oA(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new Te}function aA(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function lA(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function cA(){console.error("THREE.ImmediateRenderObject has been removed.")}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ru}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ru);const uA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Rm,AddEquation:zi,AddOperation:Tm,AdditiveAnimationBlendMode:Bu,AdditiveBlending:Oc,AlphaFormat:Om,AlwaysDepth:vm,AlwaysStencilFunc:Ig,AmbientLight:vh,AmbientLightProbe:P0,AnimationClip:lo,AnimationLoader:VE,AnimationMixer:B0,AnimationObjectGroup:N0,AnimationUtils:Ze,ArcCurve:Zu,ArrayCamera:Xu,ArrowHelper:_T,Audio:Sh,AudioAnalyser:D0,AudioContext:Mh,AudioListener:JE,AudioLoader:L0,AxesHelper:W0,AxisHelper:$T,BackSide:lt,BasicDepthPacking:Lg,BasicShadowMap:q_,BinaryTextureLoader:QT,Bone:gl,BooleanKeyframeTrack:dr,BoundingBoxHelper:JT,Box2:ms,Box3:Zt,Box3Helper:xT,BoxBufferGeometry:Bn,BoxGeometry:Bn,BoxHelper:V0,BufferAttribute:He,BufferGeometry:Te,BufferGeometryLoader:A0,ByteType:Im,Cache:ir,Camera:go,CameraHelper:yT,CanvasRenderer:tA,CanvasTexture:c0,CatmullRomCurve3:Qu,CineonToneMapping:Lm,CircleBufferGeometry:Qr,CircleGeometry:Qr,ClampToEdgeWrapping:Et,Clock:I0,Color:de,ColorKeyframeTrack:fh,CompressedTexture:Ju,CompressedTextureLoader:WE,ConeBufferGeometry:es,ConeGeometry:es,CubeCamera:al,CubeReflectionMapping:sr,CubeRefractionMapping:or,CubeTexture:hs,CubeTextureLoader:_0,CubeUVReflectionMapping:us,CubeUVRefractionMapping:mo,CubicBezierCurve:xl,CubicBezierCurve3:eh,CubicInterpolant:g0,CullFaceBack:zc,CullFaceFront:rm,CullFaceFrontBack:W_,CullFaceNone:im,Curve:Jt,CurvePath:f0,CustomBlending:om,CustomToneMapping:Pm,CylinderBufferGeometry:ui,CylinderGeometry:ui,Cylindrical:uT,DataTexture:Yi,DataTexture2DArray:cl,DataTexture3D:qu,DataTextureLoader:w0,DataUtils:MT,DecrementStencilOp:nw,DecrementWrapStencilOp:rw,DefaultLoadingManager:v0,DepthFormat:qi,DepthStencilFormat:Jr,DepthTexture:u0,DirectionalLight:xh,DirectionalLightHelper:gT,DiscreteInterpolant:y0,DodecahedronBufferGeometry:ts,DodecahedronGeometry:ts,DoubleSide:Zi,DstAlphaFactor:dm,DstColorFactor:mm,DynamicBufferAttribute:OT,DynamicCopyUsage:xw,DynamicDrawUsage:Zr,DynamicReadUsage:mw,EdgesGeometry:ju,EdgesHelper:jT,EllipseCurve:bo,EqualDepth:wm,EqualStencilFunc:lw,EquirectangularReflectionMapping:Ys,EquirectangularRefractionMapping:$s,Euler:ur,EventDispatcher:gi,ExtrudeBufferGeometry:Mn,ExtrudeGeometry:Mn,FaceColors:AT,FileLoader:Sn,FlatShading:Iu,Float16BufferAttribute:Vg,Float32Attribute:XT,Float32BufferAttribute:xe,Float64Attribute:YT,Float64BufferAttribute:Wg,FloatType:xn,Fog:_o,FogExp2:vo,Font:lA,FontLoader:aA,FrontSide:ji,Frustum:yo,GLBufferAttribute:O0,GLSL1:_w,GLSL3:Qc,GammaEncoding:nl,GreaterDepth:Mm,GreaterEqualDepth:bm,GreaterEqualStencilFunc:fw,GreaterStencilFunc:uw,GridHelper:k0,Group:Hi,HalfFloatType:Vi,HemisphereLight:ph,HemisphereLightHelper:pT,HemisphereLightProbe:R0,IcosahedronBufferGeometry:ns,IcosahedronGeometry:ns,ImageBitmapLoader:C0,ImageLoader:co,ImageUtils:cr,ImmediateRenderObject:cA,IncrementStencilOp:tw,IncrementWrapStencilOp:iw,InstancedBufferAttribute:Qi,InstancedBufferGeometry:bh,InstancedInterleavedBuffer:z0,InstancedMesh:Yu,Int16Attribute:kT,Int16BufferAttribute:Gg,Int32Attribute:WT,Int32BufferAttribute:kg,Int8Attribute:UT,Int8BufferAttribute:Og,IntType:Fm,InterleavedBuffer:hr,InterleavedBufferAttribute:ci,Interpolant:Un,InterpolateDiscrete:Ks,InterpolateLinear:Qs,InterpolateSmooth:Aa,InvertStencilOp:sw,JSONLoader:nA,KeepStencilOp:Ca,KeyframeTrack:fn,LOD:a0,LatheBufferGeometry:is,LatheGeometry:is,Layers:ku,LensFlare:rA,LessDepth:_m,LessEqualDepth:Ba,LessEqualStencilFunc:cw,LessStencilFunc:aw,Light:hn,LightProbe:So,Line:On,Line3:U0,LineBasicMaterial:bt,LineCurve:Mo,LineCurve3:h0,LineDashedMaterial:uh,LineLoop:$u,LinePieces:ET,LineSegments:kt,LineStrip:ST,LinearEncoding:Ct,LinearFilter:mt,LinearInterpolant:hh,LinearMipMapLinearFilter:j_,LinearMipMapNearestFilter:J_,LinearMipmapLinearFilter:ar,LinearMipmapNearestFilter:Nu,LinearToneMapping:Am,Loader:Bt,LoaderUtils:Ua,LoadingManager:dh,LogLuvEncoding:Cg,LoopOnce:Sg,LoopPingPong:Tg,LoopRepeat:Eg,LuminanceAlphaFormat:Hm,LuminanceFormat:Um,MOUSE:k_,Material:wt,MaterialLoader:T0,Math:df,MathUtils:df,Matrix3:gt,Matrix4:_e,MaxEquation:kc,Mesh:dt,MeshBasicMaterial:Gn,MeshDepthMaterial:ul,MeshDistanceMaterial:hl,MeshFaceMaterial:LT,MeshLambertMaterial:lh,MeshMatcapMaterial:ch,MeshNormalMaterial:ah,MeshPhongMaterial:sh,MeshPhysicalMaterial:rh,MeshStandardMaterial:Ml,MeshToonMaterial:oh,MinEquation:Gc,MirroredRepeatWrapping:js,MixOperation:Em,MultiMaterial:RT,MultiplyBlending:Hc,MultiplyOperation:po,NearestFilter:ft,NearestMipMapLinearFilter:$_,NearestMipMapNearestFilter:Y_,NearestMipmapLinearFilter:Oa,NearestMipmapNearestFilter:za,NeverDepth:xm,NeverStencilFunc:ow,NoBlending:Fn,NoColors:TT,NoToneMapping:ii,NormalAnimationBlendMode:tl,NormalBlending:Hr,NotEqualDepth:Sm,NotEqualStencilFunc:hw,NumberKeyframeTrack:oo,Object3D:ze,ObjectLoader:qE,ObjectSpaceNormalMap:Pg,OctahedronBufferGeometry:er,OctahedronGeometry:er,OneFactor:um,OneMinusDstAlphaFactor:pm,OneMinusDstColorFactor:gm,OneMinusSrcAlphaFactor:Fu,OneMinusSrcColorFactor:fm,OrthographicCamera:xo,PCFShadowMap:Pu,PCFSoftShadowMap:sm,PMREMGenerator:Jg,ParametricGeometry:sA,Particle:IT,ParticleBasicMaterial:NT,ParticleSystem:DT,ParticleSystemMaterial:BT,Path:no,PerspectiveCamera:vt,Plane:gn,PlaneBufferGeometry:Ki,PlaneGeometry:Ki,PlaneHelper:vT,PointCloud:PT,PointCloudMaterial:FT,PointLight:yh,PointLightHelper:fT,Points:wo,PointsMaterial:fr,PolarGridHelper:mT,PolyhedronBufferGeometry:bn,PolyhedronGeometry:bn,PositionalAudio:ZE,PropertyBinding:ke,PropertyMixer:F0,QuadraticBezierCurve:vl,QuadraticBezierCurve3:_l,Quaternion:At,QuaternionKeyframeTrack:ps,QuaternionLinearInterpolant:x0,REVISION:Ru,RGBADepthPacking:Rg,RGBAFormat:Tt,RGBAIntegerFormat:Ym,RGBA_ASTC_10x10_Format:og,RGBA_ASTC_10x5_Format:ig,RGBA_ASTC_10x6_Format:rg,RGBA_ASTC_10x8_Format:sg,RGBA_ASTC_12x10_Format:ag,RGBA_ASTC_12x12_Format:lg,RGBA_ASTC_4x4_Format:Jm,RGBA_ASTC_5x4_Format:jm,RGBA_ASTC_5x5_Format:Zm,RGBA_ASTC_6x5_Format:Km,RGBA_ASTC_6x6_Format:Qm,RGBA_ASTC_8x5_Format:eg,RGBA_ASTC_8x6_Format:tg,RGBA_ASTC_8x8_Format:ng,RGBA_BPTC_Format:cg,RGBA_ETC2_EAC_Format:Kc,RGBA_PVRTC_2BPPV1_Format:jc,RGBA_PVRTC_4BPPV1_Format:Jc,RGBA_S3TC_DXT1_Format:Wc,RGBA_S3TC_DXT3_Format:qc,RGBA_S3TC_DXT5_Format:Xc,RGBDEncoding:Uu,RGBEEncoding:il,RGBEFormat:Gm,RGBFormat:Wi,RGBIntegerFormat:Xm,RGBM16Encoding:Ou,RGBM7Encoding:zu,RGB_ETC1_Format:$m,RGB_ETC2_Format:Zc,RGB_PVRTC_2BPPV1_Format:$c,RGB_PVRTC_4BPPV1_Format:Yc,RGB_S3TC_DXT1_Format:Vc,RGFormat:Wm,RGIntegerFormat:qm,RawShaderMaterial:fs,Ray:xi,Raycaster:lT,RectAreaLight:_h,RedFormat:km,RedIntegerFormat:Vm,ReinhardToneMapping:Cm,RepeatWrapping:Js,ReplaceStencilOp:ew,ReverseSubtractEquation:lm,RingBufferGeometry:rs,RingGeometry:rs,SRGB8_ALPHA8_ASTC_10x10_Format:wg,SRGB8_ALPHA8_ASTC_10x5_Format:xg,SRGB8_ALPHA8_ASTC_10x6_Format:vg,SRGB8_ALPHA8_ASTC_10x8_Format:_g,SRGB8_ALPHA8_ASTC_12x10_Format:bg,SRGB8_ALPHA8_ASTC_12x12_Format:Mg,SRGB8_ALPHA8_ASTC_4x4_Format:ug,SRGB8_ALPHA8_ASTC_5x4_Format:hg,SRGB8_ALPHA8_ASTC_5x5_Format:fg,SRGB8_ALPHA8_ASTC_6x5_Format:dg,SRGB8_ALPHA8_ASTC_6x6_Format:pg,SRGB8_ALPHA8_ASTC_8x5_Format:mg,SRGB8_ALPHA8_ASTC_8x6_Format:gg,SRGB8_ALPHA8_ASTC_8x8_Format:yg,Scene:fl,SceneUtils:iA,ShaderChunk:Ne,ShaderLib:ln,ShaderMaterial:zn,ShadowMaterial:ih,Shape:vn,ShapeBufferGeometry:tr,ShapeGeometry:tr,ShapePath:wT,ShapeUtils:_n,ShortType:Dm,Skeleton:yl,SkeletonHelper:H0,SkinnedMesh:ml,SmoothShading:X_,Sphere:yi,SphereBufferGeometry:nr,SphereGeometry:nr,Spherical:cT,SphericalHarmonics3:wh,SplineCurve:wl,SpotLight:gh,SpotLightHelper:hT,Sprite:pl,SpriteMaterial:dl,SrcAlphaFactor:Du,SrcAlphaSaturateFactor:ym,SrcColorFactor:hm,StaticCopyUsage:yw,StaticDrawUsage:jr,StaticReadUsage:pw,StereoCamera:YE,StreamCopyUsage:vw,StreamDrawUsage:dw,StreamReadUsage:gw,StringKeyframeTrack:pr,SubtractEquation:am,SubtractiveBlending:Uc,TOUCH:V_,TangentSpaceNormalMap:lr,TetrahedronBufferGeometry:ss,TetrahedronGeometry:ss,TextGeometry:oA,Texture:yt,TextureLoader:b0,TorusBufferGeometry:os,TorusGeometry:os,TorusKnotBufferGeometry:as,TorusKnotGeometry:as,Triangle:ct,TriangleFanDrawMode:K_,TriangleStripDrawMode:Z_,TrianglesDrawMode:Ag,TubeBufferGeometry:ls,TubeGeometry:ls,UVMapping:el,Uint16Attribute:VT,Uint16BufferAttribute:sl,Uint32Attribute:qT,Uint32BufferAttribute:ol,Uint8Attribute:HT,Uint8BufferAttribute:Ug,Uint8ClampedAttribute:GT,Uint8ClampedBufferAttribute:Hg,Uniform:Sl,UniformsLib:he,UniformsUtils:qg,UnsignedByteType:Nn,UnsignedInt248Type:Gr,UnsignedIntType:Os,UnsignedShort4444Type:Nm,UnsignedShort5551Type:Bm,UnsignedShort565Type:zm,UnsignedShortType:Zs,VSMShadowMap:Fr,Vector2:ne,Vector3:A,Vector4:Ye,VectorKeyframeTrack:ao,Vertex:zT,VertexColors:CT,VideoTexture:l0,WebGL1Renderer:s0,WebGLCubeRenderTarget:ll,WebGLMultipleRenderTargets:Bg,WebGLMultisampleRenderTarget:Gu,WebGLRenderTarget:un,WebGLRenderTargetCube:eA,WebGLRenderer:$e,WebGLUtils:r0,WireframeGeometry:nh,WireframeHelper:ZT,WrapAroundEnding:eo,XHRLoader:KT,ZeroCurvatureEnding:Oi,ZeroFactor:cm,ZeroSlopeEnding:Ui,ZeroStencilOp:Q_,sRGBEncoding:mi},Symbol.toStringTag,{value:"Module"}));var X0={exports:{}};(function(i,e){(function(t,n){i.exports=n()})(typeof self<"u"?self:Gv,()=>(()=>{var t={d:(p,y)=>{for(var x in y)t.o(y,x)&&!t.o(p,x)&&Object.defineProperty(p,x,{enumerable:!0,get:y[x]})},o:(p,y)=>Object.prototype.hasOwnProperty.call(p,y),r:p=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(p,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(p,"__esModule",{value:!0})}},n={};function r(p,y){return Math.floor(p+Math.random()*(y-p+1))}t.r(n),t.d(n,{default:()=>d}),Number.prototype.clamp=function(p,y){return Math.min(Math.max(this,p),y)};function s(p){for(;p.children&&p.children.length>0;)s(p.children[0]),p.remove(p.children[0]);p.geometry&&p.geometry.dispose(),p.material&&(Object.keys(p.material).forEach(y=>{p.material[y]&&p.material[y]!==null&&typeof p.material[y].dispose=="function"&&p.material[y].dispose()}),p.material.dispose())}const o=typeof window=="object";let a=o&&window.THREE||{};o&&!window.VANTA&&(window.VANTA={});const l=o&&window.VANTA||{};l.register=(p,y)=>l[p]=x=>new y(x),l.version="0.5.24";const c=function(){return Array.prototype.unshift.call(arguments,"[VANTA]"),console.error.apply(this,arguments)};l.VantaBase=class{constructor(p={}){if(!o)return!1;l.current=this,this.windowMouseMoveWrapper=this.windowMouseMoveWrapper.bind(this),this.windowTouchWrapper=this.windowTouchWrapper.bind(this),this.windowGyroWrapper=this.windowGyroWrapper.bind(this),this.resize=this.resize.bind(this),this.animationLoop=this.animationLoop.bind(this),this.restart=this.restart.bind(this);const y=typeof this.getDefaultOptions=="function"?this.getDefaultOptions():this.defaultOptions;if(this.options=Object.assign({mouseControls:!0,touchControls:!0,gyroControls:!1,minHeight:200,minWidth:200,scale:1,scaleMobile:1},y),(p instanceof HTMLElement||typeof p=="string")&&(p={el:p}),Object.assign(this.options,p),this.options.THREE&&(a=this.options.THREE),this.el=this.options.el,this.el==null)c('Instance needs "el" param!');else if(!(this.options.el instanceof HTMLElement)){const _=this.el;if(this.el=(x=_,document.querySelector(x)),!this.el)return void c("Cannot find element",_)}var x,m;this.prepareEl(),this.initThree(),this.setSize();try{this.init()}catch(_){return c("Init error",_),this.renderer&&this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),void(this.options.backgroundColor&&(console.log("[VANTA] Falling back to backgroundColor"),this.el.style.background=(m=this.options.backgroundColor,typeof m=="number"?"#"+("00000"+m.toString(16)).slice(-6):m)))}this.initMouse(),this.resize(),this.animationLoop();const g=window.addEventListener;g("resize",this.resize),window.requestAnimationFrame(this.resize),this.options.mouseControls&&(g("scroll",this.windowMouseMoveWrapper),g("mousemove",this.windowMouseMoveWrapper)),this.options.touchControls&&(g("touchstart",this.windowTouchWrapper),g("touchmove",this.windowTouchWrapper)),this.options.gyroControls&&g("deviceorientation",this.windowGyroWrapper)}setOptions(p={}){Object.assign(this.options,p),this.triggerMouseMove()}prepareEl(){let p,y;if(typeof Node<"u"&&Node.TEXT_NODE)for(p=0;p<this.el.childNodes.length;p++){const x=this.el.childNodes[p];if(x.nodeType===Node.TEXT_NODE){const m=document.createElement("span");m.textContent=x.textContent,x.parentElement.insertBefore(m,x),x.remove()}}for(p=0;p<this.el.children.length;p++)y=this.el.children[p],getComputedStyle(y).position==="static"&&(y.style.position="relative"),getComputedStyle(y).zIndex==="auto"&&(y.style.zIndex=1);getComputedStyle(this.el).position==="static"&&(this.el.style.position="relative")}applyCanvasStyles(p,y={}){Object.assign(p.style,{position:"absolute",zIndex:0,top:0,left:0,background:""}),Object.assign(p.style,y),p.classList.add("vanta-canvas")}initThree(){a.WebGLRenderer?(this.renderer=new a.WebGLRenderer({alpha:!0,antialias:!0}),this.el.appendChild(this.renderer.domElement),this.applyCanvasStyles(this.renderer.domElement),isNaN(this.options.backgroundAlpha)&&(this.options.backgroundAlpha=1),this.scene=new a.Scene):console.warn("[VANTA] No THREE defined on window")}getCanvasElement(){return this.renderer?this.renderer.domElement:this.p5renderer?this.p5renderer.canvas:void 0}getCanvasRect(){const p=this.getCanvasElement();return!!p&&p.getBoundingClientRect()}windowMouseMoveWrapper(p){const y=this.getCanvasRect();if(!y)return!1;const x=p.clientX-y.left,m=p.clientY-y.top;x>=0&&m>=0&&x<=y.width&&m<=y.height&&(this.mouseX=x,this.mouseY=m,this.options.mouseEase||this.triggerMouseMove(x,m))}windowTouchWrapper(p){const y=this.getCanvasRect();if(!y)return!1;if(p.touches.length===1){const x=p.touches[0].clientX-y.left,m=p.touches[0].clientY-y.top;x>=0&&m>=0&&x<=y.width&&m<=y.height&&(this.mouseX=x,this.mouseY=m,this.options.mouseEase||this.triggerMouseMove(x,m))}}windowGyroWrapper(p){const y=this.getCanvasRect();if(!y)return!1;const x=Math.round(2*p.alpha)-y.left,m=Math.round(2*p.beta)-y.top;x>=0&&m>=0&&x<=y.width&&m<=y.height&&(this.mouseX=x,this.mouseY=m,this.options.mouseEase||this.triggerMouseMove(x,m))}triggerMouseMove(p,y){p===void 0&&y===void 0&&(this.options.mouseEase?(p=this.mouseEaseX,y=this.mouseEaseY):(p=this.mouseX,y=this.mouseY)),this.uniforms&&(this.uniforms.iMouse.value.x=p/this.scale,this.uniforms.iMouse.value.y=y/this.scale);const x=p/this.width,m=y/this.height;typeof this.onMouseMove=="function"&&this.onMouseMove(x,m)}setSize(){this.scale||(this.scale=1),typeof navigator<"u"&&(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<600)&&this.options.scaleMobile?this.scale=this.options.scaleMobile:this.options.scale&&(this.scale=this.options.scale),this.width=Math.max(this.el.offsetWidth,this.options.minWidth),this.height=Math.max(this.el.offsetHeight,this.options.minHeight)}initMouse(){(!this.mouseX&&!this.mouseY||this.mouseX===this.options.minWidth/2&&this.mouseY===this.options.minHeight/2)&&(this.mouseX=this.width/2,this.mouseY=this.height/2,this.triggerMouseMove(this.mouseX,this.mouseY))}resize(){this.setSize(),this.camera&&(this.camera.aspect=this.width/this.height,typeof this.camera.updateProjectionMatrix=="function"&&this.camera.updateProjectionMatrix()),this.renderer&&(this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio/this.scale)),typeof this.onResize=="function"&&this.onResize()}isOnScreen(){const p=this.el.offsetHeight,y=this.el.getBoundingClientRect(),x=window.pageYOffset||(document.documentElement||document.body.parentNode||document.body).scrollTop,m=y.top+x;return m-window.innerHeight<=x&&x<=m+p}animationLoop(){this.t||(this.t=0),this.t2||(this.t2=0);const p=performance.now();if(this.prevNow){let y=(p-this.prevNow)/16.666666666666668;y=Math.max(.2,Math.min(y,5)),this.t+=y,this.t2+=(this.options.speed||1)*y,this.uniforms&&(this.uniforms.iTime.value=.016667*this.t2)}return this.prevNow=p,this.options.mouseEase&&(this.mouseEaseX=this.mouseEaseX||this.mouseX||0,this.mouseEaseY=this.mouseEaseY||this.mouseY||0,Math.abs(this.mouseEaseX-this.mouseX)+Math.abs(this.mouseEaseY-this.mouseY)>.1&&(this.mouseEaseX+=.05*(this.mouseX-this.mouseEaseX),this.mouseEaseY+=.05*(this.mouseY-this.mouseEaseY),this.triggerMouseMove(this.mouseEaseX,this.mouseEaseY))),(this.isOnScreen()||this.options.forceAnimate)&&(typeof this.onUpdate=="function"&&this.onUpdate(),this.scene&&this.camera&&(this.renderer.render(this.scene,this.camera),this.renderer.setClearColor(this.options.backgroundColor,this.options.backgroundAlpha)),this.fps&&this.fps.update&&this.fps.update(),typeof this.afterRender=="function"&&this.afterRender()),this.req=window.requestAnimationFrame(this.animationLoop)}restart(){if(this.scene)for(;this.scene.children.length;)this.scene.remove(this.scene.children[0]);typeof this.onRestart=="function"&&this.onRestart(),this.init()}init(){typeof this.onInit=="function"&&this.onInit()}destroy(){typeof this.onDestroy=="function"&&this.onDestroy();const p=window.removeEventListener;p("touchstart",this.windowTouchWrapper),p("touchmove",this.windowTouchWrapper),p("scroll",this.windowMouseMoveWrapper),p("mousemove",this.windowMouseMoveWrapper),p("deviceorientation",this.windowGyroWrapper),p("resize",this.resize),window.cancelAnimationFrame(this.req);const y=this.scene;y&&y.children&&s(y),this.renderer&&(this.renderer.domElement&&this.el.removeChild(this.renderer.domElement),this.renderer=null,this.scene=null),l.current===this&&(l.current=null)}};const u=l.VantaBase;let h=typeof window=="object"&&window.THREE;class f extends u{static initClass(){this.prototype.ww=100,this.prototype.hh=80,this.prototype.waveNoise=4}constructor(y){h=y.THREE||h,super(y)}getMaterial(){const y={color:this.options.color,shininess:this.options.shininess,flatShading:!0,side:h.DoubleSide};return new h.MeshPhongMaterial(y)}onInit(){let y,x;const m=this.getMaterial(),g=new h.BufferGeometry;this.gg=[];const _=[];for(y=0;y<=this.ww;y++)for(this.gg[y]=[],x=0;x<=this.hh;x++){const H=_.length,F=new h.Vector3(18*(y-.5*this.ww),((v=0)==null&&(v=0),(S=this.waveNoise)==null&&(S=1),v+Math.random()*(S-v)-10),18*(.5*this.hh-x));_.push(F),this.gg[y][x]=H}var v,S;g.setFromPoints(_);const T=[];for(y=1;y<=this.ww;y++)for(x=1;x<=this.hh;x++){let H,F;const P=this.gg[y][x],ee=this.gg[y][x-1],k=this.gg[y-1][x],W=this.gg[y-1][x-1];r(0,1)?(H=[W,ee,k],F=[ee,k,P]):(H=[W,ee,P],F=[W,k,P]),T.push(...H,...F)}g.setIndex(T),this.plane=new h.Mesh(g,m),this.scene.add(this.plane);const b=new h.AmbientLight(16777215,.9);this.scene.add(b);const R=new h.PointLight(16777215,.9);R.position.set(-100,250,-100),this.scene.add(R),this.camera=new h.PerspectiveCamera(35,this.width/this.height,50,1e4),this.cameraPosition=new h.Vector3(240,200,390),this.cameraTarget=new h.Vector3(140,-30,190),this.camera.position.copy(this.cameraPosition),this.scene.add(this.camera)}onUpdate(){let y;this.plane.material.color.set(this.options.color),this.plane.material.shininess=this.options.shininess,this.camera.ox=this.cameraPosition.x/this.options.zoom,this.camera.oy=this.cameraPosition.y/this.options.zoom,this.camera.oz=this.cameraPosition.z/this.options.zoom,this.controls!=null&&this.controls.update();const x=this.camera;Math.abs(x.tx-x.position.x)>.01&&(y=x.tx-x.position.x,x.position.x+=.02*y),Math.abs(x.ty-x.position.y)>.01&&(y=x.ty-x.position.y,x.position.y+=.02*y),Math.abs(x.tz-x.position.z)>.01&&(y=x.tz-x.position.z,x.position.z+=.02*y),x.lookAt(this.cameraTarget),this.oy=this.oy||{};for(let m=0;m<this.plane.geometry.attributes.position.array.length;m+=3){const g={x:this.plane.geometry.attributes.position.array[m],y:this.plane.geometry.attributes.position.array[m+1],z:this.plane.geometry.attributes.position.array[m+2],oy:this.oy[m]};if(g.oy){const _=this.options.waveSpeed,v=Math.sqrt(_)*Math.cos(-g.x-.7*g.z),S=Math.sin(_*this.t*.02-_*g.x*.025+_*g.z*.015+v),T=Math.pow(S+1,2)/4;g.y=g.oy+T*this.options.waveHeight,this.plane.geometry.attributes.position.array[m+1]=g.y}else this.oy[m]=g.y}this.plane.geometry.attributes.position.setUsage(h.DynamicDrawUsage),this.plane.geometry.computeVertexNormals(),this.plane.geometry.attributes.position.needsUpdate=!0,this.wireframe&&(this.wireframe.geometry.fromGeometry(this.plane.geometry),this.wireframe.geometry.computeFaceNormals())}onMouseMove(y,x){const m=this.camera;return m.oy||(m.oy=m.position.y,m.ox=m.position.x,m.oz=m.position.z),m.tx=m.ox+100*(y-.5)/this.options.zoom,m.ty=m.oy+-100*(x-.5)/this.options.zoom,m.tz=m.oz+-50*(y-.5)/this.options.zoom}}f.prototype.defaultOptions={color:21896,shininess:30,waveHeight:15,waveSpeed:1,zoom:1},f.initClass();const d=l.register("WAVES",f);return n})())})(X0);var hA=X0.exports;const fA=kv(hA),dA={xmlns:"http://www.w3.org/2000/svg",fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",class:"icon icon-tabler icons-tabler-outline icon-tabler-server",viewBox:"0 0 24 24"},pA=B("path",{stroke:"none",d:"M0 0h24v24H0z"},null,-1),mA=B("path",{d:"M3 7a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v2a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zM3 15a3 3 0 0 1 3-3h12a3 3 0 0 1 3 3v2a3 3 0 0 1-3 3H6a3 3 0 0 1-3-3zM7 8v.01M7 16v.01"},null,-1),gA=[pA,mA];function yA(i,e){return en(),wn("svg",dA,[...gA])}const zd={render:yA},xA={xmlns:"http://www.w3.org/2000/svg",fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",class:"lucide lucide-database-icon lucide-database",viewBox:"0 0 24 24"},vA=B("ellipse",{cx:"12",cy:"5",rx:"9",ry:"3"},null,-1),_A=B("path",{d:"M3 5v14a9 3 0 0 0 18 0V5"},null,-1),wA=B("path",{d:"M3 12a9 3 0 0 0 18 0"},null,-1),bA=[vA,_A,wA];function MA(i,e){return en(),wn("svg",xA,[...bA])}const SA={render:MA},EA={xmlns:"http://www.w3.org/2000/svg",fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",class:"lucide lucide-info-icon lucide-info",viewBox:"0 0 24 24"},TA=B("circle",{cx:"12",cy:"12",r:"10"},null,-1),AA=B("path",{d:"M12 16v-4M12 8h.01"},null,-1),CA=[TA,AA];function LA(i,e){return en(),wn("svg",EA,[...CA])}const RA={render:LA},PA={xmlns:"http://www.w3.org/2000/svg",fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",class:"lucide lucide-shield-check-icon lucide-shield-check",viewBox:"0 0 24 24"},IA=B("path",{d:"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"},null,-1),DA=B("path",{d:"m9 12 2 2 4-4"},null,-1),FA=[IA,DA];function NA(i,e){return en(),wn("svg",PA,[...FA])}const BA={render:NA},zA=""+new URL("NetworkSupportandSecurityUpdate20250619-28-lkvc3z-mvYWRiuc.pdf",import.meta.url).href,OA=""+new URL("NetworkingDevicesandBasicConfigUpdate20250508-28-4l6eah-C6JRukHh.pdf",import.meta.url).href,UA=""+new URL("NetworkingBasicsUpdate20250508-27-2xxyip-C9HM8NJw.pdf",import.meta.url).href,HA=""+new URL("NetworkAddressingandBasicTroubleshootingUpdate20250508-27-4nh4wl-PslwpK1m.pdf",import.meta.url).href;typeof process<"u"&&process&&typeof process.nextTick=="function"&&(typeof setImmediate=="function"?setImmediate:process.nextTick);const GA={class:"relative w-full text-white mx-auto shadow-slate-800/40 shadow-sm"},kA={class:"p-8 bg-sky-800/60 print:bg-sky-800"},VA={class:"max-w-screen-lg flex flex-col print:flex-row print:items-center md:flex-row md:items-center justify-start gap-8 mx-auto"},WA=kx('<div class="flex-1 lg:ml-8"><div class="py-2 text-white/60"> 你好，我是 <p class="text-3xl text-white/100"> Wing </p></div><ul class="list-none pl-0 flex-1 text-white/60 py-2"><li>Network Engineer</li><li>Programmer</li></ul><ul class="list-none pl-0"><li class="list-item"> 電郵： <a class="text-green-300" href="mailto:steely.wing@gmail.com">steely.wing@gmail.com</a></li><li> Blog： <a class="text-green-300" href="https://steelywing.github.io/note/blog/"> https://steelywing.github.io/note/blog/ </a></li></ul></div>',1),qA={class:"flex justify-start"},XA={class:"lg:float-none mx-2 p-2 text-center bg-sky-400/60"},YA={class:"lg:max-w-10/12 mx-auto"},$A={class:"relative bg-sky-900/60 p-4 text-slate-100"},JA={class:"max-w-screen-lg mx-auto px-8"},jA={class:"inline-flex items-center"},ZA={class:"max-w-screen-lg mx-auto px-8"},KA=B("h4",{class:"text-red-500"},[Re(" 因已找到工作，這裡只留下基本資訊，如想聯絡可以電郵給我： "),B("a",{class:"",href:"mailto:steely.wing@gmail.com"},"steely.wing@gmail.com")],-1),QA=B("ul",null,[B("li",null,[Re(" 12 年 IT 相關工作經驗： "),B("ul",null,[B("li",null,"主要負責網路、網絡安全、系統管理及相關工作"),B("li",null,"網絡設定及維護：投注系統網絡、投注站網絡、辦公室網絡 設定及維護"),B("li",null,"系統部署及管理：VM 伺服器、網頁伺服器、資料庫伺服器、檔案伺服器 部置及管理"),B("li",null,"獨立網頁應用開發經驗")])]),B("li",null," 獨立開發 Web Frontend 與 Backend 經驗， 程式語言包括 PHP、Python、JavaScript、Node.js。 ")],-1),e2={class:"max-w-screen-lg mx-auto md:flex print:flex flex-row *:flex-1 gap-8 items-start px-8"},t2=B("h4",null," 網絡 ",-1),n2=B("a",{href:"https://www.credly.com/badges/7cea20a3-950d-4688-a4dc-57aa30270b8b/public_url"}," Cisco Network Support and Security ",-1),i2=["href"],r2=B("a",{href:"https://www.credly.com/badges/cbf1d06b-aabc-488f-a0e2-4f7df4812dde"}," Cisco Network Addressing and Basic Troubleshooting ",-1),s2=["href"],o2=B("a",{href:"https://www.credly.com/badges/e059702d-1cd8-46a5-852b-776ac8df45e8"}," Cisco Networking Devices and Initial Configuration ",-1),a2=["href"],l2=B("a",{href:"https://www.credly.com/badges/78d5bb20-b5b9-4580-ab1b-5c01161f25da"}," Cisco Networking Basics ",-1),c2=["href"],u2=B("h4",null," Programming ",-1),h2=B("ul",null,[B("li",null,[B("a",{href:"https://www.freecodecamp.org/certification/SteelyWing/javascript-algorithms-and-data-structures-v8"}," JavaScript Algorithms and Data Structures ")])],-1),f2=B("h4",null,null,-1),d2=B("code",null,"CRUD",-1),p2=B("code",null,"INDEX",-1),m2=B("code",null,"TRANSACTION",-1),g2=B("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24","stroke-width":"1.5",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[B("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),B("path",{d:"M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"}),B("path",{d:"M7 20h10"}),B("path",{d:"M9 16v4"}),B("path",{d:"M15 16v4"})],-1),y2=B("h4",null,null,-1),x2={class:"max-w-screen-lg mx-auto md:flex print:flex flex-row *:flex-1 gap-8 items-start px-8"},v2=B("ul",null,[B("li",null,"Layer 2 / Layer 3 Switch 設定"),B("li",null,"VLAN, ACL, DHCP, STP, Routing, SPAN, SNMP, QoS 設定"),B("li",null,"ASA Firewall: ACL, IPsec VPN 設定")],-1),_2=B("ul",null,[B("li",null,"ACL / Policy 設定"),B("li",null,"Reverse Proxy / Port Forward, Load Balancing 設定"),B("li",null,"IPsec VPN 設定")],-1),w2=B("ul",null,[B("li",null,"ACL / Policy 設定"),B("li",null,"Reverse Proxy / Port Forward, Load Balancing 設定"),B("li",null,"IPsec VPN, OpenVPN, WireGuard VPN 設定"),B("li",null,"Traffic Shaping (QoS) 設定")],-1),b2=B("h4",null," VPN ",-1),M2=B("h4",null,"VM / Container",-1),S2=B("ul",null,[B("li",null,"VMware ESXi 部置及管理、Docker 部置及管理 經驗")],-1),E2=B("h4",null," Linux System Administration ",-1),T2=B("li",null,"Ubuntu, RedHat based OS",-1),A2=B("ul",null,[B("li",null,"Web Server"),B("li",null,"SSL/TLS configuration"),B("li",null,"Access Control"),B("li",null,"Load Balancing"),B("li",null,"Reverse Proxy")],-1),C2=B("ul",null,[B("li",null,"Web Server"),B("li",null,"PHP FastCGI"),B("li",null,"SSL/TLS configuration"),B("li",null,"Access Control"),B("li",null,"Load Balancing"),B("li",null,"Reverse Proxy"),B("li",null,"TCP / UDP Proxy")],-1),L2={class:"max-w-screen-lg mx-auto md:flex print:flex flex-row *:flex-1 gap-8 items-start px-8"},R2=B("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24","stroke-width":"2",stroke:"currentColor",fill:"none","stroke-linecap":"round","stroke-linejoin":"round"},[B("path",{stroke:"none",d:"M0 0h24v24H0z",fill:"none"}),B("path",{d:"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0"}),B("path",{d:"M3.6 9h16.8"}),B("path",{d:"M3.6 15h16.8"}),B("path",{d:"M11.5 3a17 17 0 0 0 0 18"}),B("path",{d:"M12.5 3a17 17 0 0 1 0 18"})],-1),P2={class:"md:flex print:flex flex-row gap-x-4 *:flex-1"},I2=B("a",{href:"https://jquery.com/"}," jQuery ",-1),D2=B("a",{href:"https://vuejs.org/"}," Vue.js ",-1),F2=B("li",null," Vite.js / Rollup.js ",-1),N2=B("ul",null,[B("li",null," Node.js / Bun / Deno "),B("li",null,[B("a",{href:"https://expressjs.com/"}," Express "),Re(" / "),B("a",{href:"https://fastify.dev/"}," Fastify ")]),B("li",null,"了解 CORS, JWT, Cookie Session, Auth, REST")],-1),B2=B("h4",null," CSS ",-1),z2=B("ul",null,[B("li",null,[B("a",{href:"https://getbootstrap.com/"}," Bootstrap ")]),B("li",null,[B("a",{href:"https://tailwindcss.com/"}," Tailwind CSS ")]),B("li",null," Responsive Web Design ")],-1),O2=B("ul",null,[B("li",null,[B("a",{href:"https://www.slimframework.com/"}," Slim Framework ")]),B("li",null,[B("a",{href:"https://github.com/silexphp/Silex"}," Silex Framework "),Re(" (Deprecated) ")])],-1),U2=B("div",null,[B("ul",null,[B("li",null,[B("a",{href:"https://flask.palletsprojects.com/"}," Flask ")])])],-1),H2={__name:"Contact",setup(i){function e(s){const o=new Date,a=new Date(s);let l=o.getFullYear()-a.getFullYear();const c=o.getMonth()-a.getMonth();return(c<0||c===0&&o.getDate()<a.getDate())&&l--,l}const t=Ec(),n=Ec(0);n.value=e("1983-05-22");let r;return dp(()=>{r=fA({el:t.value,THREE:uA,mouseControls:!0,touchControls:!0,gyroControls:!1,minHeight:200,minWidth:200,scale:2,scaleMobile:2,backgroundColor:481669,color:481669,showDots:!1})}),pp(()=>{r&&r.destroy()}),(s,o)=>(en(),wn(Xt,null,[B("section",GA,[B("div",kA,[B("div",VA,[WA,B("div",qA,[B("div",XA,[Se(qt(G_),{value:"https://steelywing.github.io/resume/?p=cv2025",width:"128"}),Re(" 履歷網址 ")])])])]),B("div",{ref_key:"header",ref:t,class:"-z-10 absolute top-0 right-0 w-full h-full overflow-hidden"},null,512)]),B("div",YA,[B("div",$A,[B("div",JA,[B("div",jA,[Se(qt(Op),{class:"text-yellow-300 stroke-yellow-600 w-4 h-4 ms-1"})]),Re(" ：表示我擅長的程度 ")])]),B("div",ZA,[Se(Ti,null,{icon:st(()=>[Se(qt(RA))]),title:st(()=>[Re(" 簡介 ")]),default:st(()=>[KA,QA]),_:1})]),B("div",e2,[B("div",null,[Se(Ti,null,{icon:st(()=>[Se(qt(BA))]),title:st(()=>[Re(" 證書 ")]),default:st(()=>[B("div",null,[t2,B("ul",null,[B("li",null,[n2,Re(" ("),B("a",{href:qt(zA)},"PDF",8,i2),Re(") ")]),B("li",null,[r2,Re(" ("),B("a",{href:qt(HA)},"PDF",8,s2),Re(") ")]),B("li",null,[o2,Re(" ("),B("a",{href:qt(OA)},"PDF",8,a2),Re(") ")]),B("li",null,[l2,Re(" ("),B("a",{href:qt(UA)},"PDF",8,c2),Re(") ")])]),u2,h2])]),_:1})]),B("div",null,[Se(Ti,null,{icon:st(()=>[Se(qt(SA))]),title:st(()=>[Re(" DataBase 資料庫相關 ")]),default:st(()=>[B("div",null,[f2,B("ul",null,[B("li",null,[B("div",null,[Re(" MySQL / MariaDB "),Se(it,{rating:"4"})]),d2,Re(" operation，"),p2,Re(" 優化，"),m2,Re(" operation，備份及還原 ")]),B("li",null,[Re(" SQLite "),Se(it,{rating:"4"})])])])]),_:1}),Se(Ti,null,{icon:st(()=>[g2]),title:st(()=>[Re(" 電腦相關技能 ")]),default:st(()=>[B("div",null,[y2,B("ul",null,[B("li",null,[Re(" Microsoft Word, Excel "),Se(it,{rating:"3"})]),B("li",null,[Re(" Adobe PhotoShop, Illustrator "),Se(it,{rating:"3"})])])])]),_:1})])]),B("div",x2,[Se(Ti,null,{icon:st(()=>[Se(qt(zd))]),title:st(()=>[Re(" 網絡相關技能 ")]),default:st(()=>[B("div",null,[B("h4",null,[Re(" Cisco "),Se(it,{rating:"4"})]),v2]),B("h4",null,[Re(" FortiGate Firewall "),Se(it,{rating:"4"})]),_2,B("h4",null,[Re(" pfSense / OPNsense Firewall "),Se(it,{rating:"4"})]),w2,b2,B("ul",null,[B("li",null,[Re(" IPsec "),Se(it,{rating:"3"})]),B("li",null,[Re(" OpenVPN "),Se(it,{rating:"4"})]),B("li",null,[Re(" WireGuard "),Se(it,{rating:"4"})])])]),_:1}),Se(Ti,null,{icon:st(()=>[Se(qt(zd))]),title:st(()=>[Re(" 系統 / 伺服器 相關技能 ")]),default:st(()=>[B("div",null,[M2,S2,E2,B("ul",null,[T2,B("li",null,[Re(" Bind9 DNS "),Se(it,{rating:"4"})]),B("li",null,[Re(" Samba File Server "),Se(it,{rating:"4"})]),B("li",null,[Re(" Zabbix "),Se(it,{rating:"4"})])]),B("h4",null,[Re(" Apache "),Se(it,{rating:"4"})]),A2,B("h4",null,[Re(" Nginx "),Se(it,{rating:"4"})]),C2])]),_:1})]),B("div",L2,[Se(Ti,null,{icon:st(()=>[R2]),title:st(()=>[Re(" Web / Programming 相關技能 ")]),default:st(()=>[B("div",P2,[B("div",null,[B("h4",null,[Re(" JavaScript Frontend "),Se(it,{rating:"4"})]),B("ul",null,[B("li",null,[I2,Se(it,{rating:"5"})]),B("li",null,[D2,Se(it,{rating:"3"})]),F2]),B("h4",null,[Re(" JavaScript Backend "),Se(it,{rating:"3"})]),N2]),B("div",null,[B2,z2,B("h4",null,[Re(" PHP "),Se(it,{rating:"3"})]),O2,B("h4",null,[Re(" Python "),Se(it,{rating:"2"})]),U2,B("h4",null,[Re(" ASP.NET (C#) "),Se(it,{rating:"2"})])])])]),_:1})])])],64))}};Ev(H2).mount("#app");export{G2 as __vite_legacy_guard};
